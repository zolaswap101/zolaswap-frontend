{"version":3,"sources":["packages/uikit/src/util/getThemeValue.ts","packages/uikit/src/components/Svg/Svg.tsx","packages/uikit/src/components/Svg/Icons/CheckmarkCircle.tsx","packages/uikit/src/components/Svg/Icons/Error.tsx","packages/uikit/src/components/Svg/Icons/Block.tsx","packages/uikit/src/components/Svg/Icons/Info.tsx","packages/uikit/src/components/Text/Text.tsx","packages/uikit/src/components/Text/TooltipText.tsx","packages/uikit/src/util/getExternalLinkProps.ts","packages/uikit/src/components/Button/types.ts","packages/uikit/src/components/Button/theme.ts","packages/uikit/src/components/Button/StyledButton.tsx","packages/uikit/src/components/Button/Button.tsx","packages/uikit/src/components/Button/IconButton.tsx","packages/uikit/src/components/Svg/Icons/Add.tsx","packages/uikit/src/components/Svg/Icons/ArrowBack.tsx","packages/uikit/src/components/Svg/Icons/ArrowDown.tsx","packages/uikit/src/components/Svg/Icons/ArrowDropDown.tsx","packages/uikit/src/components/Svg/Icons/ArrowDropUp.tsx","packages/uikit/src/components/Svg/Icons/ArrowForward.tsx","packages/uikit/src/components/Svg/Icons/ArrowLast.tsx","packages/uikit/src/components/Svg/Icons/ArrowUp.tsx","packages/uikit/src/components/Svg/Icons/AutoRenew.tsx","packages/uikit/src/components/Svg/Icons/BunnyPlaceholder.tsx","packages/uikit/src/components/Svg/Icons/CardView.tsx","packages/uikit/src/components/Svg/Icons/Calculate.tsx","packages/uikit/src/components/Svg/Icons/Checkmark.tsx","packages/uikit/src/components/Svg/Icons/ChevronDown.tsx","packages/uikit/src/components/Svg/Icons/ChevronRight.tsx","packages/uikit/src/components/Svg/Icons/ChevronUp.tsx","packages/uikit/src/components/Svg/Icons/Close.tsx","packages/uikit/src/components/Svg/Icons/Cog.tsx","packages/uikit/src/components/Svg/Icons/Community.tsx","packages/uikit/src/components/Svg/Icons/Copy.tsx","packages/uikit/src/components/Svg/Icons/Help.tsx","packages/uikit/src/components/Svg/Icons/History.tsx","packages/uikit/src/components/Svg/Icons/ListView.tsx","packages/uikit/src/components/Svg/Icons/Logo.tsx","packages/uikit/src/components/Svg/Icons/Logout.tsx","packages/uikit/src/components/Svg/Icons/Metamask.tsx","packages/uikit/src/components/Svg/Icons/Minus.tsx","packages/uikit/src/components/Svg/Icons/OpenNew.tsx","packages/uikit/src/components/Svg/Icons/Pencil.tsx","packages/uikit/src/widgets/Menu/icons/Predictions.tsx","packages/uikit/src/components/Svg/Icons/Prize.tsx","packages/uikit/src/components/Svg/Icons/Verified.tsx","packages/uikit/src/components/Svg/Icons/PresentWon.tsx","packages/uikit/src/components/Svg/Icons/Refresh.tsx","packages/uikit/src/components/Svg/Icons/SmallDot.tsx","packages/uikit/src/components/Svg/Icons/StarFill.tsx","packages/uikit/src/components/Svg/Icons/StarLine.tsx","packages/uikit/src/components/Svg/Icons/SwapVert.tsx","packages/uikit/src/components/Svg/Icons/Timer.tsx","packages/uikit/src/components/Svg/Icons/Vote.tsx","packages/uikit/src/components/Svg/Icons/Warning.tsx","packages/uikit/src/components/Svg/Icons/WalletFilled.tsx","packages/uikit/src/components/Svg/Icons/Wait.tsx","packages/uikit/src/components/Svg/Icons/Velas.tsx","packages/uikit/src/components/Button/ExpandableButton.tsx","packages/uikit/src/components/Box/Box.tsx","packages/uikit/src/components/Box/Flex.tsx","packages/uikit/src/components/Alert/types.ts","packages/uikit/src/components/Alert/Alert.tsx","packages/uikit/src/components/Box/Grid.tsx","packages/uikit/src/components/Input/types.ts","packages/uikit/src/components/Input/Input.tsx","packages/uikit/src/components/BalanceInput/styles.tsx","packages/uikit/src/components/BalanceInput/BalanceInput.tsx","packages/uikit/src/components/Breadcrumbs/Breadcrumbs.tsx","packages/uikit/src/components/ButtonMenu/ButtonMenu.tsx","packages/uikit/src/components/ButtonMenu/ButtonMenuItem.tsx","packages/uikit/src/components/Card/StyledCard.tsx","packages/uikit/src/components/Card/Card.tsx","packages/uikit/src/components/Card/CardBody.tsx","packages/uikit/src/components/Card/CardHeader.tsx","packages/uikit/src/components/Card/CardFooter.tsx","packages/uikit/src/components/Card/CardRibbon.tsx","packages/uikit/src/components/Checkbox/types.ts","packages/uikit/src/components/Checkbox/Checkbox.tsx","packages/uikit/src/components/Dropdown/Dropdown.tsx","packages/uikit/src/components/FallingBunnies/FallingBunnies.tsx","packages/uikit/src/components/Heading/types.ts","packages/uikit/src/components/Heading/Heading.tsx","packages/uikit/src/components/Image/options.ts","packages/uikit/src/components/Image/Wrapper.tsx","packages/uikit/src/components/Image/Placeholder.tsx","packages/uikit/src/components/Image/BackgroundImage.tsx","packages/uikit/src/components/Image/Image.tsx","packages/uikit/src/components/Image/TokenImage.tsx","packages/uikit/src/components/Image/types.ts","packages/uikit/src/components/Image/styles.tsx","packages/uikit/src/components/Image/TokenPairImage.tsx","packages/uikit/src/components/Input/InputGroup.tsx","packages/uikit/src/components/Image/ProfileAvatar.tsx","packages/uikit/src/components/Layouts/BaseLayout.tsx","packages/uikit/src/components/Layouts/CardsLayout.tsx","packages/uikit/src/components/Link/Link.tsx","packages/uikit/src/components/Link/LinkExternal.tsx","packages/uikit/src/components/Message/theme.ts","packages/uikit/src/components/Message/Message.tsx","packages/uikit/src/components/NotificationDot/NotificationDot.tsx","packages/uikit/src/components/Overlay/Overlay.tsx","packages/uikit/src/components/PancakeToggle/types.ts","packages/uikit/src/components/PancakeToggle/StyledPancakeToggle.tsx","packages/uikit/src/components/PancakeToggle/PancakeToggle.tsx","packages/uikit/src/components/Progress/types.ts","packages/uikit/src/components/Progress/themes.ts","packages/uikit/src/components/Progress/StyledProgress.tsx","packages/uikit/src/components/Progress/ProgressBunnyWrapper.tsx","packages/uikit/src/components/Radio/types.ts","packages/uikit/src/components/Radio/Radio.tsx","packages/uikit/src/components/Slider/styles.ts","packages/uikit/src/components/Slider/Slider.tsx","packages/uikit/src/components/Skeleton/types.ts","packages/uikit/src/components/Skeleton/Skeleton.tsx","packages/uikit/src/components/Spinner/PanIcon.tsx","packages/uikit/src/components/Spinner/PancakeIcon.tsx","packages/uikit/src/components/Spinner/Spinner.tsx","packages/uikit/src/components/Stepper/Step.tsx","packages/uikit/src/components/Stepper/Stepper.tsx","packages/uikit/src/components/Table/Cell.tsx","packages/uikit/src/components/BaseMenu/styles.tsx","packages/uikit/src/components/BaseMenu/BaseMenu.tsx","packages/uikit/src/components/Table/Table.tsx","packages/uikit/src/components/Table/utils.ts","packages/uikit/src/components/Table/hooks.tsx","packages/uikit/src/components/TabMenu/Tab.tsx","packages/uikit/src/components/TabMenu/TabMenu.tsx","packages/uikit/src/components/Tag/types.ts","packages/uikit/src/components/Tag/theme.ts","packages/uikit/src/components/Tag/StyledTag.tsx","packages/uikit/src/components/Tag/Tag.tsx","packages/uikit/src/components/Toggle/types.ts","packages/uikit/src/components/Toggle/StyledToggle.tsx","packages/uikit/src/components/Toggle/Toggle.tsx","packages/uikit/src/theme/base.ts","packages/uikit/src/hooks/useMatchBreakpoints.ts","packages/uikit/src/hooks/useKonamiCheatCode.ts","packages/uikit/src/theme/colors.ts","packages/uikit/src/components/Alert/theme.ts","packages/uikit/src/components/Card/theme.ts","packages/uikit/src/components/PancakeToggle/theme.ts","packages/uikit/src/components/Radio/theme.ts","packages/uikit/src/components/Toggle/theme.ts","packages/uikit/src/widgets/Menu/theme.ts","packages/uikit/src/widgets/Modal/theme.ts","packages/uikit/src/components/Tooltip/theme.ts","packages/uikit/src/theme/dark.ts","packages/uikit/src/theme/light.ts","packages/uikit/src/util/isTouchDevice.ts","packages/uikit/src/hooks/useTooltip/StyledTooltip.tsx","packages/uikit/src/hooks/useTooltip/useTooltip.tsx","packages/uikit/src/widgets/Modal/styles.tsx","packages/uikit/src/widgets/Modal/Modal.tsx","packages/uikit/src/widgets/Modal/ModalContext.tsx","packages/uikit/src/widgets/Modal/useModal.ts","packages/uikit/src/widgets/Menu/icons/Farm.tsx","packages/uikit/src/widgets/Menu/icons/Groups.tsx","packages/uikit/src/widgets/Menu/icons/Hamburger.tsx","packages/uikit/src/widgets/Menu/icons/HamburgerClose.tsx","packages/uikit/src/widgets/Menu/icons/Home.tsx","packages/uikit/src/widgets/Menu/icons/Ifo.tsx","packages/uikit/src/widgets/Menu/icons/Info.tsx","packages/uikit/src/widgets/Menu/icons/Logo.tsx","packages/uikit/src/widgets/Menu/icons/Moon.tsx","packages/uikit/src/widgets/Menu/icons/More.tsx","packages/uikit/src/widgets/Menu/icons/Nft.tsx","packages/uikit/src/widgets/Menu/icons/Pool.tsx","packages/uikit/src/widgets/Menu/icons/Sun.tsx","packages/uikit/src/widgets/Menu/icons/TeamBattle.tsx","packages/uikit/src/widgets/Menu/icons/Telegram.tsx","packages/uikit/src/widgets/Menu/icons/Ticket.tsx","packages/uikit/src/widgets/Menu/icons/Trade.tsx","packages/uikit/src/widgets/Menu/icons/Twitter.tsx","packages/uikit/src/widgets/Menu/icons/Medium.tsx","packages/uikit/src/widgets/Menu/components/MenuButton.tsx","packages/uikit/src/widgets/Menu/components/Logo.tsx","packages/uikit/src/widgets/Menu/config.ts","packages/uikit/src/widgets/Menu/components/MenuEntry.tsx","packages/uikit/src/widgets/WalletModal/types.ts","packages/uikit/src/widgets/Menu/components/Accordion.tsx","packages/uikit/src/widgets/Menu/components/MenuLink.tsx","packages/uikit/src/widgets/Menu/components/PanelBody.tsx","packages/uikit/src/widgets/Menu/components/CakePrice.tsx","packages/uikit/src/widgets/Menu/components/PanelFooter.tsx","packages/uikit/src/widgets/Menu/components/Panel.tsx","packages/uikit/src/widgets/Menu/components/SocialLinks.tsx","packages/uikit/src/widgets/Menu/Menu.tsx","packages/uikit/src/widgets/Menu/components/UserMenu/types.ts","packages/uikit/src/widgets/Menu/components/UserMenu/MenuIcon.tsx","packages/uikit/src/widgets/Menu/components/UserMenu/styles.tsx","packages/uikit/src/widgets/Menu/components/UserMenu/index.tsx","packages/uikit/src/widgets/WalletModal/config.tsx","packages/uikit/src/widgets/WalletModal/WalletCard.tsx","packages/uikit/src/widgets/WalletModal/ConnectModal.tsx","packages/uikit/src/widgets/WalletModal/CopyToClipboard.tsx","packages/uikit/src/widgets/WalletModal/AccountModal.tsx","packages/uikit/src/widgets/WalletModal/useWalletModal.tsx","packages/uikit/src/ResetCSS.tsx","contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","hooks/useActiveWeb3React.ts","state/mint/actions.ts","components/Layout/Row.tsx","state/swap/actions.ts","utils/bigNumber.ts","utils/formatBalance.ts","config/constants/contracts.ts","utils/addressHelpers.ts","components/Layout/Column.tsx","config/constants/tokens.ts","config/constants/index.ts","utils/index.ts","state/user/actions.ts","utils/contractHelpers.ts","hooks/useContract.ts","components/Balance.tsx","state/user/hooks/index.tsx","config/constants/types.ts","utils/multicall.ts","utils/wrappedCurrency.ts","views/Pools/helpers.tsx","components/Logo/DoubleLogo.tsx","components/Logo/ListLogo.tsx","hooks/Tokens.ts","state/multicall/hooks.ts","config/index.ts","state/types.ts","state/predictions/helpers.ts","state/predictions/config.ts","state/predictions/queries.ts","state/predictions/index.ts","config/constants/campaigns.ts","state/achievements/index.ts","state/collectibles/index.ts","state/voting/helpers.ts","state/voting/index.tsx","state/info/index.ts","state/global/actions.ts","state/user/reducer.ts","state/transactions/reducer.ts","state/swap/reducer.ts","state/mint/reducer.ts","state/lists/reducer.ts","state/burn/reducer.ts","state/multicall/reducer.ts","state/index.ts","hooks/useTokenAllowance.ts","hooks/useApproveCallback.ts","config/constants/lists.ts","state/lists/hooks.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","state/lists/actions.ts","state/user/hooks/helpers.ts","components/QuestionHelper/index.tsx","utils/prices.ts","state/multicall/actions.ts","hooks/useTheme.ts","config/constants/pools.ts","config/constants/endpoints.ts","hooks/useToast.ts","utils/providers.ts","state/block/hooks.ts","components/Toast/types.ts","components/Toast/Toast.tsx","components/Toast/ToastContainer.tsx","components/Toast/DescriptionWithTx.tsx","state/wallet/hooks.ts","hooks/usePairs.ts","state/farms/hooks.ts","components/ConnectWalletButton.tsx","state/transactions/hooks.tsx","state/transactions/actions.ts","state/info/actions.ts","components/Card/index.tsx","utils/getTokenLogoURL.ts","config/constants/farms.ts","utils/compoundApyHelpers.ts","utils/getGasPrice.ts","config/localization/languages.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/profile/helpers.ts","state/profile/index.tsx","state/swap/hooks.ts","hooks/useParsedQueryString.ts","hooks/useRefresh.ts","state/lottery/helpers.ts","hooks/useCallWithGasPrice.ts","hooks/useTokenBalance.ts","components/Logo/CurrencyLogo.tsx","utils/isZero.ts","contexts/Localization/helpers.ts","utils/truncateHash.ts","utils/wallet.ts","components/RoiCalculatorModal/useRoiCalculatorReducer.ts","components/RoiCalculatorModal/RoiCalculatorFooter.tsx","components/RoiCalculatorModal/RoiCard.tsx","components/RoiCalculatorModal/AnimatedArrow.tsx","components/RoiCalculatorModal/index.tsx","hooks/useDebounce.ts","hooks/useAuth.ts","utils/currencyId.ts","utils/uriToHttp.ts","state/teams/index.tsx","config/constants/nfts/collections.ts","config/constants/lottery.ts","components/TransactionConfirmationModal/index.tsx","hooks/ENS/useENS.ts","hooks/ENS/useENSName.ts","hooks/ENS/useENSAddress.ts","utils/trades.ts","hooks/Trades.ts","config/constants/meta.ts","components/Layout/Page.tsx","utils/calls/estimateGas.ts","utils/calls/farms.ts","components/App/Transactions/Transaction.tsx","components/App/Transactions/TransactionsModal.tsx","components/App/Transactions/index.tsx","components/App/AppHeader.tsx","components/App/AppBody.tsx","state/block/index.ts","components/Tags.tsx","utils/getRpcUrl.ts","config/constants/nfts/types.ts","utils/ENS/parseENSAddress.ts","components/Loader/CircleLoader.tsx","utils/getTokenList.ts","utils/ENS/resolveENSContentHash.ts","hooks/useFetchListCallback.ts","contexts/ToastsContext/Provider.tsx","contexts/ToastsContext/Listener.tsx","components/CurrencyInputPanel/NumericalInput.tsx","components/CurrencyInputPanel/index.tsx","components/SearchModal/filtering.ts","utils/web3React.ts","components/Loader/Dots.tsx","hooks/useTotalSupply.ts","state/teams/helpers.ts","config/constants/teams.ts","state/user/hooks/useUserAddedTokens.ts","config/constants/nfts/pancakeBunnies.ts","config/constants/nfts/index.ts","utils/collectibles.ts","hooks/useBUSDPrice.ts","components/Menu/SubNav.tsx","views/Page.tsx","components/TokenImage/index.tsx","config/constants/ifo.ts","hooks/usePreviousValue.ts","components/Layout/Container.tsx","hooks/useTransactionDeadline.ts","hooks/useCurrentBlockTimestamp.ts","config/constants/priceHelperLps.ts","state/pools/helpers.ts","state/lottery/getUserLotteryData.ts","hooks/useIsWindowVisible.ts","config/abi/erc20.ts","utils/contenthashToUri.ts","contexts/RefreshContext.tsx","hooks/useLastUpdated.ts","components/UnsupportedCurrencyFooter.tsx","components/Logo/Logo.tsx","components/SearchModal/ImportToken.tsx","utils/maxAmountSpend.ts","components/Menu/GlobalSettings/TransactionSettings.tsx","components/Menu/GlobalSettings/ExpertModal.tsx","components/Menu/GlobalSettings/SettingsModal.tsx","components/Menu/GlobalSettings/index.tsx","state/farms/fetchPublicFarmData.ts","state/farms/fetchFarm.ts","state/farms/fetchFarms.ts","utils/farmsPriceHelpers.ts","state/farms/fetchFarmsPrices.ts","hooks/useHttpLocations.ts","hooks/ENS/useENSContentHash.ts","state/burn/actions.ts","utils/latinise.ts","state/mint/hooks.ts","views/AddLiquidity/ConfirmAddModalBottom.tsx","views/AddLiquidity/PoolPriceBar.tsx","views/AddLiquidity/index.tsx","state/lottery/index.ts","components/PositionCard/index.tsx","state/lottery/getLotteriesData.ts","state/lottery/getUserTicketsData.ts","utils/farmHelpers.ts","utils/apr.ts","hooks/useIntersectionObserver.ts","components/Layout/Flex.tsx","components/Select/Select.tsx","components/Loading.tsx","utils/getTimePeriods.ts","hooks/useDelayedUnmount.ts","components/SearchModal/CommonBases.tsx","components/SearchModal/ImportRow.tsx","components/SearchModal/CurrencyList.tsx","components/SearchModal/sorting.ts","components/SearchModal/CurrencySearch.tsx","components/SearchModal/types.ts","components/SearchModal/ManageLists.tsx","components/SearchModal/ManageTokens.tsx","components/SearchModal/Manage.tsx","components/SearchModal/ImportList.tsx","components/SearchModal/CurrencySearchModal.tsx","components/PageHeader/PageHeader.tsx","components/SearchInput/SearchInput.tsx","state/lists/updater.ts","hooks/useInterval.ts","state/multicall/retry.ts","state/multicall/updater.tsx","state/multicall/chunkArray.ts","state/transactions/updater.tsx","components/Menu/UserMenu/WalletModal.tsx","hooks/useEagerConnect.ts","state/profile/hooks.ts","components/DatePicker/DatePickerPortal.tsx","style/Global.tsx","components/Menu/config.ts","components/Menu/UserMenu/CopyAddress.tsx","components/Menu/UserMenu/WalletInfo.tsx","components/Menu/UserMenu/TransactionRow.tsx","components/Menu/UserMenu/WalletTransactions.tsx","components/Menu/UserMenu/WalletUserMenuItem.tsx","components/Menu/UserMenu/index.tsx","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/Loader/PageLoader.tsx","components/EasterEgg/EasterEgg.tsx","routerHistory.ts","state/pools/hooks.ts","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/StyledCard.tsx","components/RemainingTime.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/CakeVaultCard/CakeVaultTokenPairImage.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/hooks/useApprove.tsx","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/hooks/useStakePool.ts","views/Pools/hooks/useUnstakePool.ts","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/hooks/useHarvestPool.ts","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","views/Pools/hooks/useWithdrawalFeeTimer.ts","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Pools/components/CakeVaultCard/index.tsx","views/Pools/components/ToggleView/ToggleView.tsx","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/BountyModal.tsx","views/Pools/components/BountyCard.tsx","views/Pools/components/HelpButton.tsx","views/Pools/components/PoolsTable/Cells/BaseCell.tsx","views/Pools/components/PoolsTable/Cells/NameCell.tsx","views/Pools/components/PoolsTable/Cells/EarningsCell.tsx","views/Pools/components/PoolsTable/Apr.tsx","views/Pools/components/PoolsTable/Cells/AprCell.tsx","views/Pools/components/PoolsTable/Cells/TotalStakedCell.tsx","views/Pools/components/PoolsTable/Cells/EndsInCell.tsx","views/Pools/components/PoolsTable/Cells/ExpandActionCell.tsx","views/Pools/components/PoolsTable/ActionPanel/styles.ts","views/Pools/components/PoolsTable/ActionPanel/Harvest.tsx","views/Pools/components/PoolsTable/ActionPanel/Stake.tsx","views/Pools/components/PoolsTable/ActionPanel/AutoHarvest.tsx","views/Pools/components/PoolsTable/ActionPanel/ActionPanel.tsx","views/Pools/components/PoolsTable/Cells/AutoEarningsCell.tsx","views/Pools/components/PoolsTable/Cells/AutoAprCell.tsx","views/Pools/components/PoolsTable/PoolRow.tsx","views/Pools/components/PoolsTable/PoolsTable.tsx","views/Pools/index.tsx","config/constants/swapWarningTokens.ts","views/Swap/components/AddressInputPanel.tsx","views/Swap/components/styleds.tsx","views/Swap/components/FormattedPriceImpact.tsx","views/Swap/components/SwapModalFooter.tsx","views/Swap/components/SwapModalHeader.tsx","views/Swap/components/ConfirmSwapModal.tsx","hooks/useLast.ts","views/Swap/components/SwapRoute.tsx","views/Swap/components/AdvancedSwapDetails.tsx","views/Swap/components/AdvancedSwapDetailsDropdown.tsx","views/Swap/components/TradePrice.tsx","views/Swap/components/ImportTokenWarningModal.tsx","views/Swap/components/ProgressSteps.tsx","hooks/useSwapCallback.ts","hooks/useWrapCallback.ts","views/Swap/components/SwapWarningModal/SafemoonWarning.tsx","views/Swap/components/SwapWarningModal/BondlyWarning.tsx","views/Swap/components/SwapWarningModal/Acknowledgement.tsx","views/Swap/components/SwapWarningModal/index.tsx","views/Swap/index.tsx","views/Swap/components/confirmPriceImpactWithoutFee.ts","views/AddLiquidity/redirects.tsx","views/RemoveLiquidity/redirects.tsx","views/Swap/redirects.tsx","App.tsx","Providers.tsx","index.tsx"],"names":["getThemeValue","path","fallback","theme","get","rotate","keyframes","spinStyle","css","Svg","styled","svg","color","spin","space","defaultProps","width","xmlns","Icon","props","viewBox","d","Text","div","fontSize","small","bold","textTransform","ellipsis","typography","layout","TooltipText","colors","textSubtle","getExternalLinkProps","target","rel","scales","variants","scaleVariants","height","padding","styleVariants","backgroundColor","border","borderColor","boxShadow","StyledButton","button","$isLoading","backgroundDisabled","textDisabled","variant","prop","Button","startIcon","endIcon","external","className","isLoading","disabled","children","rest","internalProps","isDisabled","classNames","push","join","isValidElement","cloneElement","mr","ml","scale","IconButton","useTheme","primaryColor","isDark","secondaryColor","fill","id","maskUnits","x","y","mask","fillRule","clipRule","href","uniqueId","clipPath","opacity","style","mixBlendMode","x1","y1","x2","y2","gradientUnits","stopColor","offset","ExpandableLabel","onClick","expanded","ChevronUp","ChevronDown","Box","background","position","Flex","flexbox","INFO","DANGER","SUCCESS","WARNING","IconLabel","failure","warning","success","secondary","alert","Details","hasHandler","CloseHandler","StyledAlert","Alert","title","BlockIcon","ErrorIcon","CheckmarkCircleIcon","InfoIcon","getIcon","hasDescription","as","Close","Grid","grid","Input","input","isSuccess","isWarning","shadows","inset","text","inputSecondary","focus","SwitchUnitsButton","UnitContainer","StyledBalanceInput","StyledInput","textAlign","BalanceInput","value","placeholder","onUserInput","currencyValue","inputProps","innerRef","decimals","unit","switchEditingUnits","justifyContent","alignItems","pattern","inputMode","min","onChange","e","currentTarget","validity","valid","replace","ref","pl","SwapVert","Separator","mediaQueries","sm","md","StyledBreadcrumbs","ul","primary","primaryBright","DefaultSeparator","ChevronRight","Breadcrumbs","separator","items","reduce","accum","item","index","insertSeparators","Children","toArray","filter","child","map","StyledButtonMenu","fullWidth","ButtonMenu","activeIndex","onItemClick","isActive","undefined","InactiveButton","ButtonMenuItem","forwardedAs","PromotedGradient","StyledCard","borderBackground","cardBorder","radii","card","StyledCardInner","hasCustomBorder","Card","ribbon","CardBody","p","CardHeader","cardHeaderBackground","CardFooter","StyledCardRibbon","variantColor","ribbonPosition","CardRibbon","getScale","Checkbox","attrs","type","DropdownContent","nav","level1","zIndices","dropdown","Container","Dropdown","bunnyFall","Bunny","duration","iterations","Number","isFinite","String","FallingBunnies","count","size","Infinity","bunnies","Array","_","Math","random","fontSizeLg","Heading","lg","root","rootMargin","threshold","StyledWrapper","$height","$width","Wrapper","forwardRef","Placeholder","StyledBackgroundImage","BackgroundImage","loadingPlaceholder","src","useState","isLoaded","setIsLoaded","useRef","useEffect","observer","current","IntersectionObserver","entries","forEach","entry","isIntersecting","img","document","createElement","onload","backgroundImage","disconnect","observerOptions","observe","StyledImage","Image","alt","imgRef","TokenImage","StyledPrimaryImage","StyledSystemVariant","bottom","left","right","top","zIndex","StyledSecondaryImage","TokenPairImage","primarySrc","secondarySrc","primaryImageProps","secondaryImageProps","secondaryImageSize","floor","getPadding","BunnyPlaceholder","hasIcon","GridLayout","hasStartIcon","hasEndIcon","isEndIcon","BaseLayout","StyledLink","Link","LinkExternal","OpenNew","danger","Icons","WarningIcon","MessageContainer","systemVariant","Message","icon","NotificationDotRoot","span","Dot","show","invertedContrast","NotificationDot","Overlay","role","overlay","scaleKeyValues","pancakeSize","travelDistance","toggleHeight","toggleWidth","pancakeThickness","pancakeTwoOffset","pancakeThreeOffset","butterTop","butterLeft","butterWidth","butterHeight","butterThickness","butterRadius","butterSmearOneTop","butterSmearOneLeft","butterSmearTwoTop","butterSmearTwoRight","property","PancakeStack","PancakeInput","PancakeLabel","label","checked","PancakeToggle","htmlFor","borderRadius","styleScales","Bar","getCheckedScale","Radio","radio","handleBackground","m","getCursorStyle","getBaseThumbStyles","isMax","SliderLabelContainer","SliderLabel","progress","BunnyButt","BunnySlider","BarBackground","BarProgress","Slider","progressWidth","name","max","onValueChanged","valueLabel","step","progressPercentage","labelProgress","displayValueLabel","parseFloat","animation","waves","pulse","Root","VARIANT","circle","Pulse","Waves","Skeleton","ANIMATION","float","RotatingPancakeIcon","PancakeIcon","FloatingPanIcon","PanIcon","Spinner","ChildrenWrapper","status","isVisible","Td","backgroundAlt","tooltip","default","getElementById","td","table","byTextAscending","getTextProperty","objectA","objectB","upperA","toUpperCase","upperB","byTextDescending","getPaginatedData","rows","perPage","page","start","end","slice","getColumnsByName","columns","columnsByName","column","col","render","hidden","createReducer","state","action","nextPage","prevPage","isAscending","sortedRows","columnCopy","filteredRows","selectedRowsById","stateCopy","rowIds","data","sortColumn","sorted","asc","sort","reverse","object","original","sortByColumn","paginationEnabled","pagination","on","originalRows","canNext","length","canPrev","columnName","Error","isAscOverride","selectedRows","row","selected","filterOn","newRow","rowId","toggleAllState","cells","cell","includes","searchString","makeRender","makeHeaderRender","useTable","options","columnsWithSorting","useMemo","tableData","sortDataInOrder","idx","Object","field","reducer","useReducer","noop","dispatch","useCallback","headers","headerRender","selectRow","toggleAll","toggleSort","setSearchString","Tab","StyledTag","outline","themeColorKey","Tag","React","handleHeight","handleWidth","handleLeft","handleTop","checkedLeft","Handle","toggle","StyledToggle","Toggle","isChecked","breakpointMap","xs","xl","xxl","active","siteWidth","breakpoints","values","breakpoint","spacing","modal","prevMinWidth","keys","minWidth","getKey","charAt","useMatchBreakpoints","key","mql","window","matchMedia","matches","setState","handlers","handler","matchMediaQuery","prevState","addEventListener","removeEventListener","unsubscribe","isMobile","isXs","isSm","isTablet","isMd","isLg","isDesktop","isXl","isXxl","useKonamiCheatCode","matchedCodeHandler","currentIndex","onKeyUpHandler","event","baseColors","primaryDark","additionalColors","binance","gold","silver","bronze","lightColors","contrast","dropdownDeep","tertiary","gradients","bubblegum","inverseBubblegum","cardHeader","blue","violet","violetAlt","darkColors","light","dark","boxShadowActive","boxShadowSuccess","boxShadowWarning","dropShadow","handleShadow","darkTheme","base","darkAlert","darkCard","darkToggle","darkNav","darkModal","pancakeToggle","darkPancakeToggle","darkRadio","darkTooltip","lightTheme","lightAlert","lightCard","lightToggle","lightNav","lightModal","lightPancakeToggle","lightRadio","lightTooltip","isTouchDevice","navigator","maxTouchPoints","msMaxTouchPoints","Arrow","StyledTooltip","invertTheme","currentTheme","portalRoot","useTooltip","content","placement","trigger","arrowPadding","tooltipPadding","tooltipOffset","targetElement","setTargetElement","tooltipElement","setTooltipElement","arrowElement","setArrowElement","visible","setVisible","isHoveringOverTooltip","hideTimeout","hideTooltip","hide","stopPropagation","preventDefault","clearTimeout","setTimeout","showTooltip","toggleTooltip","handleClickOutside","Node","contains","usePopper","modifiers","element","styles","attributes","popper","arrow","tooltipInPortal","createPortal","targetRef","tooltipVisible","ModalHeader","ModalTitle","ModalBody","ModalCloseButton","onDismiss","ModalBackButton","onBack","ArrowBack","ModalContainer","Modal","hideCloseButton","bodyPadding","headerBackground","ModalWrapper","Context","createContext","isOpen","nodeId","modalNode","setModalNode","onPresent","setCloseOnOverlayClick","ModalProvider","setIsOpen","setNodeId","closeOnOverlayClick","handleDismiss","Provider","node","newNodeId","useModal","updateOnPropsChange","modalId","useContext","onPresentCallback","modalProps","oldModalProps","JSON","stringify","Logo","textColor","memo","prev","next","MenuButton","blink","isPushed","togglePush","isAbsoluteUrl","startsWith","innerLogo","HamburgerClose","Hamburger","to","socials","SIDEBAR_WIDTH_FULL","rainbowAnimation","LinkLabel","MenuEntry","ConnectorNames","LinkStatus","LinkLabelMemo","AccordionContent","maxHeight","Accordion","pushNav","initialOpenState","ArrowDropUp","ArrowDropDown","MenuLink","otherProps","isHttpLink","NavLink","IconModule","PanelBody","links","location","useLocation","handleClick","iconElement","calloutClass","itemsMatchIndex","findIndex","pathname","some","isExternal","toLowerCase","PriceLink","a","ImgWrapper","CakePrice","cakePriceUsd","SocialEntry","PanelFooter","toggleTheme","currentLang","langs","setLang","Cog","StyledPanel","showMenu","Panel","SocialLinks","social","cursor","StyledNav","BodyWrapper","Inner","MobileOnlyOverlay","Menu","userMenu","globalMenu","isSmallerScreen","setIsPushed","setShowMenu","refPrevOffset","pageYOffset","throttledHandleScroll","throttle","currentOffset","isBottomOfPage","body","clientHeight","innerHeight","homeLink","find","link","MenuIconWrapper","ProfileIcon","NoProfileMenuIcon","WalletFilled","PendingMenuIcon","Refresh","WarningMenuIcon","Warning","DangerMenuIcon","MenuIcon","avatarSrc","UserMenuDivider","hr","UserMenuItem","StyledUserMenu","LabelText","UserMenu","account","setTargetRef","tooltipRef","setTooltipRef","accountEllipsis","substring","evt","toggleTouch","isTouchingTargetRef","isTouchingTooltipRef","prevOpen","connectors","Metamask","connectorId","Injected","priority","connectorLocalStorageKey","walletLocalStorageKey","WalletButton","py","WalletCard","login","walletConfig","isIOS","test","userAgent","MSStream","WalletConnect","localStorage","setItem","toLocaleLowerCase","mb","WalletWrapper","ConnectModal","displayCount","t","showMore","sortedConfig","preferredWalletName","getItem","b","preferredWallet","sortedWalletConfig","getPreferredConfig","config","displayListConfig","overflowY","gridTemplateColumns","wallet","StyleButton","Tooltip","isTooltipDisplayed","CopyToClipboard","toCopy","setIsTooltipDisplayed","displayTooltip","clipboard","permissions","writeText","then","queryCommandSupported","el","appendChild","select","execCommand","removeChild","copyToClipboardWithCommand","Copy","AccountModal","logout","whiteSpace","overflow","textOverflow","marginBottom","removeItem","useWalletModal","onPresentConnectModal","onPresentAccountModal","ResetCSS","createGlobalStyle","initialState","isFetching","currentLanguage","EN","languageMap","Map","set","locale","translations","LanguageContext","LanguageProvider","codeFromStorage","getLanguageCodeFromLS","languages","enLocale","fetchLocale","currentLocale","fetchInitialLocales","setLanguage","language","has","LS_KEY","translate","translatedText","match","interpolatedText","dataKey","templateKey","RegExp","toString","useTranslation","languageContext","useActiveWeb3React","useWeb3React","library","chainId","web3React","refEth","simpleRpcProvider","provider","setprovider","parseInt","process","Field","typeInput","createAction","resetMintState","Row","align","justify","RowBetween","AutoRow","gap","RowFixed","selectCurrency","switchCurrencies","replaceSwapState","setRecipient","BIG_ZERO","BigNumber","BIG_ONE","BIG_TEN","ethersToSerializedBigNumber","ethersBn","ethersToBigNumber","toJSON","getDecimalAmount","amount","times","pow","getBalanceAmount","dividedBy","getBalanceNumber","balance","toNumber","getFullDisplayBalance","displayDecimals","toFixed","formatNumber","number","minPrecision","maxPrecision","minimumFractionDigits","maximumFractionDigits","toLocaleString","formatBigNumber","remainder","mod","ethers","from","formatUnits","sub","masterChef","addresses","ZOLAFarm","sousChef","ZOLAStakingFactory","lotteryV2","ZolaSwapLottery","multiCall","Multicall2","pancakeProfile","pancakeRabbits","bunnyFactory","claimRefund","pointCenterIfo","bunnySpecial","tradingCompetition","easterNft","cakeVault","ZOLAVault","predictions","chainlinkOracle","bunnySpecialCakeVault","bunnySpecialPrediction","bunnySpecialLottery","farmAuction","getAddress","address","ChainId","MAINNET","getMasterChefAddress","getMulticallAddress","getLotteryV2Address","getPancakeProfileAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","getCakeVaultAddress","getPredictionsAddress","getChainlinkOracleAddress","getBunnySpecialCakeVaultAddress","getBunnySpecialPredictionAddress","getBunnySpecialLotteryAddress","getFarmAuctionAddress","Column","ColumnCenter","AutoColumn","TESTNET","mainnetTokens","wmatic","Token","WMATIC","lazermoon","LAZERMOON","matic","aave","shib","bnb","zolamo","elon","cake","usdc","quick","banana","usdt","kom","luna","wbtc","mana","dai","grt","syrup","ZOLAStake","skilyne","SKILYNEToken","gorydz","GORydzToken","testnetTokens","tokens","serializeTokens","unserializedTokens","serializeToken","ROUTER_ADDRESS","ZolaRouter","BASES_TO_CHECK_TRADES_AGAINST","ADDITIONAL_BASES","CUSTOM_BASES","SUGGESTED_BASES","BASES_TO_TRACK_LIQUIDITY_FOR","PINNED_PAIRS","INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","BIG_INT_ZERO","JSBI","BigInt","ONE_BIPS","Percent","BIPS_BASE","ALLOWED_PRICE_IMPACT_LOW","ALLOWED_PRICE_IMPACT_MEDIUM","ALLOWED_PRICE_IMPACT_HIGH","PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN","BLOCKED_PRICE_IMPACT_NON_EXPERT","MIN_BNB","exponentiate","BETTER_TRADE_LESS_HOPS_THRESHOLD","ZERO_PERCENT","ONE_HUNDRED_PERCENT","BLOCKED_ADDRESSES","ZOLA_LP_SYMBOL","ZOLA_LP_DECIMALS","isAddress","getVelasScanLink","BASE_VELAS_SCAN_URLS","calculateGasMargin","mul","add","basisPointsToPercent","num","calculateSlippageAmount","slippage","divide","multiply","raw","getContract","ABI","AddressZero","Contract","getSigner","connectUnchecked","getProviderOrSigner","getRouterContract","IUniswapV2Router02ABI","escapeRegExp","string","isTokenOnList","defaultTokens","currency","ETHER","Boolean","FarmStakedOnly","ViewMode","updateUserExpertMode","updateUserSingleHopOnly","updateUserSlippageTolerance","updateUserDeadline","addSerializedToken","removeSerializedToken","addSerializedPair","removeSerializedPair","muteAudio","unmuteAudio","updateUserFarmStakedOnly","updateUserPoolStakedOnly","updateUserPoolsViewMode","updateUserFarmsViewMode","updateUserPredictionAcceptedRisk","updateUserPredictionChartDisclaimerShow","updateUserExpertModeAcknowledgementShow","updateUserUsernameVisibility","updateGasPrice","addWatchlistToken","addWatchlistPool","abi","signer","signerOrProvider","getBep20Contract","bep20Abi","getErc721Contract","erc721Abi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","poolsConfig","pool","sousId","poolCategory","PoolCategory","BINANCE","sousChefBnb","contractAddress","getSouschefV2Contract","sousChefV2","getPointCenterIfoContract","getCakeContract","cakeAbi","getProfileContract","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryV2Contract","lotteryV2Abi","getMasterchefContract","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","getCakeVaultContract","cakeVaultAbi","getPredictionsContract","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","getMulticallContract","MultiCallAbi","getBunnySpecialCakeVaultContract","bunnySpecialCakeVaultAbi","getBunnySpecialPredictionContract","bunnySpecialPredictionAbi","getBunnySpecialLotteryContract","bunnySpecialLotteryAbi","getFarmAuctionContract","farmAuctionAbi","useERC20","useCake","useLotteryV2Contract","useMasterchef","useSousChef","useCakeVaultContract","useContract","withSignerIfPossible","error","console","useTokenContract","tokenAddress","ERC20_ABI","useWETHContract","WETH","WETH_ABI","useENSRegistrarContract","ENS_ABI","useENSResolverContract","ENS_PUBLIC_RESOLVER_ABI","useBytes32TokenContract","ERC20_BYTES32_ABI","usePairContract","pairAddress","IUniswapV2PairABI","useMulticallContract","multiCallAbi","Balance","prefix","previousValue","suffix","useAudioModeManager","useDispatch","audioPlay","useSelector","user","toggleSetAudioMode","useIsExpertMode","userExpertMode","useExpertModeManager","expertMode","toggleSetExpertMode","useThemeManager","toggleThemeAction","useUserSingleHopOnly","userSingleHopOnly","newSingleHopOnly","useUserSlippageTolerance","userSlippageTolerance","useUserFarmStakedOnly","userFarmStakedOnly","setUserFarmStakedOnly","stakedOnly","farmStakedOnly","TRUE","FALSE","ON_FINISHED","useUserPoolStakedOnly","userPoolStakedOnly","useUserPoolsViewMode","userPoolsViewMode","viewMode","useUserFarmsViewMode","userFarmsViewMode","useUserExpertModeAcknowledgementShow","userExpertModeAcknowledgementShow","showAcknowledgement","useUserTransactionTTL","userDeadline","deadline","useAddUserToken","token","serializedToken","useRemoveUserAddedToken","useGasPrice","userGas","gasPrice","GAS_PRICE_GWEI","testnet","serializePair","pair","token0","token1","usePairAdder","serializedPair","toV2LiquidityToken","tokenA","tokenB","Pair","useTrackedTokenPairs","useAllTokens","pinnedPairs","generatedPairs","flatMap","savedSerializedPairs","pairs","userPairs","forChain","pairId","deserializeToken","combinedList","concat","keyed","sortsBefore","useWatchlistTokens","watchlistTokens","useWatchlistPools","watchlistPools","PoolIds","LotteryStatus","AuctionStatus","multicall","calls","multi","itf","utils","Interface","calldata","call","encodeFunctionData","params","aggregate","returnData","res","i","decodeFunctionResult","multicallv2","requireSuccess","tryAggregate","result","wrappedCurrency","wrappedCurrencyAmount","currencyAmount","TokenAmount","unwrappedToken","equals","convertSharesToCake","shares","cakePerFullShare","decimalsToRound","sharePriceNumber","amountInCake","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","cakeAsDisplayBalance","convertCakeToShares","amountInShares","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","getAprData","performanceFee","isAutoVault","apr","autoCompoundFrequency","getApy","getCakeVaultEarnings","cakeAtLastUserAction","userShares","pricePerFullShare","earningTokenPrice","hasAutoEarnings","gt","autoCakeProfit","minus","autoCakeToDisplay","gte","autoUsdProfit","autoUsdToDisplay","getPoolBlockInfo","currentBlock","startBlock","endBlock","isFinished","currentTimeSeconds","Date","now","shouldShowBlockCountdown","blocksUntilStart","blocksRemaining","hasPoolStarted","blocksToDisplay","margin","DoubleCurrencyLogo","currency0","currency1","CurrencyLogo","marginRight","StyledListLogo","ListLogo","logoURI","srcs","useHttpLocations","useTokensFromMap","tokenMap","includeUserAdded","userAddedTokens","useUserAddedTokens","mapWithoutUrls","newMap","tokenMap_","useCombinedActiveList","useAllInactiveTokens","inactiveTokens","useCombinedInactiveList","activeTokensAddresses","useUnsupportedTokens","useUnsupportedTokenList","useIsTokenActive","activeTokens","useFoundOnInactiveList","searchQuery","filterTokens","useIsUserAddedToken","currencyEquals","BYTES32_REGEX","parseStringOrBytes32","str","bytes32","defaultValue","arrayify","parseBytes32String","useToken","tokenContract","tokenContractBytes32","tokenName","useSingleCallResult","NEVER_RELOAD","tokenNameBytes32","symbol","symbolBytes32","loading","useCurrency","currencyId","isBNB","isMethodArg","indexOf","isValidMethodArgs","isArray","every","xi","INVALID_RESULT","blockNumber","blocksPerFetch","useCallsData","callResults","serializedCallKeys","c","toCallKey","callKeys","parse","parseCallKey","addMulticallListeners","removeMulticallListeners","INVALID_CALL_STATE","syncing","LOADING_CALL_STATE","toCallState","callResult","contractInterface","fragment","latestBlockNumber","debug","useSingleContractMultipleData","contract","methodName","callInputs","interface","getFunction","results","inputs","callData","useBlock","useMultipleContractSingleData","EXPONENTIAL_AT","DECIMAL_PLACES","ZOLA_PER_SECOND","SECONDS_PER_YEAR","ZOLA_PER_YEAR","BASE_URL","protocol","host","BASE_ADD_LIQUIDITY_URL","BASE_BSC_SCAN_URL","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS_LIMIT","IPFS_GATEWAY","BetPosition","PredictionStatus","HistoryFilter","LeaderboardLoadingState","SnapshotCommand","ProposalType","ProposalState","VotingStateLoadingStatus","Result","ROUNDS_PER_PAGE","numberOrNull","valueNum","isNaN","transformBetResponse","betResponse","bet","hash","block","BULL","BEAR","claimed","claimedAt","claimedBlock","claimedHash","claimedBNB","claimedNetBNB","createdAt","updatedAt","transformUserResponse","round","transformRoundResponse","userResponse","totalBets","totalBetsBull","totalBetsBear","totalBNB","totalBNBBull","totalBNBBear","totalBetsClaimed","totalBNBClaimed","winRate","averageBNB","netBNB","roundResponse","positionResponse","epoch","failed","startAt","startHash","lockAt","lockBlock","lockHash","lockPrice","lockRoundId","closeAt","closeBlock","closeHash","closePrice","closeRoundId","totalAmount","bullBets","bullAmount","bearBets","bearAmount","bets","HOUSE","getBetHistory","where","first","skip","request","GRAPH_API_PREDICTION","gql","response","getLedgerData","epochs","ledgerCalls","defaultPredictionUserOptions","orderBy","orderDir","getPredictionUsers","users","getPredictionUser","getClaimStatuses","claimableCalls","claimableResponses","claimableResponse","claimable","getPredictionData","staticCalls","method","currentEpoch","intervalSeconds","minBetAmount","paused","bufferSeconds","PAUSED","LIVE","getRoundsData","makeFutureRoundResponse","startTimestamp","lockTimestamp","closeTimestamp","rewardBaseCalAmount","rewardAmount","oracleCalled","lockOracleId","closeOracleId","makeRoundData","rounds","serializePredictionsLedgerResponse","ledgerResponse","makeLedgerData","ledgers","eq","serializePredictionsRoundsResponse","fetchUsersRoundsLength","getUserRoundsLength","fetchUserRounds","getUserRounds","INITIAL","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","ALL","lastOraclePrice","history","totalHistory","currentHistoryPage","hasHistoryLoaded","claimableStatuses","leaderboard","loadingState","filters","timePeriod","hasMoreResults","addressResults","initializePredictions","createAsyncThunk","marketData","range","roundsResponse","initialRoundData","reduxNodeRound","initializedData","ledgerResponses","merge","fetchRound","predictionContract","fetchRounds","fetchMarketData","fetchLedgerData","fetchClaimableStatuses","fetchHistory","fetchNodeHistory","userRoundsLength","emptyResult","maxPages","lte","ceil","lt","userRounds","epochStr","roundData","reduxRound","ledger","ledgerAmount","filterLeaderboard","totalBets_gte","usersResponse","fetchAddressResult","rejectWithValue","filterNextPageLeaderboard","getState","predictionsSlice","createSlice","reducers","setLeaderboardFilter","payload","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","setCurrentEpoch","setLastOraclePrice","markAsCollected","extraReducers","builder","addCase","pending","IDLE","LOADING","fulfilled","rejected","newestRound","maxBy","futureRound","futureRounds","currentRound","actions","campaigns","badge","description","campaignMap","campaign","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","fetchWalletNfts","nftSourcePromises","collections","nftSourceType","addressObj","getTokenIdAndData","tokenOfOwnerByIndex","tokenIdBn","tokenId","getNftByTokenId","walletNft","identifier","balanceOf","balanceOfResponse","nftDataFetchPromises","Promise","all","nftData","nftSourceData","flat","collectiblesSlice","isInitialized","association","getProposals","ACTIVE","SNAPSHOT_API","proposals","getProposal","proposal","getVotes","votes","getVoteVerificationStatuses","getBlockNumber","votesToVerify","vote","voter","verificationHash","metadata","total","votingPower","fetch","SNAPSHOT_VOTING_API","ok","statusText","json","isValid","getAllVotes","proposalId","votesPerChunk","resolve","reject","fetchVoteChunk","newSkip","voteChunk","proposalLoadingStatus","voteLoadingStatus","fetchProposals","fetchProposal","fetchVotes","verifyVotes","snapshot","proposalVotes","voting","votingSlice","_inValid","overview","chartData","transactions","pools","byAddress","updateProtocolData","protocolData","updateProtocolChartData","updateProtocolTransactions","updatePoolData","poolData","addPoolKeys","poolAddresses","updatePoolChartData","poolAddress","updatePoolTransactions","updateTokenData","tokenData","addTokenKeys","tokenAddresses","priceData","addTokenPoolAddresses","updateTokenChartData","updateTokenTransactions","updateTokenPriceData","secondsInterval","oldestFetchedTimestamp","updateVersion","currentTimestamp","getTime","pairKey","token0Address","token1Address","timestamp","TABLE","userPredictionAcceptedRisk","userPredictionChartDisclaimerShow","userUsernameVisibility","lastUpdateVersionTimestamp","tokenAAddress","tokenBAddress","userAcceptedRisk","userShowDisclaimer","tokenWatchlist","newTokens","poolsWatchlist","newPools","addTransaction","approval","summary","claim","txs","addedTime","clearAllTransactions","checkedTransaction","tx","lastCheckedBlockNumber","finalizeTransaction","receipt","confirmedTime","independentField","INPUT","typedValue","OUTPUT","recipient","inputCurrencyId","outputCurrencyId","otherField","CURRENCY_A","otherTypedValue","noLiquidity","NEW_LIST_STATE","loadingRequestId","pendingUpdate","lastInitializedDefaultListOfLists","DEFAULT_LIST_OF_LISTS","byUrl","UNSUPPORTED_LIST_URLS","listUrl","activeListUrls","DEFAULT_ACTIVE_LIST_URLS","fetchTokenList","requestId","url","tokenList","getVersionUpgrade","version","VersionUpgrade","NONE","errorMessage","addList","removeList","u","enableList","disableList","acceptListUpdate","lastInitializedSet","s","l","Set","newListOfListsSet","LIQUIDITY_PERCENT","listeners","callListeners","callKey","fetchingMulticallResults","fetchingBlockNumber","errorFetchingMulticallResults","updateMulticallResults","PERSISTED_KEYS","store","configureStore","devTools","achievements","achievementsReducer","blockReducer","farms","farmsReducer","poolsReducer","predictionsReducer","profile","profileReducer","teams","teamsReducer","collectibles","collectiblesReducer","votingReducer","lottery","lotteryReducer","info","infoReducer","swap","mint","burn","lists","middleware","getDefaultMiddleware","thunk","save","states","preloadedState","load","useAppDispatch","useTokenAllowance","ApprovalState","owner","spender","allowance","useApproveCallback","amountToApprove","callWithGasPrice","useCallWithGasPrice","currentAllowance","pendingApproval","useHasPendingApproval","approvalState","APPROVED","lessThan","PENDING","NOT_APPROVED","UNKNOWN","useTransactionAdder","approve","useExact","estimateGas","MaxUint256","catch","estimatedGas","gasLimit","useApproveCallbackFromTrade","trade","allowedSlippage","computeSlippageAdjustedAmounts","sortByListPriority","urlA","urlB","MAX_SAFE_INTEGER","second","WrappedTokenInfo","tokenInfo","tags","this","EMPTY_LIST","listCache","WeakMap","listToTokenMap","list","tagId","useAllLists","combineMaps","map1","map2","useCombinedTokenMapFromUrls","urls","allTokens","currentUrl","assign","useActiveListUrls","DEFAULT_TOKEN_LIST","allActiveListUrls","useInactiveListUrls","useDefaultTokenList","UNSUPPORTED_TOKEN_LIST","useIsListActive","fetchPoolsBlockLimits","poolsWithEnd","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","fetchPoolsTotalStaking","nonBnbPools","stakingToken","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","totalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","stakingLimit","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","stakingLimitPromises","validPool","stakingLimits","bnbPools","nonMasterPools","masterChefContract","fetchPoolsAllowance","erc20ABI","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","_hex","masterPoolAmount","fetchUserPendingRewards","pendingRewards","pendingCake","pendingReward","fetchPublicVaultData","sharePrice","estimatedCakeBountyReward","totalPendingCakeHarvest","farmCalls","masterChefAbi","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","totalShares","totalCakeInVault","amountInFarm","fetchVaultFees","callFee","withdrawalFee","withdrawalFeePeriod","cakeVaultContract","fetchVaultUser","userContractResponse","lastDepositedTime","lastUserActionTime","userDataLoaded","fees","userData","fetchPoolsPublicDataAsync","blockLimits","totalStakings","farmsWithPriceHelpers","farmsConfig","priceHelperLpsConfig","fetchFarms","fetchFarmsPrices","farmsWithPrices","prices","getTokenPricesFromFarm","liveData","blockLimit","totalStaking","isPoolEndBlockExceeded","isPoolFinished","stakingTokenAddress","stakingTokenPrice","earningTokenAddress","earningToken","getPoolApr","tokenPerBlock","setPoolsPublicData","fetchPoolsStakingLimitsAsync","stakingLimitData","fetchPoolsUserDataAsync","stakingTokenBalances","stakingTokenBalance","stakedBalance","setPoolsUserData","updateUserAllowance","updatePoolsUserData","updateUserBalance","updateUserStakedBalance","updateUserPendingReward","fetchCakeVaultPublicData","publicVaultInfo","fetchCakeVaultFees","vaultFees","fetchCakeVaultUserData","PoolsSlice","livePoolsData","livePoolData","userPoolData","GAS_PRICE","projectLink","parseUnits","fast","instant","QuestionWrapper","QuestionHelper","BASE_FEE","INPUT_FRACTION_AFTER_FEE","subtract","computeTradePriceBreakdown","realizedLPFee","route","currentFee","priceImpactWithoutFeeFraction","priceImpact","priceImpactWithoutFee","numerator","denominator","inputAmount","quotient","CurrencyAmount","ether","pct","maximumAmountIn","minimumAmountOut","warningSeverity","formatExecutionPrice","inverted","executionPrice","invert","toSignificant","outputAmount","ADDRESS_REGEX","LOWER_HEX_REGEX","pcs","split","StyledThemeContext","serializedTokens","CORE","harvest","sortOrder","GRAPH_API_PROFILE","REACT_APP_GRAPH_API_PROFILE","REACT_APP_GRAPH_API_PREDICTION","REACT_APP_SNAPSHOT_VOTING_API","SNAPSHOT_BASE_URL","REACT_APP_SNAPSHOT_BASE_URL","REACT_APP_API_PROFILE","INFO_CLIENT","BLOCKS_CLIENT","GRAPH_API_LOTTERY","useToast","toastContext","ToastsContext","RPC_URL","getRpcUrl","providers","StaticJsonRpcProvider","usePollBlockNumber","timer","isWindowVisible","useIsWindowVisible","setInterval","setBlock","clearInterval","types","alertTypeMap","alertVariants","StyledToast","Toast","toast","onRemove","ttl","removeHandler","handleRemove","CSSTransition","nodeRef","timeout","onMouseEnter","onMouseLeave","StyledToastContainer","ToastContainer","toasts","stackSpacing","TransitionGroup","DescriptionWithTx","txHash","truncateHash","useTokenBalancesWithLoadingIndicator","validatedTokens","validatedTokenAddresses","vt","balances","ERC20_INTERFACE","anyLoading","callState","useTokenBalances","useTokenBalance","useCurrencyBalances","currencies","ethBalance","uncheckedAddresses","multicallContract","useBNBBalances","useCurrencyBalance","useAllTokenBalances","PairState","PAIR_INTERFACE","usePairs","currencyA","currencyB","pairAddresses","reserves","INVALID","NOT_EXISTS","reserve0","reserve1","EXISTS","usePair","deserializeFarmUserData","farm","tokenBalance","earnings","deserializeFarm","lpAddresses","lpSymbol","pid","dual","multiplier","isCommunity","quoteTokenPriceUsdt","tokenPriceUsdt","quoteToken","tokenAmountTotal","lpTotalInQuoteToken","lpTotalSupply","tokenPriceVsQuote","poolWeight","usePollFarmsPublicData","includeArchive","useRefresh","slowRefresh","pids","nonArchivedFarms","farmToFetch","fetchFarmsPublicDataAsync","usePollFarmsWithUserData","fetchFarmUserDataAsync","usePollCoreFarmData","fastRefresh","useFarms","deserializedFarmsData","loadArchivedFarmsData","useFarmFromPid","f","useFarmUser","useLpTokenPrice","useFarmFromLpSymbol","farmTokenPriceInUsd","useBusdPriceFromPid","lpTokenPrice","overallValueOfAllTokensInFarm","totalLpTokens","usePriceCakeBusd","cakePriceBusdAsString","MATIC_USDC_LP_PID","ConnectWalletButton","useAuth","useAllTransactions","isTransactionRecent","allTransactions","LightCard","LightGreyCard","GreyCard","getTokenLogoURL","DAYS_TO_CALCULATE_AGAINST","getInterestBreakdown","principalInUSD","compoundFrequency","timesCompounded","aprAsDecimal","roundingDecimalsNew","days","daysAsDecimalOfYear","principal","interestEarned","getPrincipalForInterest","interest","compoundingFrequency","apyAsDecimal","performanceFeeAsDecimal","takenAsPerformanceFee","getRoi","amountEarned","amountInvested","getGasPrice","code","languageList","fetchFarmUserAllowances","farmsToFetch","masterChefAddress","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","fetchFarmUserStakedBalances","masterchefABI","rawStakedBalances","parsedStakedBalances","fetchFarmUserEarnings","rawEarnings","parsedEarnings","isArchivedPid","farmConfig","farmsWithoutHelperLps","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","farmsSlice","setLoadArchivedFarmsData","liveFarmData","farmData","userDataEl","transformProfileResponse","profileResponse","userId","numberPoints","teamId","nftAddress","points","profileContract","profileApi","getUsername","username","getProfileAvatar","hasRegistered","getUserProfile","nft","getProfile","getTeam","team","Cookies","avatar","images","domain","secure","expires","profileAvatars","fetchProfileAvatar","fetchProfileUsername","profileSlice","profileFetchStart","profileFetchSucceeded","profileFetchFailed","profileClear","addPoints","fetchProfile","useSwapState","useSwapActionHandlers","onCurrencySelection","onSwitchTokens","onChangeRecipient","tryParseAmount","typedValueParsed","BAD_RECIPIENT_ADDRESSES","involvesAddress","checksummedAddress","liquidityToken","useDerivedSwapInfo","inputError","inputCurrency","outputCurrency","recipientLookup","useENS","relevantTokenBalances","isExactIn","parsedAmount","bestTradeExactIn","useTradeExactIn","bestTradeExactOut","useTradeExactOut","v2Trade","currencyBalances","formattedTo","slippageAdjustedAmounts","balanceIn","amountIn","parseCurrencyFromURLParameter","urlParam","ENS_NAME_REGEX","queryParametersToSwapState","parsedQs","validatedRecipient","exactAmount","parseIndependentFieldURLParameter","exactField","useDefaultsFromURLSearch","search","parseArrays","ignoreQueryPrefix","useParsedQueryString","setResult","parsed","RefreshContext","slow","lotteryContract","processViewLotterySuccessResponse","lotteryId","startTime","endTime","priceTicketInCake","discountDivisor","treasuryFee","firstTicketId","lastTicketId","amountCollectedInCake","finalNumber","cakePerBracket","countWinnersPerBracket","rewardsBreakdown","statusKey","serializedCakePerBracket","cakeInBracket","serializedCountWinnersPerBracket","winnersInBracket","serializedRewardsBreakdown","reward","processViewLotteryErrorResponse","fetchLottery","viewLottery","lotteryData","fetchMultipleLotteries","lotteryIds","multicallRes","processedResponses","fetchCurrentLotteryIdAndMaxBuy","currentLotteryId","maxNumberTicketsPerBuyOrClaim","getRoundIdsArray","currentIdAsInt","roundIds","NUM_ROUNDS_TO_FETCH_FROM_NODES","roundId","useProcessLotteryResponse","priceTicketInCakeAsString","discountDivisorAsString","amountCollectedInCakeAsString","userTickets","hasRoundBeenClaimed","tickets","ticket","methodArgs","overrides","contractMethod","hasManualGasPriceOverride","FetchStatus","NOT_FETCHED","FAILED","fetchStatus","balanceState","setBalanceState","fetchBalance","useGetBnbBalance","setFetchStatus","setBalance","useLastUpdated","lastUpdated","setLastUpdated","walletBalance","refresh","StyledLogo","uriLocations","isZero","hexNumberString","startLength","endLength","setupNetwork","ethereum","chainName","nativeCurrency","rpcUrls","nodes","blockExplorerUrls","registerToken","tokenSymbol","tokenDecimals","image","tokenAdded","EditingCurrency","CalculatorMode","Footer","BulletList","RoiCalculatorFooter","isFarm","displayApr","linkLabel","linkHref","isExpanded","setIsExpanded","my","multiplierRef","multiplierTooltip","multiplierTooltipVisible","gridRowCount","apy","flexDirection","px","gridRowGap","gridTemplateRows","compoundTimes","display","mt","fee","compoundingIndexToFrequency","controls","compounding","activeCompoundingIndex","stakingDuration","mode","ROI_BASED_ON_PRINCIPAL","editingCurrency","USD","principalAsToken","principalAsUSD","roiUSD","roiTokens","roiPercentage","roiCalculatorReducer","toggledCompounding","PRINCIPAL_BASED_ON_ROI","currencyAfterChange","TOKEN","useRoiCalculatorReducer","principalInUSDAsNumber","interestBreakdown","hasInterest","roiAsUSD","principalForExpectedRoi","principalUSD","principalToken","setPrincipalFromUSDValue","principalAsTokenBN","setPrincipalFromTokenValue","principalAsUsdBN","principalAsUsdString","setStakingDuration","stakingDurationIndex","toggleCompounding","toggleEditingCurrency","setCompoundingFrequency","setCalculatorMode","modeToSet","setTargetRoi","targetRoiAsTokens","MILLION","RoiCardWrapper","RoiCardInner","RoiInputContainer","RoiDisplayContainer","RoiDollarAmount","fadeOut","RoiCard","earningTokenSymbol","calculatorState","inputRef","onEnterEditing","ArrowContainer","AnimatedArrow","setKey","prevKey","prevId","StyledModal","ScrollableContainer","FullWidthButtonMenu","RoiCalculatorModal","stakingTokenSymbol","initialValue","balanceInputRef","assetSymbol","editingUnit","editingValue","conversionUnit","conversionValue","asset","onFocus","toLocaleUpperCase","flex","useDebounce","delay","debouncedValue","setDebouncedValue","activate","deactivate","toastError","connectorID","connector","connectorsByName","UnsupportedChainIdError","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","message","walletconnect","close","uriToHttp","uri","substr","teamsList","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","CollectionKey","PANCAKE","TICKET_LIMIT_PER_REQUEST","NUM_ROUNDS_TO_CHECK_FOR_REWARDS","Section","ConfirmedIcon","ConfirmationPendingContent","pendingText","TransactionSubmittedContent","currencyToAdd","strokeWidth","isMetaMask","ConfirmationModalContent","bottomContent","topContent","TransactionErrorContent","pt","TransactionConfirmationModal","customOnDismiss","attemptingTxn","nameOrAddress","validated","reverseLookup","debouncedAddress","ensNodeArgument","namehash","registrarContract","resolverAddress","resolverAddressResult","resolverContract","changed","ENSName","useENSName","lookup","ensName","debouncedName","addr","useENSAddress","isTradeBetter","tradeA","tradeB","minimumDelta","tradeType","equalTo","useAllCommonPairs","bases","common","additionalA","additionalB","basePairs","otherBase","allPairCombinations","t0","t1","tokenA_","tokenB_","customBases","customBasesA","customBasesB","allPairs","curr","currencyAmountIn","currencyOut","allowedPairs","singleHopOnly","Trade","maxHops","maxNumResults","bestTradeSoFar","currentTrade","currencyIn","currencyAmountOut","useIsTransactionUnsupported","unsupportedTokens","tokenIn","tokenOut","DEFAULT_META","StyledPage","bg","PageMeta","useCakeBusdPrice","cakePriceUsdDisplay","pageMeta","getCustomMeta","pageTitle","Page","bgUrl","gasMarginPer10000","rawGasEstimation","gasEstimation","callWithEstimateGas","stakeFarm","enterStaking","wait","deposit","unstakeFarm","leaveStaking","withdraw","harvestFarm","TransactionState","IconWrapper","Transaction","CircleLoader","newTransactionsFirst","renderTransactions","TransactionsModal","sortedRecentTransactions","confirmed","clearAllTransactionsCallback","Transactions","onPresentTransactionsModal","AppHeaderContainer","AppHeader","subtitle","helper","backTo","noConfig","GlobalSettings","AppBody","blockSlice","initialBlock","CoreTag","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","getNodeUrl","sample","parseENSAddress","ensAddress","ensPath","StyledSVG","stroke","strokeLinecap","strokeLinejoin","tokenListValidator","Ajv","allErrors","compile","schema","getTokenList","resolveENSContentHash","parsedENS","contentHashUri","translatedUri","contenthashToUri","isLast","validationErrors","errors","dataPath","REGISTRAR_ABI","constant","outputs","payable","stateMutability","REGISTRAR_ADDRESS","RESOLVER_ABI","internalType","ensRegistrarContract","resolver","contenthash","useFetchListCallback","useWeb3Provider","ensResolver","sendDispatch","nanoid","ToastsProvider","setToasts","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","toastInfo","toastSuccess","toastWarning","ToastListener","inputRegex","nextUserInput","autoComplete","autoCorrect","minLength","maxLength","spellCheck","InputRow","CurrencySelectButton","LabelRow","InputPanel","hideInput","CurrencyInputPanel","onMax","showMaxButton","onCurrencySelect","disableCurrencySelect","hideBalance","otherCurrency","showCommonBases","selectedCurrencyBalance","translatedLabel","CurrencySearchModal","selectedCurrency","otherSelectedCurrency","onPresentCurrencyModal","val","searchingAddress","lowerSearchParts","matchesSearch","sParts","s_","sp","endsWith","useSortedTokensByQuery","symbolMatch","exactMatches","symbolSubtrings","trim","rpcUrl","injected","InjectedConnector","supportedChainIds","rpc","qrcode","pollingInterval","getLibrary","Web3Provider","Dots","useTotalSupply","totalSupply","getTeamProfile","teamName","numberUsers","isJoinable","staticTeamInfo","staticTeam","getTeams","teamsById","numberTeams","nbTeams","teamData","onChainTeamData","ipfs","serializedTokensMap","Nfts","nfts","pancakeBunnies","getTokenUrl","tokenUri","fetchCachedUriData","tokenUrl","localUriData","uriDataResponse","uriData","getTokenUriData","tokenURI","pancake","USDT_MAINNET","useBUSDPrice","wrapped","tokenPairs","ethPairState","ethPair","usdtPairState","usdtPair","usdtEthPairState","usdtEthPair","price","priceOf","Price","ethPairETHAmount","reserveOf","ethPairETHBUSDValue","tokenAmounts","quote","greaterThan","ethBusdPrice","currencyEthPrice","busdPrice","Nav","SubNav","flexGrow","getImageUrlFromToken","primaryToken","secondaryToken","ifos","usePreviousValue","mx","maxWidth","useTransactionDeadline","blockTimestamp","useCurrentBlockTimestamp","priceHelperLps","transformUserData","transformPool","quoteTokenAddress","MAX_USER_LOTTERIES_REQUEST_SIZE","applyNodeDataToUserGraphResponse","userNodeData","userGraphData","lotteryNodeData","nodeRound","ticketDataForRound","roundTickets","totalTickets","nodeRoundsWithGraphData","userNodeRound","userGraphRound","graphResponseRound","nodeRoundData","lastCombinedDataRound","lastCombinedDataRoundIndex","graphRound","remainingSubgraphRounds","splice","getGraphLotteryUser","blankUser","totalCake","userRes","getUserLotteryData","idsForTicketsNodeCall","fetchUserTicketsForMultipleRounds","roundDataAndUserTickets","userRoundsNodeData","idsForLotteriesNodeCall","lotteriesNodeData","graphResponse","mergedRoundData","graphResponseWithNodeRounds","VISIBILITY_STATE_SUPPORTED","visibilityState","setIsVisible","handleVisibilityChange","UTF_8_DECODER","TextDecoder","buff","hex","arr","Uint8Array","hexToUint8Array","codec","getCodec","rmPrefix","cid","CID","toB58String","multihash","decode","digest","RefreshContextProvider","setSlow","setFast","isBrowserTabActiveRef","onVisibilityChange","useIsBrowserTabActive","interval","setStateLastUpdated","previousLastUpdated","DetailsFooter","UnsupportedModal","UnsupportedCurrencyFooter","onPresentModal","BAD_SRCS","onError","ImportToken","handleCurrencySelect","setConfirmed","addToken","inactiveTokenList","gridGap","userSelect","maxAmountSpend","SlippageError","DeadlineError","SlippageTabs","slippageError","deadlineError","setUserSlippageTolerance","setTtl","slippageInput","setSlippageInput","deadlineInput","setDeadlineInput","slippageInputIsValid","deadlineInputIsValid","RiskyLow","RiskyHigh","InvalidInput","parseCustomSlippage","valueAsIntFromRoundedFloat","parseCustomDeadline","valueAsInt","flexWrap","onBlur","ExpertModal","setShowConfirmExpertModal","setShowExpertModeAcknowledgement","toggleExpertMode","isRememberChecked","setIsRememberChecked","prompt","PancakeToggleWrapper","SettingsModal","showConfirmExpertModal","showExpertModeAcknowledgement","setSingleHopOnly","TransactionSettings","onPresentSettingsModal","fetchFarm","lpAddress","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","quoteTokenDecimals","lpTokenRatio","quoteTokenAmountTotal","quoteTokenAmountMc","totalAllocPoint","allocPoint","fetchPublicFarmData","farmPublicData","serializedFarm","filterFarmsByQuoteToken","preferredQuoteTokens","preferredFarm","getFarmFromTokenSymbol","farmsWithTokenSymbol","getFarmBaseTokenPrice","quoteTokenFarm","bnbPriceBusd","hasTokenPriceVsQuote","quoteTokenInBusd","getFarmQuoteTokenPrice","bnbBusdFarm","ens","resolvedContentHash","useENSContentHash","Latinise","latin_map","τ","Τ","latinise","ZERO","useMintState","ConfirmAddModalBottom","parsedAmounts","poolTokenPercentage","onAdd","CURRENCY_B","PoolPriceBar","assetA","assetB","AddLiquidity","currencyIdA","currencyIdB","tokenAApprovalRequest","tokenBApprovalRequest","oneCurrencyIsWETH","dependentField","pairState","equal","independentAmount","dependentAmount","wrappedIndependentAmount","dependentCurrency","dependentTokenAmount","currencyAAmount","currencyBAmount","wrappedCurrencyA","liquidityMinted","tokenAmountA","tokenAmountB","getLiquidityMinted","useDerivedMintInfo","onFieldAInput","onFieldBInput","useMintActionHandlers","setAttemptingTxn","setTxHash","formattedAmounts","maxAmounts","accumulator","atMaxAmounts","approvalA","approveACallback","approvalB","approveBCallback","router","parsedAmountA","parsedAmountB","amountsMin","tokenBIsETH","estimate","addLiquidityETH","args","toHexString","addLiquidity","estimatedGasLimit","err","modalHeader","modalBottom","amountA","symbolA","amountB","symbolB","handleCurrencyASelect","currencyA_","newCurrencyIdA","handleCurrencyBSelect","currencyB_","newCurrencyIdB","handleDismissConfirmation","addIsUnsupported","onApproveA","onApproveB","onPresentAddLiquidityModal","App","toExact","marginTop","showUnwrapped","isTransitioning","lotteriesData","userLotteryData","fetchCurrentLottery","lotteryInfo","fetchCurrentLotteryId","currentIdAndMaxBuy","fetchUserTicketsAndLotteries","userLotteriesRes","userParticipationInCurrentRound","userLotteries","fetchPublicLotteries","getLotteriesData","lotteries","fetchUserLotteries","fetchAdditionalUserLotteries","additionalUserLotteries","setLotteryIsTransitioning","LotterySlice","setLotteryPublicData","mergedRounds","FixedHeightRow","LogoWrapper","MinimalPositionCard","setShowMore","userPoolBalance","totalPoolTokens","greaterThanOrEqual","getLiquidityValue","token0Deposited","token1Deposited","FullPositionCard","MAX_LOTTERIES_REQUEST_SIZE","applyNodeDataToLotteriesGraphResponse","nodeData","ticketPrice","totalUsers","winningTickets","graphRoundData","getGraphLotteries","idsForNodesCall","mergedData","processRawTicketsResponse","ticketsResponse","ticketIds","ticketNumbers","ticketStatuses","ticketId","viewUserInfoForLotteryId","perRequestLimit","fetchUserTicketsForOneRound","numReturned","ticketData","idsToCheck","ticketsForMultipleRounds","ticketsForRound","rewardTokenPrice","totalRewardPricePerYear","totalStakingTokenInPool","getFarmApr","poolLiquidityUsd","farmAddress","cakeRewardsApr","cakeRewardsAprAsNumber","lpRewardsApr","lpAprs","useIntersectionObserver","observerRef","intersectionObserverRef","observerIsSet","setObserverIsSet","setIsIntersecting","FlexLayout","DropDownHeader","DropDownListContainer","DropDownContainer","DropDownList","ListItem","li","Select","onOptionChange","dropdownRef","selectedOptionIndex","setSelectedOptionIndex","toggling","option","selectedIndex","Loading","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","abs","timeLeft","years","months","hours","minutes","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","BaseWrapper","disable","CommonBases","onSelect","TokenSection","dim","CheckIcon","NameOverflow","ImportRow","showImportView","setImportToken","isAdded","currencyKey","StyledBalanceText","FixedContentRow","MenuItem","CurrencyRow","isSelected","otherSelected","selectedTokenList","isOnSelectedList","customAdded","justifySelf","CurrencyList","fixedListRef","showETH","breakIndex","itemData","formatted","Currency","showImport","itemKey","itemCount","itemSize","useTokenComparator","comparator","balanceA","balanceB","balanceComp","getTokenComparator","swapSound","Audio","CurrencySearch","CurrencyModalView","fixedList","setSearchQuery","debouncedQuery","invertSearchOrder","searchToken","searchTokenIsAdded","tokenComparator","filteredTokens","sortedTokens","filteredSortedTokens","play","handleInput","checksummedInput","scrollTo","handleEnter","filteredInactiveTokens","onKeyDown","RowWrapper","listUrlRowHTMLId","ListRow","listsByUrl","handleAcceptListUpdate","handleRemoveList","confirm","handleEnableList","handleDisableList","major","minor","patch","ListContainer","ManageLists","setModalView","setImportList","setListUrl","listUrlInput","setListUrlInput","activeCopy","setActiveCopy","fetchList","validUrl","sortedLists","u1","u2","l1","l2","tempList","setTempList","addError","setAddError","fetchTempList","isImported","handleImport","importList","paddingTop","marginLeft","ManageTokens","removeToken","handleRemoveAll","isAddressValid","importToken","Manage","showLists","setShowLists","TextDot","ImportList","listURL","onImport","adding","handleAddList","StyledModalContainer","StyledModalBody","modalView","prevView","usePrevious","manage","Outer","PageHeader","InputWrapper","SearchInput","onChangeCallback","searchText","setSearchText","debouncedOnChange","debounce","Updater","callback","leading","savedCallback","tick","useInterval","PATCH","MINOR","MAJOR","waitRandom","ms","CancelledError","RetryableError","chunk","minBlockNumber","obj","resultsBlockNumber","debouncedListeners","cancellations","listeningKeys","allListeners","keyListeners","previousMin","activeListeningKeys","unserializedOutdatedCallKeys","minDataBlockNumber","outdatedListeningKeys","serializedOutdatedCallKeys","outdatedCallKeys","chunkedCalls","maxChunkSize","numChunks","chunkSize","ix","chunkArray","fn","rejectCancelled","n","minWait","maxWait","completed","promise","cancel","retry","fetchChunk","fetchBlockNumber","firstCallKeyIndex","lastCallKeyIndex","blocksSinceCheck","minutesPending","shouldCheck","getTransactionReceipt","blockHash","transactionHash","transactionIndex","WalletView","useEagerConnect","Reflect","useProfile","hasProfile","StyledDatePickerPortal","DatePickerPortal","GlobalStyle","Address","CopyAddress","readOnly","ele","WalletInfo","hasLowBnbBalance","cakeBalance","cakeFetchStatus","fontWeight","TxnIcon","Summary","TxnLink","renderIcon","txn","TransactionRow","WalletTransactions","sortedTransactions","minHeight","LOW_BNB_BALANCE","UIKitModalHeader","Tabs","WalletModal","initialView","WALLET_INFO","view","setView","newIndex","TRANSACTIONS","WalletUserMenuItem","onPresentWalletModal","onPresentTransactionModal","profileLink","noProfileLink","showPip","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","reload","Component","PageLoader","EasterEgg","setShow","startFalling","onAnimationEnd","createBrowserHistory","useCakeVault","totalSharesAsString","pricePerFullShareAsString","totalCakeInVaultAsString","estimatedCakeBountyRewardAsString","totalPendingCakeHarvestAsString","userSharesAsString","cakeAtLastUserActionAsString","amountInFarmString","ApyLabelContainer","AprRow","tooltipContent","earningsPercentageToDisplay","apyModalLink","plus","onPresentApyModal","RemainingTime","secs","setSecs","timeStr","mins","ExpandedWrapper","ExpandedFooter","poolContractAddress","cakeVaultContractAddress","isMetaMaskInScope","isManualCakePool","totalStakedTargetRef","totalStakedTooltip","totalStakedTooltipVisible","manualCakeTotalMinusAutoVault","getTotalStakedBalance","ExpandableButtonWrapper","manualTooltipText","autoTooltipText","CakeVaultTokenPairImage","primaryTokenSrc","StyledCardHeader","isStaking","isCakePool","useApprovePool","lpContract","requestedApproval","setRequestedApproval","sousChefContract","handleApprove","constants","useVaultApprove","cakeContract","useCheckVaultApprovalStatus","isVaultApproved","setIsVaultApproved","checkApprovalStatus","ApprovalAction","stakingTokenContract","NotEnoughTokensModal","PercentageButton","sousStake","sousStakeBnb","useStakePool","isUsingBnb","handleStake","onStake","sousUnstake","units","sousEmergencyUnstake","emergencyWithdraw","useUnstakePool","enableEmergencyWithdraw","handleUnstake","onUnstake","AnnualRoiContainer","AnnualRoiDisplay","StakeModal","isBnbPool","isRemovingStake","pendingTx","setPendingTx","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","showRoiCalculator","setShowRoiCalculator","getCalculatedStakingLimit","fullDecimalStakeAmount","userNotEnoughToken","usdValueStaked","formattedUsdValueStaked","annualRoi","formattedAnnualRoi","getTokenLink","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleConfirmClick","convertedInput","percentage","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","harvestPool","harvestPoolBnb","useHarvestPool","handleHarvest","onReward","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","handleHarvestConfirm","pb","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","InlineText","CardActions","needsApproval","StakeActions","PoolCard","accountHasStakedBalance","VaultApprovalAction","useWithdrawalFeeTimer","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","prevSeconds","WithdrawalFeeTimer","day","hour","minute","UnstakingFeeCountdownRow","isTableVariant","feeAsDecimal","noFeeToPay","shouldShowTimer","FeeSummary","feeInCake","callOptions","VaultStakeModal","stakingMax","cakePriceBusd","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","handleDeposit","HasSharesActions","stakedDollarValue","VaultStakeActions","accountHasSharesStaked","CakeVaultCardActions","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","RecentCakeProfitCountdownRow","lastActionInMs","StyledCardBody","CakeVaultCard","showStakedOnly","isVaultUserDataLoading","RecentCakeProfitRow","VaultCardActions","ToggleView","onToggle","handleToggle","CARD","ToggleWrapper","ViewControls","PoolTabButtons","setStakedOnly","hasStakeInFinishedPools","setViewMode","useRouteMatch","isExact","viewModeToggle","liveOrFinishedSwitch","stakedOnlySwitch","Divider","BountyModal","TooltipComponent","callFeeAsDecimal","totalYieldToDisplay","estimatedDollarBountyReward","hasFetchedDollarBounty","hasFetchedCakeBounty","dollarBountyToDisplay","cakeBountyToDisplay","BountyCard","onPresentBountyModal","ButtonText","HelpButton","BaseCell","CellContent","StyledCell","NameCell","hasVaultShares","showStakedTag","showSubtitle","EarningsCell","labelText","AprLabelContainer","Apr","showIcon","openRoiModal","AprCell","TotalStakedCell","totalStakedBalance","EndsInCell","renderBlocks","showLoading","ArrowIcon","ChevronDownIcon","toggled","isFullLayout","ActionContainer","ActionTitles","ActionContent","HarvestAction","actionTitle","alignSelf","lineHeight","IconButtonWrapper","Staked","handlePoolApprove","requestedPoolApproval","handleVaultApprove","requestedVaultApproval","isNotVaultAndHasStake","hasSharesStaked","isVaultWithShares","stakedAutoDollarValue","onPresentVaultStake","onPresentVaultUnstake","AutoHarvestAction","expandAnimation","collapseAnimation","StyledActionPanel","InfoSection","ActionPanel","poolStakingTokenBalance","tagTargetRef","tagTooltip","tagTooltipVisible","maxStakeRow","blocksRow","aprRow","totalStakedRow","AutoHarvest","Harvest","Stake","HelpIconWrapper","AutoEarningsCell","AutoAprCell","StyledRow","PoolRow","isLargerScreen","setExpanded","shouldRenderActionPanel","ExpandActionCell","StyledTable","StyledTableBorder","ScrollButtonContainer","PoolsTable","tableWrapperEl","scrollIntoView","behavior","CardLayout","PoolControls","FilterContainer","LabelWrapper","ControlStretch","Pools","usePools","poolsWithoutAutoVault","numberOfPoolsVisible","setNumberOfPoolsVisible","sortOption","setSortOption","chosenPoolsLength","vaultWagInFarm","accountHasVaultShares","cakePool","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyOpenPools","useFetchCakeVault","fetchPoolsPublicData","useFetchPublicPoolsData","useFetchUserPools","poolsCurrentlyVisible","chosenPools","showFinishedPools","lowercaseQuery","poolsToSort","NaN","sortPools","cardLayout","tableLayout","SwapWarningTokens","bondly","safemoon","ContainerRow","InputContainer","AddressInputPanel","withoutSpaces","autoCapitalize","ArrowWrapper","clickable","ErrorText","severity","StyledBalanceMaxMini","TruncatedText","SwapCallbackErrorInner","SwapCallbackErrorInnerAlertTriangle","SwapCallbackError","SwapShowAcceptChanges","FormattedPriceImpact","SwapModalFooterContainer","SwapModalFooter","onConfirm","swapErrorMessage","disabledConfirm","showInverted","setShowInverted","paddingLeft","TradeType","EXACT_INPUT","SwapModalHeader","showAcceptChanges","onAcceptChanges","priceImpactSeverity","EXACT_OUTPUT","ConfirmSwapModal","originalTrade","confirmationContent","isDefined","useLastTruthy","filterFn","last","setLast","useLast","isLastItem","TradeSummary","AdvancedSwapDetails","showRoute","AdvancedDetailsFooter","AdvancedSwapDetailsDropdown","lastTrade","TradePrice","formattedPrice","baseCurrency","quoteCurrency","ImportTokenWarningModal","onCancel","Grouping","Circle","CircleRow","Connector","prevConfirmed","ProgressCircles","steps","SwapCallbackState","useSwapCallArguments","recipientAddressOrName","recipientAddress","swapMethods","Router","swapCallParameters","feeOnTransfer","parameters","WrapType","NOT_APPLICABLE","wrapType","SafemoonWarning","BondlyWarning","Acknowledgement","handleContinueClick","isConfirmed","setIsConfirmed","SwapWarningModal","swapCurrency","preventClickHandler","querySelectorAll","SWAP_WARNING","SwapWarningTokensConfig","component","Label","Swap","loadedUrlParams","loadedInputCurrency","loadedOutputCurrency","urlLoadedTokens","importTokensNotInDefault","isExpertMode","swapInputError","wethContract","sufficientBalance","WRAP","execute","txReceipt","UNWRAP","useWrapCallback","onWrap","wrapInputError","showWrap","handleTypeInput","handleTypeOutput","tradeToConfirm","setSwapState","userHasSpecifiedInputOutput","noRoute","approveCallback","approvalSubmitted","setApprovalSubmitted","maxAmountInput","atMaxAmountInput","swapCalls","VALID","gasEstimate","gasError","callStatic","callError","reason","estimatedCalls","successfulEstimation","errorCalls","inputSymbol","outputSymbol","withRecipient","useSwapCallback","swapCallback","swapCallbackError","handleSwap","confirmPriceImpactWithoutFee","showApproveFlow","handleConfirmDismiss","handleAcceptChanges","swapWarningCurrency","setSwapWarningCurrency","onPresentSwapWarningModal","shouldShowSwapWarning","isWarningToken","warningTokenConfig","warningTokenData","handleInputSelect","showSwapWarning","handleMaxInput","handleOutputSelect","swapIsUnsupported","onPresentImportTokenWarningModal","onPresentConfirmModal","RedirectToAddLiquidity","OLD_PATH_STRUCTURE","RedirectOldAddLiquidityPathStructure","RedirectDuplicateTokenIds","RedirectOldRemoveLiquidityPathStructure","RedirectPathToSwapOnly","RedirectToSwap","Farms","lazy","Lottery","NotFound","Liquidity","PoolFinder","RemoveLiquidity","Info","useFetchProfile","Global","exact","strict","ThemeProviderWrapper","Providers","Updaters","Blocklist","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.a07e78c5.chunk.js","sourcesContent":["import get from 'lodash/get'\nimport { DefaultTheme } from 'styled-components'\n\nconst getThemeValue =\n  (path: string, fallback?: string | number) =>\n  (theme: DefaultTheme): string =>\n    get(theme, path, fallback)\n\nexport default getThemeValue\n","import styled, { css, keyframes } from 'styled-components'\nimport { space } from 'styled-system'\nimport getThemeValue from '../../util/getThemeValue'\nimport { SvgProps } from './types'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst spinStyle = css`\n  animation: ${rotate} 2s linear infinite;\n`\n\nconst Svg = styled.svg<SvgProps>`\n  align-self: center; // Safari fix\n  fill: ${({ theme, color }) => getThemeValue(`colors.${color}`, color)(theme)};\n  flex-shrink: 0;\n  ${({ spin }) => spin && spinStyle}\n  ${space}\n`\n\nSvg.defaultProps = {\n  color: 'text',\n  width: '20px',\n  xmlns: 'http://www.w3.org/2000/svg',\n  spin: false,\n}\n\nexport default Svg\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM12 20C7.59 20 4 16.41 4 12C4 7.59 7.59 4 12 4C16.41 4 20 7.59 20 12C20 16.41 16.41 20 12 20ZM15.88 8.29L10 14.17L8.12 12.29C7.73 11.9 7.1 11.9 6.71 12.29C6.32 12.68 6.32 13.31 6.71 13.7L9.3 16.29C9.69 16.68 10.32 16.68 10.71 16.29L17.3 9.7C17.69 9.31 17.69 8.68 17.3 8.29C16.91 7.9 16.27 7.9 15.88 8.29Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M12 7C12.55 7 13 7.45 13 8V12C13 12.55 12.55 13 12 13C11.45 13 11 12.55 11 12V8C11 7.45 11.45 7 12 7ZM11.99 2C6.47 2 2 6.48 2 12C2 17.52 6.47 22 11.99 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 11.99 2ZM12 20C7.58 20 4 16.42 4 12C4 7.58 7.58 4 12 4C16.42 4 20 7.58 20 12C20 16.42 16.42 20 12 20ZM13 17H11V15H13V17Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22ZM12 4C16.42 4 20 7.58 20 12C20 13.85 19.37 15.55 18.31 16.9L7.1 5.69C8.45 4.63 10.15 4 12 4ZM5.69 7.1L16.9 18.31C15.55 19.37 13.85 20 12 20C7.58 20 4 16.42 4 12C4 10.15 4.63 8.45 5.69 7.1Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M11 7H13V9H11V7ZM12 17C12.55 17 13 16.55 13 16V12C13 11.45 12.55 11 12 11C11.45 11 11 11.45 11 12V16C11 16.55 11.45 17 12 17ZM12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM12 20C7.59 20 4 16.41 4 12C4 7.59 7.59 4 12 4C16.41 4 20 7.59 20 12C20 16.41 16.41 20 12 20Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import styled, { DefaultTheme } from 'styled-components'\nimport { space, typography, layout } from 'styled-system'\nimport getThemeValue from '../../util/getThemeValue'\nimport { TextProps } from './types'\n\ninterface ThemedProps extends TextProps {\n  theme: DefaultTheme\n}\n\nconst getColor = ({ color, theme }: ThemedProps) => {\n  return getThemeValue(`colors.${color}`, color)(theme)\n}\n\nconst getFontSize = ({ fontSize, small }: TextProps) => {\n  return small ? '14px' : fontSize || '16px'\n}\n\nconst Text = styled.div<TextProps>`\n  color: ${getColor};\n  font-size: ${getFontSize};\n  font-weight: ${({ bold }) => (bold ? 600 : 200)};\n  line-height: 1.5;\n  ${({ textTransform }) => textTransform && `text-transform: ${textTransform};`}\n  ${({ ellipsis }) =>\n    ellipsis &&\n    `white-space: nowrap;\n    overflow: hidden;\n    text- : ellipsis;`}\n\n  ${space}\n  ${typography}\n  ${layout}\n`\n\nText.defaultProps = {\n  color: 'text',\n  small: false,\n  ellipsis: false,\n}\n\nexport default Text\n","import styled from 'styled-components'\nimport Text from './Text'\n\nconst TooltipText = styled(Text)`\n  text-decoration: ${({ theme }) => `underline dotted ${theme.colors.textSubtle}`};\n  text-underline-offset: 0.1em;\n`\n\nexport default TooltipText\n","const getExternalLinkProps = (): { target: string; rel: string } => ({\n  target: '_blank',\n  rel: 'noreferrer noopener',\n})\n\nexport default getExternalLinkProps\n","import { ComponentProps, ElementType, ReactElement, ReactNode } from 'react'\nimport { Link } from 'react-router-dom'\nimport { LayoutProps, SpaceProps } from 'styled-system'\n\nexport const scales = {\n  MD: 'md',\n  SM: 'sm',\n  XS: 'xs',\n} as const\n\nexport const variants = {\n  PRIMARY: 'primary',\n  SECONDARY: 'secondary',\n  TERTIARY: 'tertiary',\n  TEXT: 'text',\n  DANGER: 'danger',\n  SUBTLE: 'subtle',\n  SUCCESS: 'success',\n  LIGHT: 'light',\n} as const\n\nexport type Scale = typeof scales[keyof typeof scales]\nexport type Variant = typeof variants[keyof typeof variants]\n\n/**\n * @see https://www.benmvp.com/blog/polymorphic-react-components-typescript/\n */\nexport type AsProps<E extends ElementType = ElementType> = {\n  as?: E\n}\n\nexport type MergeProps<E extends ElementType> = AsProps<E> & Omit<ComponentProps<E>, keyof AsProps>\n\nexport type PolymorphicComponentProps<E extends ElementType, P> = P & MergeProps<E>\n\nexport type PolymorphicComponent<P, D extends ElementType = 'button'> = <E extends ElementType = D>(\n  props: PolymorphicComponentProps<E, P>,\n) => ReactElement | null\n\nexport interface BaseButtonProps extends LayoutProps, SpaceProps {\n  as?: 'a' | 'button' | typeof Link\n  external?: boolean\n  isLoading?: boolean\n  scale?: Scale\n  variant?: Variant\n  disabled?: boolean\n  startIcon?: ReactNode\n  endIcon?: ReactNode\n}\n\nexport type ButtonProps<P extends ElementType = 'button'> = PolymorphicComponentProps<P, BaseButtonProps>\n","import { scales, variants } from './types'\n\nexport const scaleVariants = {\n  [scales.MD]: {\n    height: '48px',\n    padding: '0 24px',\n  },\n  [scales.SM]: {\n    height: '32px',\n    padding: '0 16px',\n  },\n  [scales.XS]: {\n    height: '20px',\n    fontSize: '12px',\n    padding: '0 8px',\n  },\n}\n\nexport const styleVariants = {\n  [variants.PRIMARY]: {\n    backgroundColor: 'primary',\n    color: 'white',\n  },\n  [variants.SECONDARY]: {\n    backgroundColor: 'transparent',\n    border: '2px solid',\n    borderColor: 'primary',\n    boxShadow: 'none',\n    color: 'primary',\n    ':disabled': {\n      backgroundColor: 'transparent',\n    },\n  },\n  [variants.TERTIARY]: {\n    backgroundColor: 'tertiary',\n    boxShadow: 'none',\n    color: 'primary',\n  },\n  [variants.SUBTLE]: {\n    backgroundColor: 'textSubtle',\n    color: 'backgroundAlt',\n  },\n  [variants.DANGER]: {\n    backgroundColor: 'failure',\n    color: 'white',\n  },\n  [variants.SUCCESS]: {\n    backgroundColor: 'success',\n    color: 'white',\n  },\n  [variants.TEXT]: {\n    backgroundColor: 'transparent',\n    color: 'primary',\n    boxShadow: 'none',\n  },\n  [variants.LIGHT]: {\n    backgroundColor: 'input',\n    color: 'textSubtle',\n    boxShadow: 'none',\n  },\n}\n","import styled, { DefaultTheme } from 'styled-components'\nimport { space, layout, variant } from 'styled-system'\nimport { scaleVariants, styleVariants } from './theme'\nimport { BaseButtonProps } from './types'\n\ninterface ThemedButtonProps extends BaseButtonProps {\n  theme: DefaultTheme\n}\n\ninterface TransientButtonProps extends ThemedButtonProps {\n  $isLoading?: boolean\n}\n\nconst getDisabledStyles = ({ $isLoading, theme }: TransientButtonProps) => {\n  if ($isLoading === true) {\n    return `\n      &:disabled,\n      &.pancake-button--disabled {\n        cursor: not-allowed;\n      }\n    `\n  }\n\n  return `\n    &:disabled,\n    &.pancake-button--disabled {\n      background-color: ${theme.colors.backgroundDisabled};\n      border-color: ${theme.colors.backgroundDisabled};\n      box-shadow: none;\n      color: ${theme.colors.textDisabled};\n      cursor: not-allowed;\n    }\n  `\n}\n\n/**\n * This is to get around an issue where if you use a Link component\n * React will throw a invalid DOM attribute error\n * @see https://github.com/styled-components/styled-components/issues/135\n */\n\nconst getOpacity = ({ $isLoading = false }: TransientButtonProps) => {\n  return $isLoading ? '.5' : '1'\n}\n\nconst StyledButton = styled.button<BaseButtonProps>`\n  align-items: center;\n  border: 0;\n  border-radius: 16px;\n  box-shadow: 0px -1px 0px 0px rgba(14, 14, 44, 0.4) inset;\n  cursor: pointer;\n  display: inline-flex;\n  font-family: inherit;\n  font-size: 16px;\n  font-weight: 600;\n  justify-content: center;\n  letter-spacing: 0.03em;\n  line-height: 1;\n  opacity: ${getOpacity};\n  outline: 0;\n  transition: background-color 0.2s, opacity 0.2s;\n\n  &:hover:not(:disabled):not(.pancake-button--disabled):not(.pancake-button--disabled):not(:active) {\n    opacity: 0.65;\n  }\n\n  &:active:not(:disabled):not(.pancake-button--disabled):not(.pancake-button--disabled) {\n    opacity: 0.85;\n    transform: translateY(1px);\n    box-shadow: none;\n  }\n\n  ${getDisabledStyles}\n  ${variant({\n    prop: 'scale',\n    variants: scaleVariants,\n  })}\n  ${variant({\n    variants: styleVariants,\n  })}\n  ${layout}\n  ${space}\n`\n\nexport default StyledButton\n","import React, { cloneElement, ElementType, isValidElement } from 'react'\nimport getExternalLinkProps from '../../util/getExternalLinkProps'\nimport StyledButton from './StyledButton'\nimport { ButtonProps, scales, variants } from './types'\n\nconst Button = <E extends ElementType = 'button'>(props: ButtonProps<E>): JSX.Element => {\n  const { startIcon, endIcon, external, className, isLoading, disabled, children, ...rest } = props\n  const internalProps = external ? getExternalLinkProps() : {}\n  const isDisabled = isLoading || disabled\n  const classNames = className ? [className] : []\n\n  if (isLoading) {\n    classNames.push('pancake-button--loading')\n  }\n\n  if (isDisabled && !isLoading) {\n    classNames.push('pancake-button--disabled')\n  }\n\n  return (\n    <StyledButton\n      $isLoading={isLoading}\n      className={classNames.join(' ')}\n      disabled={isDisabled}\n      {...internalProps}\n      {...rest}\n    >\n      <>\n        {isValidElement(startIcon) &&\n          cloneElement(startIcon, {\n            mr: '0.5rem',\n          })}\n        {children}\n        {isValidElement(endIcon) &&\n          cloneElement(endIcon, {\n            ml: '0.5rem',\n          })}\n      </>\n    </StyledButton>\n  )\n}\n\nButton.defaultProps = {\n  isLoading: false,\n  external: false,\n  variant: variants.PRIMARY,\n  scale: scales.MD,\n  disabled: false,\n}\n\nexport default Button\n","import styled from 'styled-components'\nimport Button from './Button'\nimport { BaseButtonProps, PolymorphicComponent } from './types'\n\nconst IconButton: PolymorphicComponent<BaseButtonProps, 'button'> = styled(Button)<BaseButtonProps>`\n  padding: 0;\n  width: ${({ scale }) => (scale === 'sm' ? '32px' : '48px')};\n`\n\nexport default IconButton\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M18 13H13V18C13 18.55 12.55 19 12 19C11.45 19 11 18.55 11 18V13H6C5.45 13 5 12.55 5 12C5 11.45 5.45 11 6 11H11V6C11 5.45 11.45 5 12 5C12.55 5 13 5.45 13 6V11H18C18.55 11 19 11.45 19 12C19 12.55 18.55 13 18 13Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M19 11H7.82998L12.71 6.12C13.1 5.73 13.1 5.09 12.71 4.7C12.32 4.31 11.69 4.31 11.3 4.7L4.70998 11.29C4.31998 11.68 4.31998 12.31 4.70998 12.7L11.3 19.29C11.69 19.68 12.32 19.68 12.71 19.29C13.1 18.9 13.1 18.27 12.71 17.88L7.82998 13H19C19.55 13 20 12.55 20 12C20 11.45 19.55 11 19 11Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M11 5V16.17L6.11997 11.29C5.72997 10.9 5.08997 10.9 4.69997 11.29C4.30997 11.68 4.30997 12.31 4.69997 12.7L11.29 19.29C11.68 19.68 12.31 19.68 12.7 19.29L19.29 12.7C19.68 12.31 19.68 11.68 19.29 11.29C18.9 10.9 18.27 10.9 17.88 11.29L13 16.17V5C13 4.45 12.55 4 12 4C11.45 4 11 4.45 11 5Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M8.71005 11.71L11.3001 14.3C11.6901 14.69 12.3201 14.69 12.7101 14.3L15.3001 11.71C15.9301 11.08 15.4801 10 14.5901 10H9.41005C8.52005 10 8.08005 11.08 8.71005 11.71Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M8.71005 12.29L11.3001 9.69997C11.6901 9.30997 12.3201 9.30997 12.7101 9.69997L15.3001 12.29C15.9301 12.92 15.4801 14 14.5901 14H9.41005C8.52005 14 8.08005 12.92 8.71005 12.29Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M5 13H16.17L11.29 17.88C10.9 18.27 10.9 18.91 11.29 19.3C11.68 19.69 12.31 19.69 12.7 19.3L19.29 12.71C19.68 12.32 19.68 11.69 19.29 11.3L12.71 4.7C12.32 4.31 11.69 4.31 11.3 4.7C10.91 5.09 10.91 5.72 11.3 6.11L16.17 11H5C4.45 11 4 11.45 4 12C4 12.55 4.45 13 5 13Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M3 13.1835H14.17L9.29 18.0635C8.9 18.4535 8.9 19.0935 9.29 19.4835C9.68 19.8735 10.31 19.8735 10.7 19.4835L17.29 12.8935C17.68 12.5035 17.68 11.8735 17.29 11.4835L10.71 4.88347C10.32 4.49347 9.69 4.49347 9.3 4.88347C8.91 5.27347 8.91 5.90347 9.3 6.29347L14.17 11.1835H3C2.45 11.1835 2 11.6335 2 12.1835C2 12.7335 2.45 13.1835 3 13.1835Z\" />\n      <path d=\"M20 5.18347C20.5523 5.18347 21 5.63119 21 6.18347V18.1835C21 18.7358 20.5523 19.1835 20 19.1835C19.4477 19.1835 19 18.7358 19 18.1835V6.18347C19 5.63119 19.4477 5.18347 20 5.18347Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M13 19V7.83001L17.88 12.71C18.27 13.1 18.91 13.1 19.3 12.71C19.69 12.32 19.69 11.69 19.3 11.3L12.71 4.71001C12.32 4.32001 11.69 4.32001 11.3 4.71001L4.69997 11.29C4.30997 11.68 4.30997 12.31 4.69997 12.7C5.08997 13.09 5.71997 13.09 6.10997 12.7L11 7.83001V19C11 19.55 11.45 20 12 20C12.55 20 13 19.55 13 19Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M12 6V7.79C12 8.24 12.54 8.46 12.85 8.14L15.64 5.35C15.84 5.15 15.84 4.84 15.64 4.64L12.85 1.85C12.54 1.54 12 1.76 12 2.21V4C7.58 4 4 7.58 4 12C4 13.04 4.2 14.04 4.57 14.95C4.84 15.62 5.7 15.8 6.21 15.29C6.48 15.02 6.59 14.61 6.44 14.25C6.15 13.56 6 12.79 6 12C6 8.69 8.69 6 12 6ZM17.79 8.71C17.52 8.98 17.41 9.4 17.56 9.75C17.84 10.45 18 11.21 18 12C18 15.31 15.31 18 12 18V16.21C12 15.76 11.46 15.54 11.15 15.86L8.36 18.65C8.16 18.85 8.16 19.16 8.36 19.36L11.15 22.15C11.46 22.46 12 22.24 12 21.8V20C16.42 20 20 16.42 20 12C20 10.96 19.8 9.96 19.43 9.05C19.16 8.38 18.3 8.2 17.79 8.71Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport { useTheme } from 'styled-components'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  const theme = useTheme()\n  const primaryColor = theme.isDark ? '#3C3742' : '#e9eaeb'\n  const secondaryColor = theme.isDark ? '#666171' : '#bdc2c4'\n\n  return (\n    <Svg viewBox=\"0 0 72 72\" {...props}>\n      <path\n        d=\"M72 36C72 55.8823 55.8823 72 36 72C16.1177 72 0 55.8823 0 36C0 16.1177 16.1177 0 36 0C55.8823 0 72 16.1177 72 36Z\"\n        fill={primaryColor}\n      />\n      <mask id=\"mask0\" mask-type=\"alpha\" maskUnits=\"userSpaceOnUse\" x=\"3\" y=\"3\" width=\"66\" height=\"66\">\n        <path\n          d=\"M68.25 36C68.25 53.8112 53.8112 68.25 36 68.25C18.1888 68.25 3.75 53.8112 3.75 36C3.75 18.1888 18.1888 3.75 36 3.75C53.8112 3.75 68.25 18.1888 68.25 36Z\"\n          fill=\"#C4C4C4\"\n        />\n      </mask>\n      <g mask=\"url(#mask0)\">\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M20.9927 23.2654C26.1289 23.1362 30.0824 27.7278 29.2039 32.7879L27.6838 41.5445C30.2298 41.0514 32.9304 40.7875 35.7229 40.7875C37.7063 40.7875 39.6424 40.9206 41.5089 41.1741L49.2862 29.5726C51.7713 25.8657 56.7909 24.8751 60.4978 27.3602C64.7827 30.2326 65.3155 36.33 61.5938 39.9021L55.2585 45.9828C59.9045 49.0009 63.1305 53.2977 63.1306 58.4066V62.322C63.1306 67.644 59.6097 72.0998 54.6877 75.1077C49.7272 78.1391 43.0165 79.9412 35.7229 79.9412C28.4292 79.9412 21.7186 78.1391 16.7581 75.1077C11.836 72.0998 8.31519 67.644 8.31519 62.322V58.4067C8.31522 54.4286 10.2963 50.9169 13.3384 48.1585L13.0101 31.6154C12.9208 27.115 16.4929 23.3785 20.9927 23.2654ZM15.617 49.1514C15.6003 49.0112 15.5903 48.8688 15.5874 48.7246L15.2471 31.571C15.1822 28.3014 17.7798 25.5842 21.049 25.502C24.7712 25.4084 27.637 28.733 26.9996 32.4052L24.8971 44.5163C25.6681 44.2915 26.4607 44.0899 27.2726 43.9131C29.9138 43.338 32.7585 43.0248 35.7229 43.0248C38.1625 43.0248 40.5211 43.237 42.7519 43.6326C42.8725 43.2609 43.0459 42.8995 43.2742 42.5589L51.1446 30.8185C52.9416 28.1379 56.5714 27.4216 59.252 29.2186C62.3505 31.2957 62.7358 35.7049 60.0446 38.2879L51.5469 46.4441C52.264 46.7988 52.9486 47.1771 53.5975 47.577C58.1074 50.3568 60.8932 54.1829 60.8932 58.4066V62.322C60.8932 70.8172 49.6241 77.7039 35.7229 77.7039C21.8217 77.7039 10.5525 70.8172 10.5525 62.322V58.4067C10.5526 54.9322 12.4377 51.7266 15.617 49.1514Z\"\n          fill={secondaryColor}\n        />\n        <path\n          d=\"M60.8932 62.3221C60.8932 70.8173 49.624 77.704 35.7228 77.704C21.8216 77.704 10.5525 70.8173 10.5525 62.3221V58.4067H60.8932V62.3221Z\"\n          fill={primaryColor}\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M26.9995 32.4051C27.637 28.733 24.7711 25.4083 21.0489 25.5019C17.7797 25.5842 15.1821 28.3013 15.247 31.5709L15.5874 48.7245C15.5903 48.8687 15.6002 49.0111 15.617 49.1513C12.4376 51.7266 10.5525 54.9321 10.5525 58.4066C10.5525 66.9018 21.8216 73.7885 35.7228 73.7885C49.624 73.7885 60.8932 66.9018 60.8932 58.4066C60.8932 53.5752 57.2481 49.264 51.5468 46.444L60.0445 38.2879C62.7358 35.7048 62.3504 31.2956 59.252 29.2185C56.5714 27.4215 52.9416 28.1378 51.1446 30.8184L43.2742 42.5588C43.0458 42.8994 42.8724 43.2609 42.7519 43.6326C40.521 43.2369 38.1625 43.0248 35.7228 43.0248C31.8473 43.0248 28.1763 43.56 24.897 44.5162L26.9995 32.4051Z\"\n          fill={primaryColor}\n        />\n        <path\n          d=\"M32.0873 57.2881C32.0873 59.6049 30.8352 61.4831 29.2906 61.4831C27.746 61.4831 26.4939 59.6049 26.4939 57.2881C26.4939 54.9712 27.746 53.093 29.2906 53.093C30.8352 53.093 32.0873 54.9712 32.0873 57.2881Z\"\n          fill={secondaryColor}\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M28.891 54.0353C29.461 54.8903 29.8499 56.1359 29.8499 57.5677C29.8499 58.1855 30.3508 58.6864 30.9686 58.6864C31.5864 58.6864 32.0873 58.1855 32.0873 57.5677C32.0873 55.7558 31.5997 54.0649 30.7526 52.7943C29.9107 51.5314 28.6248 50.5759 27.0532 50.5759C25.4816 50.5759 24.1957 51.5314 23.3538 52.7943C22.5067 54.0649 22.0191 55.7558 22.0191 57.5677C22.0191 58.55 22.1622 59.4908 22.4244 60.3463C22.6055 60.937 23.2311 61.2691 23.8218 61.088C24.4125 60.9069 24.7446 60.2813 24.5635 59.6906C24.3685 59.0543 24.2565 58.3349 24.2565 57.5677C24.2565 56.1359 24.6454 54.8903 25.2154 54.0353C25.7906 53.1725 26.4624 52.8133 27.0532 52.8133C27.644 52.8133 28.3158 53.1725 28.891 54.0353Z\"\n          fill={secondaryColor}\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M48.1883 54.0353C48.7582 54.8903 49.1472 56.1359 49.1472 57.5677C49.1472 58.1855 49.648 58.6864 50.2658 58.6864C50.8837 58.6864 51.3845 58.1855 51.3845 57.5677C51.3845 55.7558 50.8969 54.0649 50.0498 52.7943C49.208 51.5314 47.9221 50.5759 46.3505 50.5759C44.7788 50.5759 43.4929 51.5314 42.6511 52.7943C41.804 54.0649 41.3164 55.7558 41.3164 57.5677C41.3164 58.55 41.4594 59.4908 41.7216 60.3463C41.9027 60.937 42.5284 61.2691 43.1191 61.088C43.7098 60.9069 44.0418 60.2813 43.8608 59.6906C43.6657 59.0543 43.5538 58.3349 43.5538 57.5677C43.5538 56.1359 43.9427 54.8903 44.5127 54.0353C45.0879 53.1725 45.7597 52.8133 46.3505 52.8133C46.9412 52.8133 47.613 53.1725 48.1883 54.0353Z\"\n          fill={secondaryColor}\n        />\n        <path\n          d=\"M51.3844 57.2881C51.3844 59.6049 50.1323 61.4831 48.5877 61.4831C47.0431 61.4831 45.791 59.6049 45.791 57.2881C45.791 54.9712 47.0431 53.093 48.5877 53.093C50.1323 53.093 51.3844 54.9712 51.3844 57.2881Z\"\n          fill={secondaryColor}\n        />\n        <path\n          d=\"M34.0221 25.9463V25.2697C34.0221 24.32 34.2121 23.5247 34.5919 22.8836C34.9956 22.2426 35.5297 21.6134 36.1945 20.9961C36.8118 20.4026 37.4172 19.8921 38.0108 19.4648C38.6043 19.0374 39.091 18.5863 39.4709 18.1115C39.8508 17.6367 40.0407 17.0787 40.0407 16.4377C40.0407 15.5118 39.7083 14.8589 39.0436 14.479C38.4025 14.0754 37.3223 13.8736 35.8028 13.8736C34.8056 13.8736 33.8203 14.0041 32.8469 14.2653C31.8735 14.5027 31.0425 14.8114 30.354 15.1912V10.3835C31.2325 9.95615 32.2652 9.61189 33.4523 9.35073C34.6632 9.08957 35.9808 8.95898 37.4054 8.95898C40.1594 8.95898 42.2606 9.5644 43.7088 10.7752C45.1571 11.9623 45.8812 13.6005 45.8812 15.6898C45.8812 17.0194 45.6082 18.0996 45.0621 18.9306C44.5161 19.7378 43.7207 20.5688 42.6761 21.4235C41.7976 22.1595 41.0616 22.8005 40.4681 23.3466C39.8745 23.8689 39.5777 24.5812 39.5777 25.4834V25.9463H34.0221ZM33.7728 32.2498V28.1187H39.7914V32.2498H33.7728Z\"\n          fill={secondaryColor}\n        />\n      </g>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M71.9838 37.09L69.7348 37.0231C69.7449 36.6834 69.75 36.3423 69.75 36C69.75 35.6577 69.7449 35.3166 69.7348 34.9769L71.9838 34.91C71.9946 35.272 72 35.6354 72 36C72 36.3646 71.9946 36.728 71.9838 37.09ZM71.8544 32.7398L69.6134 32.941C69.5523 32.2603 69.471 31.5857 69.3702 30.9176L71.5949 30.5818C71.7025 31.2945 71.7892 32.014 71.8544 32.7398ZM71.2052 28.4414L69.0048 28.9115C68.8622 28.2441 68.6999 27.5841 68.5185 26.932L70.6861 26.3289C70.8798 27.0248 71.053 27.7292 71.2052 28.4414ZM70.0397 24.2525L67.9128 24.9864C67.6906 24.3424 67.4494 23.7072 67.1899 23.0815L69.2683 22.2196C69.5452 22.8874 69.8026 23.5652 70.0397 24.2525ZM68.3746 20.237L66.3524 21.2235C66.0538 20.6114 65.7373 20.0097 65.4034 19.419L67.3622 18.3119C67.7183 18.942 68.0561 19.584 68.3746 20.237ZM66.2353 16.4517L64.347 17.6751C63.977 17.104 63.5901 16.5448 63.1872 15.998L64.9984 14.6631C65.4281 15.2462 65.8407 15.8426 66.2353 16.4517ZM63.656 12.952L61.9283 14.3934C61.4925 13.8711 61.0413 13.3621 60.5752 12.8671L62.2132 11.3246C62.7102 11.8523 63.1914 12.3951 63.656 12.952ZM60.6754 9.78678L59.1329 11.4248C58.6379 10.9587 58.1289 10.5074 57.6066 10.0717L59.048 8.34397C59.6049 8.80865 60.1477 9.28984 60.6754 9.78678ZM57.3369 7.00159L56.002 8.8128C55.4552 8.40985 54.896 8.02303 54.3249 7.65302L55.5482 5.76468C56.1574 6.15933 56.7538 6.57187 57.3369 7.00159ZM53.6881 4.63782L52.581 6.5966C51.9903 6.26271 51.3886 5.94615 50.7765 5.64759L51.7629 3.62536C52.416 3.94392 53.058 4.28165 53.6881 4.63782ZM49.7804 2.7317L48.9185 4.81008C48.2928 4.55061 47.6576 4.30943 47.0136 4.08723L47.7475 1.96028C48.4348 2.19743 49.1126 2.4548 49.7804 2.7317ZM45.6711 1.31385L45.068 3.48152C44.4159 3.3001 43.7559 3.13777 43.0885 2.99517L43.5586 0.794831C44.2708 0.947003 44.9752 1.12024 45.6711 1.31385ZM41.4182 0.405049L41.0824 2.62985C40.4143 2.529 39.7397 2.44772 39.059 2.38662L39.2602 0.14563C39.986 0.210778 40.7055 0.297466 41.4182 0.405049ZM37.09 0.0161859C36.728 0.0054207 36.3646 0 36 0C35.6354 0 35.272 0.00542073 34.91 0.016186L34.9769 2.26519C35.3166 2.25509 35.6577 2.25 36 2.25C36.3423 2.25 36.6834 2.25509 37.0231 2.26519L37.09 0.0161859ZM32.7398 0.145631L32.941 2.38662C32.2603 2.44772 31.5857 2.529 30.9176 2.62985L30.5818 0.405049C31.2945 0.297467 32.014 0.210779 32.7398 0.145631ZM28.4414 0.794832L28.9115 2.99517C28.2441 3.13777 27.5841 3.3001 26.932 3.48152L26.3289 1.31386C27.0248 1.12024 27.7292 0.947004 28.4414 0.794832ZM24.2525 1.96028L24.9864 4.08723C24.3424 4.30944 23.7072 4.55061 23.0815 4.81008L22.2196 2.7317C22.8874 2.45481 23.5652 2.19743 24.2525 1.96028ZM20.237 3.62536L21.2235 5.64759C20.6114 5.94616 20.0097 6.26272 19.419 6.5966L18.3119 4.63783C18.942 4.28165 19.584 3.94392 20.237 3.62536ZM16.4517 5.76469L17.6751 7.65302C17.104 8.02303 16.5448 8.40985 15.998 8.81281L14.6631 7.00159C15.2462 6.57188 15.8426 6.15933 16.4517 5.76469ZM12.952 8.34398L14.3934 10.0717C13.8711 10.5075 13.3621 10.9587 12.8671 11.4248L11.3246 9.78679C11.8523 9.28984 12.3951 8.80865 12.952 8.34398ZM9.78678 11.3246L11.4248 12.8671C10.9587 13.3621 10.5074 13.8711 10.0717 14.3934L8.34397 12.952C8.80865 12.3951 9.28984 11.8523 9.78678 11.3246ZM7.00159 14.6631L8.8128 15.998C8.40985 16.5448 8.02303 17.104 7.65302 17.6751L5.76468 16.4518C6.15933 15.8426 6.57187 15.2462 7.00159 14.6631ZM4.63782 18.3119L6.5966 19.419C6.26271 20.0097 5.94615 20.6114 5.64759 21.2235L3.62536 20.2371C3.94392 19.584 4.28165 18.942 4.63782 18.3119ZM2.7317 22.2196L4.81008 23.0815C4.55061 23.7072 4.30943 24.3424 4.08723 24.9864L1.96028 24.2525C2.19743 23.5652 2.4548 22.8874 2.7317 22.2196ZM1.31385 26.3289L3.48152 26.932C3.3001 27.5841 3.13777 28.2441 2.99517 28.9115L0.794831 28.4414C0.947003 27.7292 1.12024 27.0248 1.31385 26.3289ZM0.405049 30.5818L2.62985 30.9176C2.529 31.5857 2.44772 32.2603 2.38662 32.941L0.14563 32.7398C0.210778 32.014 0.297466 31.2945 0.405049 30.5818ZM0.0161859 34.91C0.0054207 35.272 0 35.6354 0 36C0 36.3646 0.00542073 36.728 0.016186 37.09L2.26519 37.0231C2.25509 36.6834 2.25 36.3423 2.25 36C2.25 35.6577 2.25509 35.3166 2.26519 34.9769L0.0161859 34.91ZM0.145631 39.2602L2.38662 39.059C2.44772 39.7397 2.529 40.4143 2.62985 41.0824L0.40505 41.4182C0.297467 40.7055 0.210779 39.986 0.145631 39.2602ZM0.794833 43.5586L2.99517 43.0885C3.13777 43.7559 3.3001 44.4159 3.48152 45.068L1.31386 45.6711C1.12024 44.9752 0.947004 44.2708 0.794833 43.5586ZM1.96028 47.7475L4.08723 47.0136C4.30944 47.6576 4.55061 48.2928 4.81008 48.9185L2.7317 49.7804C2.45481 49.1126 2.19743 48.4348 1.96028 47.7475ZM3.62536 51.763L5.64759 50.7765C5.94616 51.3886 6.26272 51.9903 6.5966 52.581L4.63783 53.6881C4.28165 53.058 3.94392 52.416 3.62536 51.763ZM5.76469 55.5482L7.65302 54.3249C8.02303 54.896 8.40985 55.4552 8.81281 56.002L7.00159 57.3369C6.57188 56.7538 6.15933 56.1574 5.76469 55.5482ZM8.34398 59.048L10.0717 57.6066C10.5075 58.1289 10.9587 58.6379 11.4248 59.1329L9.78679 60.6754C9.28984 60.1477 8.80865 59.6049 8.34398 59.048ZM11.3246 62.2132L12.8671 60.5752C13.3621 61.0413 13.8711 61.4925 14.3934 61.9283L12.952 63.656C12.3951 63.1914 11.8523 62.7102 11.3246 62.2132ZM14.6631 64.9984L15.998 63.1872C16.5448 63.5901 17.104 63.977 17.6751 64.347L16.4518 66.2353C15.8426 65.8407 15.2462 65.4281 14.6631 64.9984ZM18.3119 67.3622L19.419 65.4034C20.0097 65.7373 20.6114 66.0538 21.2235 66.3524L20.2371 68.3746C19.584 68.0561 18.942 67.7184 18.3119 67.3622ZM22.2196 69.2683L23.0815 67.1899C23.7072 67.4494 24.3424 67.6906 24.9864 67.9128L24.2525 70.0397C23.5652 69.8026 22.8874 69.5452 22.2196 69.2683ZM26.3289 70.6861L26.932 68.5185C27.5841 68.6999 28.2441 68.8622 28.9115 69.0048L28.4414 71.2052C27.7292 71.053 27.0248 70.8798 26.3289 70.6861ZM30.5818 71.595L30.9176 69.3702C31.5857 69.471 32.2603 69.5523 32.941 69.6134L32.7398 71.8544C32.014 71.7892 31.2945 71.7025 30.5818 71.595ZM34.91 71.9838L34.9769 69.7348C35.3166 69.7449 35.6577 69.75 36 69.75C36.3423 69.75 36.6834 69.7449 37.0231 69.7348L37.09 71.9838C36.728 71.9946 36.3646 72 36 72C35.6354 72 35.272 71.9946 34.91 71.9838ZM39.2602 71.8544L39.059 69.6134C39.7397 69.5523 40.4143 69.471 41.0824 69.3702L41.4182 71.5949C40.7055 71.7025 39.986 71.7892 39.2602 71.8544ZM43.5586 71.2052L43.0885 69.0048C43.7559 68.8622 44.4159 68.6999 45.068 68.5185L45.6711 70.6861C44.9752 70.8798 44.2708 71.053 43.5586 71.2052ZM47.7475 70.0397L47.0136 67.9128C47.6576 67.6906 48.2928 67.4494 48.9185 67.1899L49.7804 69.2683C49.1126 69.5452 48.4348 69.8026 47.7475 70.0397ZM51.7629 68.3746L50.7765 66.3524C51.3886 66.0538 51.9903 65.7373 52.581 65.4034L53.6881 67.3622C53.058 67.7183 52.416 68.0561 51.7629 68.3746ZM55.5482 66.2353L54.3249 64.347C54.896 63.977 55.4552 63.5901 56.002 63.1872L57.3369 64.9984C56.7538 65.4281 56.1574 65.8407 55.5482 66.2353ZM59.048 63.656L57.6066 61.9283C58.1289 61.4925 58.6379 61.0413 59.1329 60.5752L60.6754 62.2132C60.1477 62.7102 59.6049 63.1914 59.048 63.656ZM62.2132 60.6754L60.5752 59.1329C61.0413 58.6379 61.4925 58.1289 61.9283 57.6066L63.656 59.048C63.1914 59.6049 62.7102 60.1477 62.2132 60.6754ZM64.9984 57.3369L63.1872 56.002C63.5901 55.4552 63.977 54.896 64.347 54.3249L66.2353 55.5482C65.8407 56.1574 65.4281 56.7538 64.9984 57.3369ZM67.3622 53.6881L65.4034 52.581C65.7373 51.9903 66.0538 51.3886 66.3524 50.7765L68.3746 51.7629C68.0561 52.416 67.7184 53.058 67.3622 53.6881ZM69.2683 49.7804L67.1899 48.9185C67.4494 48.2928 67.6906 47.6576 67.9128 47.0136L70.0397 47.7475C69.8026 48.4348 69.5452 49.1126 69.2683 49.7804ZM70.6861 45.6711L68.5185 45.068C68.6999 44.4159 68.8622 43.7559 69.0048 43.0885L71.2052 43.5586C71.053 44.2708 70.8798 44.9752 70.6861 45.6711ZM71.595 41.4182L69.3702 41.0824C69.471 40.4143 69.5523 39.7397 69.6134 39.059L71.8544 39.2602C71.7892 39.986 71.7025 40.7055 71.595 41.4182Z\"\n        fill={secondaryColor}\n      />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M4.5 12H7.5C8.05 12 8.5 11.55 8.5 11V7C8.5 6.45 8.05 6 7.5 6H4.5C3.95 6 3.5 6.45 3.5 7V11C3.5 11.55 3.95 12 4.5 12ZM4.5 19H7.5C8.05 19 8.5 18.55 8.5 18V14C8.5 13.45 8.05 13 7.5 13H4.5C3.95 13 3.5 13.45 3.5 14V18C3.5 18.55 3.95 19 4.5 19ZM10.5 19H13.5C14.05 19 14.5 18.55 14.5 18V14C14.5 13.45 14.05 13 13.5 13H10.5C9.95 13 9.5 13.45 9.5 14V18C9.5 18.55 9.95 19 10.5 19ZM16.5 19H19.5C20.05 19 20.5 18.55 20.5 18V14C20.5 13.45 20.05 13 19.5 13H16.5C15.95 13 15.5 13.45 15.5 14V18C15.5 18.55 15.95 19 16.5 19ZM10.5 12H13.5C14.05 12 14.5 11.55 14.5 11V7C14.5 6.45 14.05 6 13.5 6H10.5C9.95 6 9.5 6.45 9.5 7V11C9.5 11.55 9.95 12 10.5 12ZM15.5 7V11C15.5 11.55 15.95 12 16.5 12H19.5C20.05 12 20.5 11.55 20.5 11V7C20.5 6.45 20.05 6 19.5 6H16.5C15.95 6 15.5 6.45 15.5 7Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M19 3H5C3.9 3 3 3.9 3 5V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19V5C21 3.9 20.1 3 19 3ZM19 19H5V5H19V19Z\" />\n      <path d=\"M11.25 7.72H6.25V9.22H11.25V7.72Z\" />\n      <path d=\"M18 15.75H13V17.25H18V15.75Z\" />\n      <path d=\"M18 13.25H13V14.75H18V13.25Z\" />\n      <path d=\"M8 18H9.5V16H11.5V14.5H9.5V12.5H8V14.5H6V16H8V18Z\" />\n      <path d=\"M14.09 10.95L15.5 9.54L16.91 10.95L17.97 9.89L16.56 8.47L17.97 7.06L16.91 6L15.5 7.41L14.09 6L13.03 7.06L14.44 8.47L13.03 9.89L14.09 10.95Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M9.00012 16.2L5.50012 12.7C5.11012 12.31 4.49012 12.31 4.10012 12.7C3.71012 13.09 3.71012 13.71 4.10012 14.1L8.29012 18.29C8.68012 18.68 9.31012 18.68 9.70012 18.29L20.3001 7.70001C20.6901 7.31001 20.6901 6.69001 20.3001 6.30001C19.9101 5.91001 19.2901 5.91001 18.9001 6.30001L9.00012 16.2Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M8.11997 9.29006L12 13.1701L15.88 9.29006C16.27 8.90006 16.9 8.90006 17.29 9.29006C17.68 9.68006 17.68 10.3101 17.29 10.7001L12.7 15.2901C12.31 15.6801 11.68 15.6801 11.29 15.2901L6.69997 10.7001C6.30997 10.3101 6.30997 9.68006 6.69997 9.29006C7.08997 8.91006 7.72997 8.90006 8.11997 9.29006Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M9.29006 15.88L13.1701 12L9.29006 8.12001C8.90006 7.73001 8.90006 7.10001 9.29006 6.71001C9.68006 6.32001 10.3101 6.32001 10.7001 6.71001L15.2901 11.3C15.6801 11.69 15.6801 12.32 15.2901 12.71L10.7001 17.3C10.3101 17.69 9.68006 17.69 9.29006 17.3C8.91006 16.91 8.90006 16.27 9.29006 15.88Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M8.11997 14.7101L12 10.8301L15.88 14.7101C16.27 15.1001 16.9 15.1001 17.29 14.7101C17.68 14.3201 17.68 13.6901 17.29 13.3001L12.7 8.7101C12.31 8.3201 11.68 8.3201 11.29 8.7101L6.69997 13.3001C6.30997 13.6901 6.30997 14.3201 6.69997 14.7101C7.08997 15.0901 7.72997 15.1001 8.11997 14.7101Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M18.3 5.70997C17.91 5.31997 17.28 5.31997 16.89 5.70997L12 10.59L7.10997 5.69997C6.71997 5.30997 6.08997 5.30997 5.69997 5.69997C5.30997 6.08997 5.30997 6.71997 5.69997 7.10997L10.59 12L5.69997 16.89C5.30997 17.28 5.30997 17.91 5.69997 18.3C6.08997 18.69 6.71997 18.69 7.10997 18.3L12 13.41L16.89 18.3C17.28 18.69 17.91 18.69 18.3 18.3C18.69 17.91 18.69 17.28 18.3 16.89L13.41 12L18.3 7.10997C18.68 6.72997 18.68 6.08997 18.3 5.70997Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M19.43 12.98C19.47 12.66 19.5 12.34 19.5 12C19.5 11.66 19.47 11.34 19.43 11.02L21.54 9.37C21.73 9.22 21.78 8.95 21.66 8.73L19.66 5.27C19.54 5.05 19.27 4.97 19.05 5.05L16.56 6.05C16.04 5.65 15.48 5.32 14.87 5.07L14.49 2.42C14.46 2.18 14.25 2 14 2H9.99996C9.74996 2 9.53996 2.18 9.50996 2.42L9.12996 5.07C8.51996 5.32 7.95996 5.66 7.43996 6.05L4.94996 5.05C4.71996 4.96 4.45996 5.05 4.33996 5.27L2.33996 8.73C2.20996 8.95 2.26996 9.22 2.45996 9.37L4.56996 11.02C4.52996 11.34 4.49996 11.67 4.49996 12C4.49996 12.33 4.52996 12.66 4.56996 12.98L2.45996 14.63C2.26996 14.78 2.21996 15.05 2.33996 15.27L4.33996 18.73C4.45996 18.95 4.72996 19.03 4.94996 18.95L7.43996 17.95C7.95996 18.35 8.51996 18.68 9.12996 18.93L9.50996 21.58C9.53996 21.82 9.74996 22 9.99996 22H14C14.25 22 14.46 21.82 14.49 21.58L14.87 18.93C15.48 18.68 16.04 18.34 16.56 17.95L19.05 18.95C19.28 19.04 19.54 18.95 19.66 18.73L21.66 15.27C21.78 15.05 21.73 14.78 21.54 14.63L19.43 12.98ZM12 15.5C10.07 15.5 8.49996 13.93 8.49996 12C8.49996 10.07 10.07 8.5 12 8.5C13.93 8.5 15.5 10.07 15.5 12C15.5 13.93 13.93 15.5 12 15.5Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M4 13C5.1 13 6 12.1 6 11C6 9.9 5.1 9 4 9C2.9 9 2 9.9 2 11C2 12.1 2.9 13 4 13ZM5.13 14.1C4.76 14.04 4.39 14 4 14C3.01 14 2.07 14.21 1.22 14.58C0.48 14.9 0 15.62 0 16.43V17C0 17.5523 0.447715 18 1 18H4.5V16.39C4.5 15.56 4.73 14.78 5.13 14.1ZM20 13C21.1 13 22 12.1 22 11C22 9.9 21.1 9 20 9C18.9 9 18 9.9 18 11C18 12.1 18.9 13 20 13ZM24 16.43C24 15.62 23.52 14.9 22.78 14.58C21.93 14.21 20.99 14 20 14C19.61 14 19.24 14.04 18.87 14.1C19.27 14.78 19.5 15.56 19.5 16.39V18H23C23.5523 18 24 17.5523 24 17V16.43ZM16.24 13.65C15.07 13.13 13.63 12.75 12 12.75C10.37 12.75 8.93 13.14 7.76 13.65C6.68 14.13 6 15.21 6 16.39V17C6 17.5523 6.44772 18 7 18H17C17.5523 18 18 17.5523 18 17V16.39C18 15.21 17.32 14.13 16.24 13.65ZM8.07 16C8.16 15.77 8.2 15.61 8.98 15.31C9.95 14.93 10.97 14.75 12 14.75C13.03 14.75 14.05 14.93 15.02 15.31C15.79 15.61 15.83 15.77 15.93 16H8.07ZM12 8C12.55 8 13 8.45 13 9C13 9.55 12.55 10 12 10C11.45 10 11 9.55 11 9C11 8.45 11.45 8 12 8ZM12 6C10.34 6 9 7.34 9 9C9 10.66 10.34 12 12 12C13.66 12 15 10.66 15 9C15 7.34 13.66 6 12 6Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M15 1H4C2.9 1 2 1.9 2 3V16C2 16.55 2.45 17 3 17C3.55 17 4 16.55 4 16V4C4 3.45 4.45 3 5 3H15C15.55 3 16 2.55 16 2C16 1.45 15.55 1 15 1ZM19 5H8C6.9 5 6 5.9 6 7V21C6 22.1 6.9 23 8 23H19C20.1 23 21 22.1 21 21V7C21 5.9 20.1 5 19 5ZM18 21H9C8.45 21 8 20.55 8 20V8C8 7.45 8.45 7 9 7H18C18.55 7 19 7.45 19 8V20C19 20.55 18.55 21 18 21Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M12 2C6.48 2 2 6.48 2 12C2 17.52 6.48 22 12 22C17.52 22 22 17.52 22 12C22 6.48 17.52 2 12 2ZM12 20C7.59 20 4 16.41 4 12C4 7.59 7.59 4 12 4C16.41 4 20 7.59 20 12C20 16.41 16.41 20 12 20ZM11 16H13V18H11V16ZM12.61 6.04C10.55 5.74 8.73 7.01 8.18 8.83C8 9.41 8.44 10 9.05 10H9.25C9.66 10 9.99 9.71 10.13 9.33C10.45 8.44 11.4 7.83 12.43 8.05C13.38 8.25 14.08 9.18 14 10.15C13.9 11.49 12.38 11.78 11.55 13.03C11.55 13.04 11.54 13.04 11.54 13.05C11.53 13.07 11.52 13.08 11.51 13.1C11.42 13.25 11.33 13.42 11.26 13.6C11.25 13.63 11.23 13.65 11.22 13.68C11.21 13.7 11.21 13.72 11.2 13.75C11.08 14.09 11 14.5 11 15H13C13 14.58 13.11 14.23 13.28 13.93C13.3 13.9 13.31 13.87 13.33 13.84C13.41 13.7 13.51 13.57 13.61 13.45C13.62 13.44 13.63 13.42 13.64 13.41C13.74 13.29 13.85 13.18 13.97 13.07C14.93 12.16 16.23 11.42 15.96 9.51C15.72 7.77 14.35 6.3 12.61 6.04Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M13 3C8.03 3 4 7.03 4 12H2.20711C1.76165 12 1.53857 12.5386 1.85355 12.8536L4.54604 15.546C4.73751 15.7375 5.04662 15.7418 5.24329 15.5556L8.08805 12.8631C8.4164 12.5524 8.19646 12 7.74435 12H6C6 8.13 9.13 5 13 5C16.87 5 20 8.13 20 12C20 15.87 16.87 19 13 19C11.4314 19 9.98175 18.4782 8.81739 17.601C8.37411 17.267 7.74104 17.259 7.3486 17.6514C6.95725 18.0428 6.95413 18.6823 7.38598 19.0284C8.92448 20.2615 10.8708 21 13 21C17.97 21 22 16.97 22 12C22 7.03 17.97 3 13 3ZM12 8V13L16.28 15.54L17 14.33L13.5 12.25V8H12Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M4.5 14H6.5C7.05 14 7.5 13.55 7.5 13V11C7.5 10.45 7.05 10 6.5 10H4.5C3.95 10 3.5 10.45 3.5 11V13C3.5 13.55 3.95 14 4.5 14ZM4.5 19H6.5C7.05 19 7.5 18.55 7.5 18V16C7.5 15.45 7.05 15 6.5 15H4.5C3.95 15 3.5 15.45 3.5 16V18C3.5 18.55 3.95 19 4.5 19ZM4.5 9H6.5C7.05 9 7.5 8.55 7.5 8V6C7.5 5.45 7.05 5 6.5 5H4.5C3.95 5 3.5 5.45 3.5 6V8C3.5 8.55 3.95 9 4.5 9ZM9.5 14H19.5C20.05 14 20.5 13.55 20.5 13V11C20.5 10.45 20.05 10 19.5 10H9.5C8.95 10 8.5 10.45 8.5 11V13C8.5 13.55 8.95 14 9.5 14ZM9.5 19H19.5C20.05 19 20.5 18.55 20.5 18V16C20.5 15.45 20.05 15 19.5 15H9.5C8.95 15 8.5 15.45 8.5 16V18C8.5 18.55 8.95 19 9.5 19ZM8.5 6V8C8.5 8.55 8.95 9 9.5 9H19.5C20.05 9 20.5 8.55 20.5 8V6C20.5 5.45 20.05 5 19.5 5H9.5C8.95 5 8.5 5.45 8.5 6Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  const isDark = false\n  return (\n    <Svg viewBox=\"0 0 35 35\" {...props}>\n      <image width=\"35\" height=\"35\" href={isDark ? 'images/zolaswap-text.png' : 'images/zolaswap-text.png'} />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M16.3 8.09014C15.91 8.48014 15.91 9.10014 16.3 9.49014L18.2 11.3901H9C8.45 11.3901 8 11.8401 8 12.3901C8 12.9401 8.45 13.3901 9 13.3901H18.2L16.3 15.2901C15.91 15.6801 15.91 16.3001 16.3 16.6901C16.69 17.0801 17.31 17.0801 17.7 16.6901L21.29 13.1001C21.68 12.7101 21.68 12.0801 21.29 11.6901L17.7 8.09014C17.31 7.70014 16.69 7.70014 16.3 8.09014ZM4 19.3901H11C11.55 19.3901 12 19.8401 12 20.3901C12 20.9401 11.55 21.3901 11 21.3901H4C2.9 21.3901 2 20.4901 2 19.3901V5.39014C2 4.29014 2.9 3.39014 4 3.39014H11C11.55 3.39014 12 3.84014 12 4.39014C12 4.94014 11.55 5.39014 11 5.39014H4V19.3901Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 40 40\" {...props}>\n      <path d=\"M36.0112 3.33337L22.1207 13.6277L24.7012 7.56091L36.0112 3.33337Z\" fill=\"#E17726\" />\n      <path d=\"M4.00261 3.33337L17.7558 13.7238L15.2989 7.56091L4.00261 3.33337Z\" fill=\"#E27625\" />\n      <path d=\"M31.0149 27.2023L27.3227 32.8573L35.2287 35.0397L37.4797 27.3258L31.0149 27.2023Z\" fill=\"#E27625\" />\n      <path d=\"M2.53386 27.3258L4.77116 35.0397L12.6772 32.8573L8.9987 27.2023L2.53386 27.3258Z\" fill=\"#E27625\" />\n      <path d=\"M12.2518 17.6496L10.0419 20.9712L17.8793 21.3281L17.6048 12.8867L12.2518 17.6496Z\" fill=\"#E27625\" />\n      <path d=\"M27.762 17.6494L22.3129 12.7905L22.1207 21.3279L29.9581 20.9711L27.762 17.6494Z\" fill=\"#E27625\" />\n      <path d=\"M12.6772 32.8574L17.3989 30.5652L13.336 27.3809L12.6772 32.8574Z\" fill=\"#E27625\" />\n      <path d=\"M22.6009 30.5652L27.3226 32.8574L26.6637 27.3809L22.6009 30.5652Z\" fill=\"#E27625\" />\n      <path d=\"M27.3226 32.8575L22.6009 30.5653L22.9715 33.6399L22.9303 34.9301L27.3226 32.8575Z\" fill=\"#D5BFB2\" />\n      <path d=\"M12.6772 32.8575L17.0694 34.9301L17.042 33.6399L17.3989 30.5653L12.6772 32.8575Z\" fill=\"#D5BFB2\" />\n      <path d=\"M17.1518 25.3495L13.2262 24.1965L15.9988 22.92L17.1518 25.3495Z\" fill=\"#233447\" />\n      <path d=\"M22.848 25.3495L24.001 22.92L26.801 24.1965L22.848 25.3495Z\" fill=\"#233447\" />\n      <path d=\"M12.6773 32.8573L13.3635 27.2023L8.99876 27.3258L12.6773 32.8573Z\" fill=\"#CC6228\" />\n      <path d=\"M26.6364 27.2023L27.3227 32.8573L31.0149 27.3258L26.6364 27.2023Z\" fill=\"#CC6228\" />\n      <path\n        d=\"M29.9581 20.9709L22.1207 21.3278L22.8482 25.3495L24.0011 22.92L26.8012 24.1965L29.9581 20.9709Z\"\n        fill=\"#CC6228\"\n      />\n      <path\n        d=\"M13.2263 24.1965L15.9989 22.92L17.1519 25.3495L17.8793 21.3278L10.0419 20.9709L13.2263 24.1965Z\"\n        fill=\"#CC6228\"\n      />\n      <path d=\"M10.0419 20.9709L13.3361 27.3809L13.2263 24.1965L10.0419 20.9709Z\" fill=\"#E27525\" />\n      <path d=\"M26.8011 24.1965L26.6638 27.3809L29.958 20.9709L26.8011 24.1965Z\" fill=\"#E27525\" />\n      <path d=\"M17.8793 21.3278L17.1519 25.3494L18.0715 30.0985L18.2637 23.8396L17.8793 21.3278Z\" fill=\"#E27525\" />\n      <path d=\"M22.1205 21.3278L21.7499 23.8258L21.9283 30.0985L22.848 25.3494L22.1205 21.3278Z\" fill=\"#E27525\" />\n      <path\n        d=\"M22.848 25.3496L21.9284 30.0987L22.601 30.5654L26.6638 27.381L26.8011 24.1967L22.848 25.3496Z\"\n        fill=\"#F5841F\"\n      />\n      <path\n        d=\"M13.2262 24.1967L13.336 27.381L17.3989 30.5654L18.0714 30.0987L17.1518 25.3496L13.2262 24.1967Z\"\n        fill=\"#F5841F\"\n      />\n      <path\n        d=\"M22.9303 34.93L22.9715 33.6398L22.6284 33.3378H17.3714L17.042 33.6398L17.0694 34.93L12.6772 32.8574L14.2145 34.1202L17.3302 36.2751H22.6696L25.7853 34.1202L27.3226 32.8574L22.9303 34.93Z\"\n        fill=\"#C0AC9D\"\n      />\n      <path\n        d=\"M22.601 30.5653L21.9284 30.0986H18.0715L17.3989 30.5653L17.0421 33.6399L17.3715 33.3379H22.6285L22.9716 33.6399L22.601 30.5653Z\"\n        fill=\"#161616\"\n      />\n      <path\n        d=\"M36.5875 14.3003L37.7542 8.61779L36.011 3.33337L22.6009 13.2846L27.7618 17.6493L35.0365 19.7768L36.6424 17.8964L35.9424 17.3886L37.0679 16.3728L36.2169 15.7003L37.3287 14.863L36.5875 14.3003Z\"\n        fill=\"#763E1A\"\n      />\n      <path\n        d=\"M2.24573 8.61779L3.42615 14.3003L2.67123 14.863L3.78302 15.7003L2.93202 16.3728L4.05753 17.3886L3.35752 17.8964L4.96343 19.7768L12.2518 17.6493L17.399 13.2846L4.00263 3.33337L2.24573 8.61779Z\"\n        fill=\"#763E1A\"\n      />\n      <path\n        d=\"M35.0365 19.777L27.7619 17.6495L29.958 20.9712L26.6638 27.3811L31.0149 27.3262H37.4797L35.0365 19.777Z\"\n        fill=\"#F5841F\"\n      />\n      <path\n        d=\"M12.2517 17.6495L4.96332 19.777L2.53386 27.3262H8.99869L13.336 27.3811L10.0419 20.9712L12.2517 17.6495Z\"\n        fill=\"#F5841F\"\n      />\n      <path\n        d=\"M22.1205 21.3276L22.6009 13.2843L24.701 7.56067H15.2988L17.3988 13.2843L17.8792 21.3276L18.0577 23.8531L18.0714 30.0984H21.9283L21.9421 23.8531L22.1205 21.3276Z\"\n        fill=\"#F5841F\"\n      />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M18 13H6C5.45 13 5 12.55 5 12C5 11.45 5.45 11 6 11H18C18.55 11 19 11.45 19 12C19 12.55 18.55 13 18 13Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M18 19H6C5.45 19 5 18.55 5 18V6C5 5.45 5.45 5 6 5H11C11.55 5 12 4.55 12 4C12 3.45 11.55 3 11 3H5C3.89 3 3 3.9 3 5V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19V13C21 12.45 20.55 12 20 12C19.45 12 19 12.45 19 13V18C19 18.55 18.55 19 18 19ZM14 4C14 4.55 14.45 5 15 5H17.59L8.46 14.13C8.07 14.52 8.07 15.15 8.46 15.54C8.85 15.93 9.48 15.93 9.87 15.54L19 6.41V9C19 9.55 19.45 10 20 10C20.55 10 21 9.55 21 9V4C21 3.45 20.55 3 20 3H15C14.45 3 14 3.45 14 4Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 19 19\" {...props}>\n      <path d=\"M0 15.46V18.5C0 18.78 0.22 19 0.5 19H3.54C3.67 19 3.8 18.95 3.89 18.85L14.81 7.94L11.06 4.19L0.15 15.1C0.0500001 15.2 0 15.32 0 15.46ZM17.71 5.04C18.1 4.65 18.1 4.02 17.71 3.63L15.37 1.29C14.98 0.899998 14.35 0.899998 13.96 1.29L12.13 3.12L15.88 6.87L17.71 5.04Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../../../components/Svg/Svg'\nimport { SvgProps } from '../../../components/Svg/types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M3.18731 5.68438C2.44993 5.52604 2.44993 4.47393 3.18731 4.31559L5.3203 3.85755C5.58957 3.79973 5.79991 3.58939 5.85774 3.32012L6.31577 1.18713C6.47411 0.449748 7.52622 0.449751 7.68457 1.18713L8.1426 3.32012C8.20042 3.58939 8.41076 3.79973 8.68003 3.85755L10.813 4.31559C11.5504 4.47393 11.5504 5.52604 10.813 5.68438L8.68003 6.14241C8.41076 6.20024 8.20042 6.41058 8.1426 6.67985L7.68457 8.81284C7.52622 9.55022 6.47411 9.55022 6.31577 8.81284L5.85774 6.67985C5.79991 6.41058 5.58957 6.20024 5.3203 6.14241L3.18731 5.68438Z\" />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M12 2.99998C15.866 2.99998 19 6.13399 19 9.99998C19 13.866 15.866 17 12 17C8.13401 17 5 13.866 5 9.99998C5 9.4477 4.55228 8.99998 4 8.99998C3.44772 8.99998 3 9.4477 3 9.99998C3 12.8894 4.36163 15.4608 6.47822 17.1075L5.58579 18C5.21071 18.3751 5 18.8838 5 19.4142V21.5C5 22.3284 5.67157 23 6.5 23H17.5C18.3284 23 19 22.3284 19 21.5V19.4142C19 18.8838 18.7893 18.3751 18.4142 18L17.5218 17.1075C19.6384 15.4608 21 12.8894 21 9.99998C21 5.02942 16.9706 0.999985 12 0.999985C11.4477 0.999985 11 1.4477 11 1.99998C11 2.55227 11.4477 2.99998 12 2.99998ZM12 19C10.6564 19 9.38156 18.7056 8.23649 18.1777L7 19.4142L7 21H17V19.4142L15.7635 18.1777C14.6184 18.7056 13.3436 19 12 19Z\"\n      />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 48 48\" {...props}>\n      <path d=\"M38 10H34C34 7.79086 32.2091 6 30 6H18C15.7909 6 14 7.79086 14 10H10C7.8 10 6 11.8 6 14V16C6 21.1 9.84 25.26 14.78 25.88C16.04 28.88 18.74 31.14 22 31.8V38H16C14.8954 38 14 38.8954 14 40C14 41.1046 14.8954 42 16 42H32C33.1046 42 34 41.1046 34 40C34 38.8954 33.1046 38 32 38H26V31.8C29.26 31.14 31.96 28.88 33.22 25.88C38.16 25.26 42 21.1 42 16V14C42 11.8 40.2 10 38 10ZM10 16V14H14V21.64C11.68 20.8 10 18.6 10 16ZM24 28C20.7 28 18 25.3 18 22V10H30V22C30 25.3 27.3 28 24 28ZM38 16C38 18.6 36.32 20.8 34 21.64V14H38V16Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M23 12L20.56 9.21L20.9 5.52L17.29 4.7L15.4 1.5L12 2.96L8.6 1.5L6.71 4.69L3.1 5.5L3.44 9.2L1 12L3.44 14.79L3.1 18.49L6.71 19.31L8.6 22.5L12 21.03L15.4 22.49L17.29 19.3L20.9 18.48L20.56 14.79L23 12ZM9.38 16.01L7 13.61C6.61 13.22 6.61 12.59 7 12.2L7.07 12.13C7.46 11.74 8.1 11.74 8.49 12.13L10.1 13.75L15.25 8.59C15.64 8.2 16.28 8.2 16.67 8.59L16.74 8.66C17.13 9.05 17.13 9.68 16.74 10.07L10.82 16.01C10.41 16.4 9.78 16.4 9.38 16.01Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport uniqueId from 'lodash/uniqueId'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  const id = uniqueId('svg')\n\n  return (\n    <Svg viewBox=\"0 0 64 64\" {...props}>\n      <g clipPath={`url(#${id})`}>\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M43.1934 10.6907C44.0412 9.92381 45.4 10.3246 45.6959 11.4288C45.9144 12.2444 45.4304 13.0827 44.6148 13.3012L38.4955 14.9409L43.1934 10.6907ZM49.112 10.5134C48.1317 6.85481 43.6295 5.52698 40.8207 8.06806L31.0187 16.9358C29.5584 18.2569 30.8604 20.6481 32.7625 20.1385L45.5302 16.7174C48.2324 15.9933 49.8361 13.2157 49.112 10.5134Z\"\n          fill=\"#7645D9\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M30.1886 8.0841C29.8078 6.90274 28.3125 6.54189 27.4349 7.41956C26.7866 8.06782 26.7866 9.11885 27.4349 9.7671L32.2987 14.6309L30.1886 8.0841ZM24.7196 4.70427C27.6276 1.79628 32.5818 2.99187 33.8434 6.90609L38.2461 20.5658C38.902 22.6007 36.3796 24.1424 34.8677 22.6306L24.7196 12.4824C22.5717 10.3345 22.5717 6.85214 24.7196 4.70427Z\"\n          fill=\"#7645D9\"\n        />\n        <path\n          opacity=\"0.6\"\n          d=\"M7.27624 34.0431C7.01094 35.0539 5.57594 35.054 5.31064 34.0431L4.51492 31.0112C4.42182 30.6565 4.14478 30.3794 3.79005 30.2863L0.758148 29.4906C-0.252715 29.2253 -0.252717 27.7903 0.758146 27.525L3.79005 26.7293C4.14478 26.6362 4.42182 26.3591 4.51492 26.0044L5.31064 22.9725C5.57594 21.9616 7.01094 21.9616 7.27624 22.9725L8.07196 26.0044C8.16506 26.3591 8.44209 26.6362 8.79682 26.7293L11.8287 27.525C12.8396 27.7903 12.8396 29.2253 11.8287 29.4906L8.79683 30.2863C8.44209 30.3794 8.16506 30.6565 8.07196 31.0112L7.27624 34.0431Z\"\n          fill=\"#53DEE9\"\n        />\n        <path\n          d=\"M9.62029 11.6637C9.62344 12.2763 8.81089 12.494 8.5073 11.9619L7.59673 10.3659C7.4902 10.1791 7.2913 10.0643 7.07631 10.0654L5.23882 10.0748C4.62619 10.078 4.40847 9.26545 4.9406 8.96185L6.53663 8.05128C6.72337 7.94475 6.8382 7.74585 6.8371 7.53087L6.82766 5.69337C6.82451 5.08074 7.63705 4.86302 7.94064 5.39515L8.85121 6.99119C8.95775 7.17792 9.15664 7.29275 9.37163 7.29165L11.2091 7.28221C11.8218 7.27906 12.0395 8.0916 11.5073 8.39519L9.91131 9.30576C9.72458 9.4123 9.60974 9.6112 9.61085 9.82618L9.62029 11.6637Z\"\n          fill=\"#53DEE9\"\n        />\n        <path\n          opacity=\"0.8\"\n          d=\"M53.8712 15.7857C53.2964 15.6348 53.2964 14.8189 53.8712 14.6681L56.9643 13.8563C57.166 13.8033 57.3235 13.6458 57.3764 13.4441L58.1882 10.351C58.3391 9.77623 59.155 9.77623 59.3058 10.351L60.1176 13.4441C60.1706 13.6458 60.3281 13.8033 60.5298 13.8563L63.6229 14.6681C64.1977 14.8189 64.1977 15.6348 63.6229 15.7857L60.5298 16.5975C60.3281 16.6504 60.1706 16.8079 60.1176 17.0096L59.3058 20.1027C59.155 20.6775 58.3391 20.6775 58.1882 20.1027L57.3764 17.0096C57.3235 16.8079 57.166 16.6504 56.9643 16.5975L53.8712 15.7857Z\"\n          fill=\"#53DEE9\"\n        />\n        <path\n          d=\"M51.0823 29.9055C50.3505 27.1742 47.543 25.5533 44.8116 26.2851L17.6112 33.5735C14.8798 34.3053 13.2589 37.1128 13.9908 39.8441L18.546 56.8444C19.2778 59.5758 22.0853 61.1967 24.8167 60.4648L52.0171 53.1765C54.7485 52.4446 56.3694 49.6371 55.6375 46.9058L51.0823 29.9055Z\"\n          fill=\"url(#paint0_linear_won)\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M18.2737 36.0462L45.4742 28.7579C46.8399 28.392 48.2436 29.2024 48.6095 30.5681L53.1648 47.5684C53.5307 48.934 52.7202 50.3378 51.3546 50.7037L24.1541 57.9921C22.7884 58.358 21.3847 57.5475 21.0187 56.1819L16.4635 39.1816C16.0976 37.8159 16.9081 36.4122 18.2737 36.0462ZM44.8116 26.2851C47.543 25.5533 50.3505 27.1742 51.0823 29.9055L55.6375 46.9058C56.3694 49.6371 54.7485 52.4446 52.0171 53.1765L24.8167 60.4648C22.0853 61.1967 19.2778 59.5758 18.546 56.8444L13.9908 39.8441C13.2589 37.1128 14.8798 34.3053 17.6112 33.5735L44.8116 26.2851Z\"\n          fill=\"#7645D9\"\n        />\n        <path d=\"M35.2297 28.8525L27.1932 31.0059L34.3987 57.8973L42.4352 55.7439L35.2297 28.8525Z\" fill=\"#7645D9\" />\n        <path d=\"M54.5173 42.4023L52.3639 34.3658L15.1113 44.3476L17.2647 52.3841L54.5173 42.4023Z\" fill=\"#7645D9\" />\n        <g style={{ mixBlendMode: 'multiply' }}>\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M39.9264 46.3239L31.8613 48.485L32.1926 49.7213L40.2577 47.5603L39.9264 46.3239ZM29.7019 40.4262L37.767 38.2651L37.4358 37.0287L29.3707 39.1898L29.7019 40.4262Z\"\n            fill=\"#7645D9\"\n          />\n        </g>\n        <path\n          d=\"M54.8306 24.9448C55.3795 22.8962 54.1638 20.7906 52.1153 20.2417L17.4965 10.9657C15.448 10.4168 13.3424 11.6324 12.7935 13.681L11.8824 17.081C11.3335 19.1295 12.5492 21.2351 14.5977 21.784L49.2165 31.0601C51.265 31.609 53.3706 30.3933 53.9195 28.3448L54.8306 24.9448Z\"\n          fill=\"url(#paint1_linear_won)\"\n        />\n        <path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M16.8339 13.4384L51.4527 22.7145C52.1355 22.8975 52.5408 23.5993 52.3578 24.2822L51.4468 27.6822C51.2638 28.3651 50.5619 28.7703 49.8791 28.5873L15.2603 19.3113C14.5775 19.1283 14.1722 18.4264 14.3552 17.7436L15.2662 14.3435C15.4492 13.6607 16.1511 13.2555 16.8339 13.4384ZM52.1153 20.2417C54.1638 20.7906 55.3795 22.8962 54.8306 24.9448L53.9195 28.3448C53.3706 30.3933 51.265 31.609 49.2165 31.0601L14.5977 21.784C12.5492 21.2351 11.3335 19.1295 11.8824 17.081L12.7935 13.681C13.3424 11.6324 15.448 10.4168 17.4965 10.9657L52.1153 20.2417Z\"\n          fill=\"#7645D9\"\n        />\n        <path d=\"M38.8242 16.6804L30.7877 14.527L27.8889 25.3454L35.9254 27.4988L38.8242 16.6804Z\" fill=\"#7645D9\" />\n        <g style={{ mixBlendMode: 'multiply' }}>\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M38.4257 18.0799L30.4256 15.8399L30.7455 14.3999L38.8813 16.6573L38.4257 18.0799Z\"\n            fill=\"#7645D9\"\n          />\n        </g>\n      </g>\n      <defs>\n        <linearGradient\n          id=\"paint0_linear_won\"\n          x1=\"31.2114\"\n          y1=\"29.9293\"\n          x2=\"38.4169\"\n          y2=\"56.8207\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop stopColor=\"#53DEE9\" />\n          <stop offset=\"1\" stopColor=\"#1FC7D4\" />\n        </linearGradient>\n        <linearGradient\n          id=\"paint1_linear_won\"\n          x1=\"34.8059\"\n          y1=\"15.6037\"\n          x2=\"31.9071\"\n          y2=\"26.4221\"\n          gradientUnits=\"userSpaceOnUse\"\n        >\n          <stop stopColor=\"#53DEE9\" />\n          <stop offset=\"1\" stopColor=\"#1FC7D4\" />\n        </linearGradient>\n        <clipPath id={id}>\n          <rect width=\"64\" height=\"64\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M17.65 6.35C16.02 4.72 13.71 3.78 11.17 4.04C7.50002 4.41 4.48002 7.39 4.07002 11.06C3.52002 15.91 7.27002 20 12 20C15.19 20 17.93 18.13 19.21 15.44C19.53 14.77 19.05 14 18.31 14C17.94 14 17.59 14.2 17.43 14.53C16.3 16.96 13.59 18.5 10.63 17.84C8.41002 17.35 6.62002 15.54 6.15002 13.32C5.31002 9.44 8.26002 6 12 6C13.66 6 15.14 6.69 16.22 7.78L14.71 9.29C14.08 9.92 14.52 11 15.41 11H19C19.55 11 20 10.55 20 10V6.41C20 5.52 18.92 5.07 18.29 5.7L17.65 6.35Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path\n        d=\"M12 10C10.9 10 10 10.9 10 12C10 13.1 10.9 14 12 14C13.1 14 14 13.1 14 12C14 10.9 13.1 10 12 10Z\"\n        fill=\"black\"\n      />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M13.8382 2.20573L16.12 6.82916L21.2222 7.57057C22.9037 7.81489 23.5751 9.88123 22.3584 11.0672L18.6663 14.6661L19.5379 19.7477C19.8251 21.4224 18.0674 22.6995 16.5635 21.9088L11.9998 19.5096L7.43624 21.9088C5.93232 22.6995 4.17457 21.4224 4.4618 19.7477L5.33337 14.6661L1.64134 11.0672C0.424631 9.88125 1.09601 7.8149 2.77747 7.57057L7.87974 6.82916L10.1615 2.20573C10.9135 0.682081 13.0862 0.682068 13.8382 2.20573Z\"\n      />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M9.17726 8.2193C9.10443 8.36687 8.96365 8.46916 8.80079 8.49282L3.49187 9.26425C3.08176 9.32385 2.918 9.82783 3.21476 10.1171L7.05633 13.8617C7.17418 13.9766 7.22795 14.1421 7.20013 14.3043L6.29326 19.5917C6.22321 20.0002 6.65192 20.3117 7.01873 20.1188L11.7672 17.6224C11.9128 17.5458 12.0869 17.5458 12.2325 17.6224L16.981 20.1188C17.3478 20.3117 17.7765 20.0002 17.7064 19.5917L16.7996 14.3043C16.7718 14.1421 16.8255 13.9766 16.9434 13.8617L20.7849 10.1171C21.0817 9.82783 20.9179 9.32385 20.5078 9.26425L15.1989 8.49282C15.0361 8.46916 14.8953 8.36687 14.8224 8.2193L12.4482 3.4086C12.2648 3.03698 11.7349 3.03698 11.5515 3.4086L9.17726 8.2193ZM16.2669 6.62701L14.2417 2.52347C13.3247 0.665354 10.675 0.665354 9.75801 2.52347L7.73279 6.62701L3.20427 7.28504C1.15372 7.583 0.334945 10.1029 1.81874 11.5493L5.09561 14.7434L4.32204 19.2537C3.97177 21.2959 6.11535 22.8533 7.94942 21.8891L11.9999 19.7597L16.0503 21.8891C17.8844 22.8533 20.0279 21.2959 19.6777 19.2537L18.9041 14.7434L22.181 11.5493C23.6648 10.1029 22.846 7.583 20.7954 7.28504L16.2669 6.62701Z\"\n      />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 25\" {...props}>\n      <path d=\"M16 17.01V11C16 10.45 15.55 10 15 10C14.45 10 14 10.45 14 11V17.01H12.21C11.76 17.01 11.54 17.55 11.86 17.86L14.65 20.64C14.85 20.83 15.16 20.83 15.36 20.64L18.15 17.86C18.47 17.55 18.24 17.01 17.8 17.01H16ZM8.65003 3.35002L5.86003 6.14002C5.54003 6.45002 5.76003 6.99002 6.21003 6.99002H8.00003V13C8.00003 13.55 8.45003 14 9.00003 14C9.55003 14 10 13.55 10 13V6.99002H11.79C12.24 6.99002 12.46 6.45002 12.14 6.14002L9.35003 3.35002C9.16003 3.16002 8.84003 3.16002 8.65003 3.35002Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M15.0701 1.01H9.07007V3.01H15.0701V1.01ZM11.0701 14.01H13.0701V8.01H11.0701V14.01ZM19.1001 7.39L20.5201 5.97C20.0901 5.46 19.6201 4.98 19.1101 4.56L17.6901 5.98C16.1401 4.74 14.1901 4 12.0701 4C7.10007 4 3.07007 8.03 3.07007 13C3.07007 17.97 7.09007 22 12.0701 22C17.0501 22 21.0701 17.97 21.0701 13C21.0701 10.89 20.3301 8.94 19.1001 7.39ZM12.0701 20.01C8.20007 20.01 5.07007 16.88 5.07007 13.01C5.07007 9.14 8.20007 6.01 12.0701 6.01C15.9401 6.01 19.0701 9.14 19.0701 13.01C19.0701 16.88 15.9401 20.01 12.0701 20.01Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M2 21.8966H12C12.55 21.8966 13 22.3466 13 22.8966C13 23.4466 12.55 23.8966 12 23.8966H2C1.45 23.8966 1 23.4466 1 22.8966C1 22.3466 1.45 21.8966 2 21.8966ZM5.24 8.96661L8.07 6.13661L20.8 18.8666C21.58 19.6466 21.58 20.9166 20.8 21.6966C20.02 22.4766 18.75 22.4766 17.97 21.6966L5.24 8.96661ZM13.73 3.30661L16.56 6.13661C17.34 6.91661 17.34 8.18661 16.56 8.96661L15.14 10.3866L9.49 4.72661L10.9 3.31661C11.68 2.52661 12.95 2.52661 13.73 3.30661ZM3.83 10.3766L9.49 16.0366L8.08 17.4466C7.3 18.2266 6.03 18.2266 5.25 17.4466L2.42 14.6166C1.64 13.8366 1.64 12.5666 2.42 11.7866L3.83 10.3766Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M4.47 20.9999H19.53C21.07 20.9999 22.03 19.3299 21.26 17.9999L13.73 4.98993C12.96 3.65993 11.04 3.65993 10.27 4.98993L2.74 17.9999C1.97 19.3299 2.93 20.9999 4.47 20.9999ZM12 13.9999C11.45 13.9999 11 13.5499 11 12.9999V10.9999C11 10.4499 11.45 9.99993 12 9.99993C12.55 9.99993 13 10.4499 13 10.9999V12.9999C13 13.5499 12.55 13.9999 12 13.9999ZM13 17.9999H11V15.9999H13V17.9999Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M17 4C18.5 4 19 4.5 19 6L19 8C20.1046 8 21 8.89543 21 10L21 17C21 19 20 20 17.999 20H6C4 20 3 19 3 17L3 7C3 5.5 4.5 4 6 4L17 4ZM5 7C5 6.44772 5.44772 6 6 6L19 6L19 8L6 8C5.44772 8 5 7.55229 5 7ZM17 16C18 16 19.001 15 19 14C18.999 13 18 12 17 12C16 12 15 13 15 14C15 15 16 16 17 16Z\"\n      />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C17.5 22 22 17.5 22 12C22 6.5 17.5 2 12 2ZM12 20C7.59 20 4 16.41 4 12C4 7.59 7.59 4 12 4C16.41 4 20 7.59 20 12C20 16.41 16.41 20 12 20ZM12.5 7.75C12.5 7.33579 12.1642 7 11.75 7C11.3358 7 11 7.33579 11 7.75V13L15.5537 15.8022C15.9106 16.0219 16.3781 15.9106 16.5978 15.5537C16.8192 15.1938 16.7041 14.7225 16.3419 14.5051L12.5 12.2V7.75Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg'\nimport { SvgProps } from '../types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 165.91 143.68\" {...props}>\n      <g id=\"Слой_2\" data-name=\"Слой 2\">\n        <g id=\"new\">\n          <g id=\"logo_velas_2\" data-name=\"logo velas 2\">\n            <path\n              fill=\"#0037c1\"\n              d=\"M114.06,53.88,83,107.76,51.85,53.88h62.21m31.11-18H20.74L83,143.68,145.17,35.92ZM0,0,10.37,18H155.54L165.91,0Z\"\n            />\n          </g>\n        </g>\n      </g>\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport { ChevronDownIcon, ChevronUpIcon } from '../Svg'\nimport Button from './Button'\nimport IconButton from './IconButton'\n\ninterface Props {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nexport const ExpandableButton: React.FC<Props> = ({ onClick, expanded, children }) => {\n  return (\n    <IconButton aria-label=\"Hide or show expandable content\" onClick={onClick}>\n      {children}\n      {expanded ? <ChevronUpIcon color=\"invertedContrast\" /> : <ChevronDownIcon color=\"invertedContrast\" />}\n    </IconButton>\n  )\n}\nExpandableButton.defaultProps = {\n  expanded: false,\n}\n\nexport const ExpandableLabel: React.FC<Props> = ({ onClick, expanded, children }) => {\n  return (\n    <Button\n      variant=\"text\"\n      aria-label=\"Hide or show expandable content\"\n      onClick={onClick}\n      endIcon={expanded ? <ChevronUpIcon color=\"primary\" /> : <ChevronDownIcon color=\"primary\" />}\n    >\n      {children}\n    </Button>\n  )\n}\nExpandableLabel.defaultProps = {\n  expanded: false,\n}\n","import styled from 'styled-components'\nimport { background, border, layout, position, space } from 'styled-system'\nimport { BoxProps } from './types'\n\nconst Box = styled.div<BoxProps>`\n  ${background}\n  ${border}\n  ${layout}\n  ${position}\n  ${space}\n`\n\nexport default Box\n","import styled from 'styled-components'\nimport { flexbox } from 'styled-system'\nimport Box from './Box'\nimport { FlexProps } from './types'\n\nconst Flex = styled(Box)<FlexProps>`\n  display: flex;\n  ${flexbox}\n`\n\nexport default Flex\n","import { MouseEvent, ReactNode } from 'react'\n\nexport type AlertTheme = {\n  background: string\n}\n\nexport const variants = {\n  INFO: 'info',\n  DANGER: 'danger',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n} as const\n\nexport type Variants = typeof variants[keyof typeof variants]\n\nexport interface AlertProps {\n  variant?: Variants\n  title: string\n  children?: ReactNode\n  onClick?: (evt: MouseEvent<HTMLButtonElement>) => void\n}\n","import React from 'react'\nimport styled, { DefaultTheme } from 'styled-components'\nimport CheckmarkCircleIcon from '../Svg/Icons/CheckmarkCircle'\nimport ErrorIcon from '../Svg/Icons/Error'\nimport BlockIcon from '../Svg/Icons/Block'\nimport InfoIcon from '../Svg/Icons/Info'\nimport { Text } from '../Text'\nimport { IconButton } from '../Button'\nimport { CloseIcon } from '../Svg'\nimport Flex from '../Box/Flex'\nimport { AlertProps, variants } from './types'\n\ninterface ThemedIconLabel {\n  variant: AlertProps['variant']\n  theme: DefaultTheme\n  hasDescription: boolean\n}\n\nconst getThemeColor = ({ theme, variant = variants.INFO }: ThemedIconLabel) => {\n  switch (variant) {\n    case variants.DANGER:\n      return theme.colors.failure\n    case variants.WARNING:\n      return theme.colors.warning\n    case variants.SUCCESS:\n      return theme.colors.success\n    case variants.INFO:\n    default:\n      return theme.colors.secondary\n  }\n}\n\nconst getIcon = (variant: AlertProps['variant'] = variants.INFO) => {\n  switch (variant) {\n    case variants.DANGER:\n      return BlockIcon\n    case variants.WARNING:\n      return ErrorIcon\n    case variants.SUCCESS:\n      return CheckmarkCircleIcon\n    case variants.INFO:\n    default:\n      return InfoIcon\n  }\n}\n\nconst IconLabel = styled.div<ThemedIconLabel>`\n  background-color: ${getThemeColor};\n  border-radius: 16px 0 0 16px;\n  color: ${({ theme }) => theme.alert.background};\n  padding: 12px;\n`\n\nconst withHandlerSpacing = 32 + 12 + 8 // button size + inner spacing + handler position\nconst Details = styled.div<{ hasHandler: boolean }>`\n  flex: 1;\n  padding-bottom: 12px;\n  padding-left: 12px;\n  padding-right: ${({ hasHandler }) => (hasHandler ? `${withHandlerSpacing}px` : '12px')};\n  padding-top: 12px;\n`\n\nconst CloseHandler = styled.div`\n  border-radius: 0 16px 16px 0;\n  right: 8px;\n  position: absolute;\n  top: 8px;\n`\n\nconst StyledAlert = styled(Flex)`\n  position: relative;\n  background-color: ${({ theme }) => theme.alert.background};\n  border-radius: 16px;\n  box-shadow: 0px 20px 36px -8px rgba(14, 14, 44, 0.1), 0px 1px 1px rgba(0, 0, 0, 0.05);\n`\n\nconst Alert: React.FC<AlertProps> = ({ title, children, variant, onClick }) => {\n  const Icon = getIcon(variant)\n\n  return (\n    <StyledAlert>\n      <IconLabel variant={variant} hasDescription={!!children}>\n        <Icon color=\"currentColor\" width=\"24px\" />\n      </IconLabel>\n      <Details hasHandler={!!onClick}>\n        <Text bold>{title}</Text>\n        {typeof children === 'string' ? <Text as=\"p\">{children}</Text> : children}\n      </Details>\n      {onClick && (\n        <CloseHandler>\n          <IconButton scale=\"sm\" variant=\"text\" onClick={onClick}>\n            <CloseIcon width=\"24px\" color=\"currentColor\" />\n          </IconButton>\n        </CloseHandler>\n      )}\n    </StyledAlert>\n  )\n}\n\nexport default Alert\n","import styled from 'styled-components'\nimport { grid, flexbox } from 'styled-system'\nimport Box from './Box'\nimport { GridProps } from './types'\n\nconst Grid = styled(Box)<GridProps>`\n  display: grid;\n  ${flexbox}\n  ${grid}\n`\n\nexport default Grid\n","import { ReactElement } from 'react'\nimport { SpaceProps } from 'styled-system'\n\nexport const scales = {\n  SM: 'sm',\n  MD: 'md',\n  LG: 'lg',\n} as const\n\nexport type Scales = typeof scales[keyof typeof scales]\n\nexport interface InputProps extends SpaceProps {\n  scale?: Scales\n  isSuccess?: boolean\n  isWarning?: boolean\n}\n\nexport interface InputGroupProps extends SpaceProps {\n  scale?: Scales\n  startIcon?: ReactElement\n  endIcon?: ReactElement\n  children: JSX.Element\n}\n","import styled, { DefaultTheme } from 'styled-components'\nimport { InputProps, scales } from './types'\n\ninterface StyledInputProps extends InputProps {\n  theme: DefaultTheme\n}\n\n/**\n * Priority: Warning --> Success\n */\nconst getBoxShadow = ({ isSuccess = false, isWarning = false, theme }: StyledInputProps) => {\n  if (isWarning) {\n    return theme.shadows.warning\n  }\n\n  if (isSuccess) {\n    return theme.shadows.success\n  }\n\n  return theme.shadows.inset\n}\n\nconst getHeight = ({ scale = scales.MD }: StyledInputProps) => {\n  switch (scale) {\n    case scales.SM:\n      return '32px'\n    case scales.LG:\n      return '48px'\n    case scales.MD:\n    default:\n      return '40px'\n  }\n}\n\nconst Input = styled.input<InputProps>`\n  background-color: ${({ theme }) => theme.colors.input};\n  border: 0;\n  border-radius: 16px;\n  box-shadow: ${getBoxShadow};\n  color: ${({ theme }) => theme.colors.text};\n  display: block;\n  font-size: 16px;\n  height: ${getHeight};\n  outline: 0;\n  padding: 0 16px;\n  width: 100%;\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n\n  &::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n    box-shadow: none;\n    color: ${({ theme }) => theme.colors.textDisabled};\n    cursor: not-allowed;\n  }\n\n  &:focus:not(:disabled) {\n    box-shadow: ${({ theme }) => theme.shadows.focus};\n  }\n`\n\nInput.defaultProps = {\n  scale: scales.MD,\n  isSuccess: false,\n  isWarning: false,\n}\n\nexport default Input\n","import styled from 'styled-components'\nimport Box from '../Box/Box'\nimport Input from '../Input/Input'\nimport Text from '../Text/Text'\nimport IconButton from '../Button/IconButton'\nimport { BalanceInputProps } from './types'\n\nexport const SwitchUnitsButton = styled(IconButton)`\n  width: 16px;\n`\n\nexport const UnitContainer = styled(Text)`\n  margin-left: 4px;\n  text-align: right;\n  color: ${({ theme }) => theme.colors.textSubtle};\n  white-space: nowrap;\n`\n\nexport const StyledBalanceInput = styled(Box)<{ isWarning: BalanceInputProps['isWarning'] }>`\n  background-color: ${({ theme }) => theme.colors.input};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  box-shadow: ${({ theme, isWarning }) => theme.shadows[isWarning ? 'warning' : 'inset']};\n  padding: 8px 16px;\n`\n\nexport const StyledInput = styled(Input)<{ textAlign?: string }>`\n  background: transparent;\n  border-radius: 0;\n  box-shadow: none;\n  padding-left: 0;\n  padding-right: 0;\n  text-align: ${({ textAlign = 'right' }) => textAlign};\n  border: none;\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n\n  &:focus:not(:disabled) {\n    box-shadow: none;\n  }\n`\n","import React from 'react'\nimport { Flex, Box } from '../Box'\nimport { SwapVertIcon } from '../Svg'\nimport Text from '../Text/Text'\nimport { StyledBalanceInput, StyledInput, UnitContainer, SwitchUnitsButton } from './styles'\nimport { BalanceInputProps } from './types'\n\nconst BalanceInput: React.FC<BalanceInputProps> = ({\n  value,\n  placeholder = '0.0',\n  onUserInput,\n  currencyValue,\n  inputProps,\n  innerRef,\n  isWarning = false,\n  decimals = 18,\n  unit,\n  switchEditingUnits,\n  ...props\n}) => {\n  const handleOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.currentTarget.validity.valid) {\n      onUserInput(e.currentTarget.value.replace(/,/g, '.'))\n    }\n  }\n\n  return (\n    <StyledBalanceInput isWarning={isWarning} {...props}>\n      <Flex justifyContent=\"flex-end\">\n        <Box>\n          <Flex alignItems=\"center\">\n            <StyledInput\n              pattern={`^[0-9]*[.,]?[0-9]{0,${decimals}}$`}\n              inputMode=\"decimal\"\n              min=\"0\"\n              value={value}\n              onChange={handleOnChange}\n              placeholder={placeholder}\n              ref={innerRef}\n              {...inputProps}\n            />\n            {unit && <UnitContainer>{unit}</UnitContainer>}\n          </Flex>\n          {currencyValue && (\n            <Text fontSize=\"12px\" textAlign=\"right\" color=\"textSubtle\">\n              {currencyValue}\n            </Text>\n          )}\n        </Box>\n        {switchEditingUnits && (\n          <Flex alignItems=\"center\" pl=\"12px\">\n            <SwitchUnitsButton scale=\"sm\" variant=\"text\" onClick={switchEditingUnits}>\n              <SwapVertIcon color=\"textSubtle\" />\n            </SwitchUnitsButton>\n          </Flex>\n        )}\n      </Flex>\n    </StyledBalanceInput>\n  )\n}\n\nexport default BalanceInput\n","/* eslint-disable react/no-array-index-key */\nimport React, { Children, isValidElement, ReactNode } from 'react'\nimport styled from 'styled-components'\nimport { space } from 'styled-system'\nimport ChevronRightIcon from '../Svg/Icons/ChevronRight'\nimport { BreadcrumbsProps } from './types'\n\nconst Separator = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.textDisabled};\n  display: flex;\n  justify-content: center;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 8px;\n    padding-right: 8px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    padding-left: 16px;\n    padding-right: 16px;\n  }\n`\n\nconst StyledBreadcrumbs = styled.ul`\n  align-items: center;\n  display: flex;\n  flex-wrap: wrap;\n  list-style-type: none;\n\n  a {\n    color: ${({ theme }) => theme.colors.primary};\n\n    &:hover {\n      color: ${({ theme }) => theme.colors.primaryBright};\n    }\n  }\n\n  ${space}\n`\n\nconst insertSeparators = (items: ReactNode[], separator: BreadcrumbsProps['separator']) =>\n  items.reduce((accum: ReactNode[], item, index) => {\n    if (index === 0) {\n      return [...accum, item]\n    }\n\n    return [\n      ...accum,\n      <Separator aria-hidden key={`seperator-${index}`}>\n        {separator}\n      </Separator>,\n      item,\n    ]\n  }, [])\n\nconst DefaultSeparator = <ChevronRightIcon color=\"currentColor\" width=\"24px\" />\n\nconst Breadcrumbs: React.FC<BreadcrumbsProps> = ({ separator = DefaultSeparator, children }) => {\n  const validItems = Children.toArray(children).filter((child) => isValidElement(child))\n  const items = insertSeparators(validItems, separator)\n\n  return (\n    <StyledBreadcrumbs>\n      {items.map((item, index) => (\n        <li key={`child-${index}`}>{item}</li>\n      ))}\n    </StyledBreadcrumbs>\n  )\n}\n\nexport default Breadcrumbs\n","import React, { cloneElement, Children, ReactElement } from 'react'\nimport styled, { DefaultTheme } from 'styled-components'\nimport { space } from 'styled-system'\nimport { scales, variants } from '../Button/types'\nimport { ButtonMenuProps } from './types'\n\ninterface StyledButtonMenuProps extends ButtonMenuProps {\n  theme: DefaultTheme\n}\n\nconst getBackgroundColor = ({ theme, variant }: StyledButtonMenuProps) => {\n  return theme.colors[variant === variants.SUBTLE ? 'input' : 'tertiary']\n}\n\nconst getBorderColor = ({ theme, variant }: StyledButtonMenuProps) => {\n  return theme.colors[variant === variants.SUBTLE ? 'inputSecondary' : 'disabled']\n}\n\nconst StyledButtonMenu = styled.div<StyledButtonMenuProps>`\n  background-color: ${getBackgroundColor};\n  border-radius: 16px;\n  display: ${({ fullWidth }) => (fullWidth ? 'flex' : 'inline-flex')};\n  border: 1px solid ${getBorderColor};\n  width: ${({ fullWidth }) => (fullWidth ? '100%' : 'auto')};\n\n  & > button,\n  & > a {\n    flex: ${({ fullWidth }) => (fullWidth ? 1 : 'auto')};\n  }\n\n  & > button + button,\n  & > a + a {\n    margin-left: 2px; // To avoid focus shadow overlap\n  }\n\n  & > button,\n  & a {\n    box-shadow: none;\n  }\n\n  ${({ disabled, theme, variant }) => {\n    if (disabled) {\n      return `\n        opacity: 0.5;\n\n        & > button:disabled {\n          background-color: transparent;\n          color: ${variant === variants.PRIMARY ? theme.colors.primary : theme.colors.textSubtle};\n        }\n    `\n    }\n    return ''\n  }}\n  ${space}\n`\n\nconst ButtonMenu: React.FC<ButtonMenuProps> = ({\n  activeIndex = 0,\n  scale = scales.MD,\n  variant = variants.PRIMARY,\n  onItemClick,\n  disabled,\n  children,\n  fullWidth = false,\n  ...props\n}) => {\n  return (\n    <StyledButtonMenu disabled={disabled} variant={variant} fullWidth={fullWidth} {...props}>\n      {Children.map(children, (child: ReactElement, index) => {\n        return cloneElement(child, {\n          isActive: activeIndex === index,\n          onClick: onItemClick ? () => onItemClick(index) : undefined,\n          scale,\n          variant,\n          disabled,\n        })\n      })}\n    </StyledButtonMenu>\n  )\n}\n\nexport default ButtonMenu\n","import React from 'react'\nimport styled from 'styled-components'\nimport Button from '../Button/Button'\nimport { BaseButtonProps, PolymorphicComponent, variants } from '../Button/types'\nimport { ButtonMenuItemProps } from './types'\n\ninterface InactiveButtonProps extends BaseButtonProps {\n  forwardedAs: BaseButtonProps['as']\n}\n\nconst InactiveButton: PolymorphicComponent<InactiveButtonProps, 'button'> = styled(Button)<InactiveButtonProps>`\n  background-color: transparent;\n  color: ${({ theme, variant }) => (variant === variants.PRIMARY ? theme.colors.primary : theme.colors.textSubtle)};\n  &:hover:not(:disabled):not(:active) {\n    background-color: transparent;\n  }\n`\n\nconst ButtonMenuItem: PolymorphicComponent<ButtonMenuItemProps, 'button'> = ({\n  isActive = false,\n  variant = variants.PRIMARY,\n  as,\n  ...props\n}: ButtonMenuItemProps) => {\n  if (!isActive) {\n    return <InactiveButton forwardedAs={as} variant={variant} {...props} />\n  }\n\n  return <Button as={as} variant={variant} {...props} />\n}\n\nexport default ButtonMenuItem\n","import styled, { DefaultTheme, keyframes, css } from 'styled-components'\nimport { space } from 'styled-system'\nimport { Box } from '../Box'\nimport { CardProps } from './types'\n\nconst PromotedGradient = keyframes`\n  0% {\n    background-position: 50% 0%;\n  }\n  50% {\n    background-position: 50% 100%;\n  }\n  100% {\n    background-position: 50% 0%;\n  }\n`\n\ninterface StyledCardProps extends CardProps {\n  theme: DefaultTheme\n}\n\n/**\n * Priority: Warning --> Success --> Active\n */\nconst getBorderColor = ({ isActive, isSuccess, isWarning, borderBackground, theme }: StyledCardProps) => {\n  if (borderBackground) {\n    return borderBackground\n  }\n  if (isWarning) {\n    return theme.colors.warning\n  }\n\n  if (isSuccess) {\n    return theme.colors.success\n  }\n\n  if (isActive) {\n    return `linear-gradient(180deg, ${theme.colors.primaryBright}, ${theme.colors.secondary})`\n  }\n\n  return theme.colors.cardBorder\n}\n\nexport const StyledCard = styled.div<StyledCardProps>`\n  background: ${getBorderColor};\n  border-radius: ${({ theme }) => theme.radii.card};\n  color: ${({ theme, isDisabled }) => theme.colors[isDisabled ? 'textDisabled' : 'text']};\n  overflow: hidden;\n  position: relative;\n\n  ${({ isActive }) =>\n    isActive &&\n    css`\n      animation: ${PromotedGradient} 3s ease infinite;\n      background-size: 400% 400%;\n    `}\n\n  padding: 1px 1px 3px 1px;\n\n  ${space}\n`\n\nexport const StyledCardInner = styled(Box)<{ background?: string; hasCustomBorder: boolean }>`\n  width: 100%;\n  height: 100%;\n  overflow: ${({ hasCustomBorder }) => (hasCustomBorder ? 'initial' : 'inherit')};\n  background: ${({ theme, background }) => background ?? theme.card.background};\n  border-radius: ${({ theme }) => theme.radii.card};\n`\n\nStyledCard.defaultProps = {\n  isActive: false,\n  isSuccess: false,\n  isWarning: false,\n  isDisabled: false,\n}\n","import React from 'react'\nimport { StyledCard, StyledCardInner } from './StyledCard'\nimport { CardProps } from './types'\n\nconst Card: React.FC<CardProps> = ({ ribbon, children, background, ...props }) => {\n  return (\n    <StyledCard {...props}>\n      <StyledCardInner background={background} hasCustomBorder={!!props.borderBackground}>\n        {ribbon}\n        {children}\n      </StyledCardInner>\n    </StyledCard>\n  )\n}\nexport default Card\n","import styled from 'styled-components'\nimport { space, SpaceProps } from 'styled-system'\n\nexport type CardBodyProps = SpaceProps\n\nconst CardBody = styled.div<CardBodyProps>`\n  ${space}\n`\n\nCardBody.defaultProps = {\n  p: '24px',\n}\n\nexport default CardBody\n","import styled from 'styled-components'\nimport { space, SpaceProps } from 'styled-system'\nimport { CardTheme } from './types'\n\nexport interface CardHeaderProps extends SpaceProps {\n  variant?: keyof CardTheme['cardHeaderBackground']\n}\n\nconst CardHeader = styled.div<CardHeaderProps>`\n  background: ${({ theme, variant = 'default' }) => theme.card.cardHeaderBackground[variant]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n  ${space}\n`\n\nCardHeader.defaultProps = {\n  p: '24px',\n}\n\nexport default CardHeader\n","import styled from 'styled-components'\nimport { space, SpaceProps } from 'styled-system'\n\nexport type CardFooterProps = SpaceProps\n\nconst CardFooter = styled.div<CardFooterProps>`\n  border-top: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  ${space}\n`\n\nCardFooter.defaultProps = {\n  p: '24px',\n}\n\nexport default CardFooter\n","import React from 'react'\nimport styled, { DefaultTheme } from 'styled-components'\nimport { CardRibbonProps } from './types'\n\ninterface StyledCardRibbonProps extends CardRibbonProps {\n  theme: DefaultTheme\n}\n\nconst StyledCardRibbon = styled.div<Partial<StyledCardRibbonProps>>`\n  z-index: 10;\n  background-color: ${({ variantColor = 'secondary', theme }) => theme.colors[variantColor]};\n  color: white;\n  margin: 0;\n  padding: 0;\n  padding: 8px 0;\n  position: absolute;\n  right: ${({ ribbonPosition }) => (ribbonPosition === 'right' ? 0 : 'auto')};\n  top: 0;\n  text-align: center;\n  transform: translateX(30%) translateY(0%) rotate(45deg);\n  transform: ${({ ribbonPosition }) =>\n    ribbonPosition === 'right'\n      ? 'translateX(30%) translateY(0%) rotate(45deg)'\n      : 'translateX(0%) translateY(200%) rotate(-45deg)'};\n  transform-origin: top left;\n  width: 96px;\n\n  &:before,\n  &:after {\n    background-color: ${({ variantColor = 'secondary', theme }) => theme.colors[variantColor]};\n    content: '';\n    height: 100%;\n    margin: 0 -1px; /* Removes tiny gap */\n    position: absolute;\n    top: 0;\n    width: 100%;\n  }\n\n  &:before {\n    right: 100%;\n  }\n\n  &:after {\n    left: 100%;\n  }\n\n  & > div {\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    width: 96px;\n  }\n`\n\nconst CardRibbon: React.FC<CardRibbonProps> = ({ variantColor, text, ribbonPosition, ...props }) => {\n  return (\n    <StyledCardRibbon variantColor={variantColor} ribbonPosition={ribbonPosition} {...props}>\n      <div title={text}>{text}</div>\n    </StyledCardRibbon>\n  )\n}\n\nCardRibbon.defaultProps = {\n  ribbonPosition: 'right',\n}\n\nexport default CardRibbon\n","export const scales = {\n  SM: 'sm',\n  MD: 'md',\n} as const\n\nexport type Scales = typeof scales[keyof typeof scales]\n\nexport interface CheckboxProps {\n  scale?: Scales\n}\n","import styled from 'styled-components'\nimport { CheckboxProps, scales } from './types'\n\nconst getScale = ({ scale }: CheckboxProps) => {\n  switch (scale) {\n    case scales.SM:\n      return '24px'\n    case scales.MD:\n    default:\n      return '32px'\n  }\n}\n\nconst Checkbox = styled.input.attrs({ type: 'checkbox' })<CheckboxProps>`\n  appearance: none;\n  overflow: hidden;\n  cursor: pointer;\n  position: relative;\n  display: inline-block;\n  height: ${getScale};\n  width: ${getScale};\n  vertical-align: middle;\n  transition: background-color 0.2s ease-in-out;\n  border: 0;\n  border-radius: 8px;\n  background-color: ${({ theme }) => theme.colors.input};\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n\n  &:after {\n    content: '';\n    position: absolute;\n    border-bottom: 2px solid;\n    border-left: 2px solid;\n    border-color: transparent;\n    top: 30%;\n    left: 0;\n    right: 0;\n    width: 50%;\n    height: 25%;\n    margin: auto;\n    transform: rotate(-50deg);\n    transition: border-color 0.2s ease-in-out;\n  }\n\n  &:hover:not(:disabled):not(:checked) {\n    box-shadow: ${({ theme }) => theme.shadows.focus};\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: ${({ theme }) => theme.shadows.focus};\n  }\n\n  &:checked {\n    background-color: ${({ theme }) => theme.colors.success};\n    &:after {\n      border-color: white;\n    }\n  }\n\n  &:disabled {\n    cursor: default;\n    opacity: 0.6;\n  }\n`\n\nCheckbox.defaultProps = {\n  scale: scales.MD,\n}\n\nexport default Checkbox\n","import React from 'react'\nimport styled from 'styled-components'\nimport { DropdownProps, PositionProps, Position } from './types'\n\nconst getLeft = ({ position }: PositionProps) => {\n  if (position === 'top-right') {\n    return '100%'\n  }\n  return '50%'\n}\n\nconst getBottom = ({ position }: PositionProps) => {\n  if (position === 'top' || position === 'top-right') {\n    return '100%'\n  }\n  return 'auto'\n}\n\nconst DropdownContent = styled.div<{ position: Position }>`\n  width: max-content;\n  display: none;\n  flex-direction: column;\n  position: absolute;\n  transform: translate(-50%, 0);\n  left: ${getLeft};\n  bottom: ${getBottom};\n  background-color: ${({ theme }) => theme.nav.background};\n  box-shadow: ${({ theme }) => theme.shadows.level1};\n  padding: 16px;\n  max-height: 400px;\n  overflow-y: auto;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  border-radius: ${({ theme }) => theme.radii.small};\n`\n\nconst Container = styled.div`\n  position: relative;\n  &:hover ${DropdownContent}, &:focus-within ${DropdownContent} {\n    display: flex;\n  }\n`\n\nconst Dropdown: React.FC<DropdownProps> = ({ target, position = 'bottom', children }) => {\n  return (\n    <Container>\n      {target}\n      <DropdownContent position={position}>{children}</DropdownContent>\n    </Container>\n  )\n}\nDropdown.defaultProps = {\n  position: 'bottom',\n}\n\nexport default Dropdown\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport BunnyIcon from '../Svg/Icons/Logo'\nimport { BunnyProps, FallingBunniesProps } from './types'\n\nconst bunnyFall = keyframes`\n  0% {\n    opacity: 1;\n    transform: translate(0, -100%) rotateZ(0deg);\n  }\n\n  75% {\n    opacity: 1;\n    transform: translate(100px, 75vh) rotateZ(270deg);\n  }\n\n  100% {\n    opacity: 0;\n    transform: translate(150px, 100vh) rotateZ(360deg);\n  }\n`\n\nconst Bunny = styled.div<BunnyProps>`\n  display: inline-flex;\n  position: fixed;\n  top: 0;\n  left: ${({ position }) => `${position}vw`};\n  transform: translate3d(0, -100%, 0);\n  user-select: none;\n  pointer-events: none;\n  z-index: 99999;\n\n  animation-name: ${bunnyFall};\n  animation-duration: ${({ duration }) => `${duration}s`};\n  animation-timing-function: linear;\n  animation-iteration-count: ${({ iterations }) => (Number.isFinite(iterations) ? String(iterations) : 'infinite')};\n  animation-play-state: running;\n\n  &:nth-child(5n + 5) {\n    animation-delay: ${({ duration }) => `${(duration / 10) * 1.3}s`};\n  }\n\n  &:nth-child(3n + 2) {\n    animation-delay: ${({ duration }) => `${(duration / 10) * 1.5}s`};\n  }\n\n  &:nth-child(2n + 5) {\n    animation-delay: ${({ duration }) => `${(duration / 10) * 1.7}s`};\n  }\n\n  &:nth-child(3n + 10) {\n    animation-delay: ${({ duration }) => `${(duration / 10) * 2.7}s`};\n  }\n\n  &:nth-child(7n + 2) {\n    animation-delay: ${({ duration }) => `${(duration / 10) * 3.5}s`};\n  }\n\n  &:nth-child(4n + 5) {\n    animation-delay: ${({ duration }) => `${(duration / 10) * 5.5}s`};\n  }\n\n  &:nth-child(3n + 7) {\n    animation-delay: ${({ duration }) => `${(duration / 10) * 8}s`};\n  }\n`\n\nconst FallingBunnies: React.FC<FallingBunniesProps> = ({\n  count = 30,\n  size = 32,\n  iterations = Infinity,\n  duration = 10,\n}) => {\n  const bunnies = [...Array(count)].map((_, index) => (\n    <Bunny key={String(index)} position={Math.random() * 100} iterations={iterations} duration={duration}>\n      <BunnyIcon width={size} height={size} />\n    </Bunny>\n  ))\n\n  return <div>{bunnies}</div>\n}\n\nexport default FallingBunnies\n","export const tags = {\n  H1: 'h1',\n  H2: 'h2',\n  H3: 'h3',\n  H4: 'h4',\n  H5: 'h5',\n  H6: 'h6',\n}\n\nexport const scales = {\n  MD: 'md',\n  LG: 'lg',\n  XL: 'xl',\n  XXL: 'xxl',\n} as const\n\nexport type Tags = typeof tags[keyof typeof tags]\nexport type Scales = typeof scales[keyof typeof scales]\n\nexport interface HeadingProps {\n  as?: Tags\n  scale?: Scales\n}\n","import styled from 'styled-components'\nimport Text from '../Text/Text'\nimport { tags, scales, HeadingProps } from './types'\n\nconst style = {\n  [scales.MD]: {\n    fontSize: '20px',\n    fontSizeLg: '20px',\n  },\n  [scales.LG]: {\n    fontSize: '24px',\n    fontSizeLg: '24px',\n  },\n  [scales.XL]: {\n    fontSize: '32px',\n    fontSizeLg: '40px',\n  },\n  [scales.XXL]: {\n    fontSize: '48px',\n    fontSizeLg: '64px',\n  },\n}\n\nconst Heading = styled(Text).attrs({ bold: true })<HeadingProps>`\n  font-size: ${({ scale }) => style[scale || scales.MD].fontSize};\n  font-weight: 500;\n  line-height: 1.1;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    font-size: ${({ scale }) => style[scale || scales.MD].fontSizeLg};\n  }\n`\n\nHeading.defaultProps = {\n  as: tags.H2,\n}\n\nexport default Heading\n","export default {\n  root: null,\n  rootMargin: '200px',\n  threshold: 0,\n}\n","import React, { forwardRef } from 'react'\nimport styled from 'styled-components'\nimport { space } from 'styled-system'\nimport { WrapperProps } from './types'\n\nconst StyledWrapper = styled.div<{ $width: number; $height: number }>`\n  max-height: ${({ $height }) => $height}px;\n  max-width: ${({ $width }) => $width}px;\n  position: relative;\n  width: 100%;\n\n  &:after {\n    content: '';\n    display: block;\n    padding-top: ${({ $width, $height }) => ($height / $width) * 100}%;\n  }\n\n  ${space}\n`\n\nconst Wrapper = forwardRef<HTMLDivElement, WrapperProps>(({ width, height, ...props }, ref) => {\n  return <StyledWrapper ref={ref} $width={width} $height={height} {...props} />\n})\n\nexport default Wrapper\n","import styled from 'styled-components'\n\nconst Placeholder = styled.div`\n  height: 100%;\n  left: 0;\n  position: absolute;\n  top: 0;\n  width: 100%;\n`\n\nexport default Placeholder\n","import React, { useEffect, useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport observerOptions from './options'\nimport Wrapper from './Wrapper'\nimport { BackgroundImageProps } from './types'\nimport Placeholder from './Placeholder'\n\nconst StyledBackgroundImage = styled(Wrapper)`\n  background-repeat: no-repeat;\n  background-size: contain;\n`\n\nconst BackgroundImage: React.FC<BackgroundImageProps> = ({ loadingPlaceholder, src, width, height, ...props }) => {\n  const [isLoaded, setIsLoaded] = useState(false)\n  const ref = useRef<HTMLDivElement>(null)\n  const placeholder = loadingPlaceholder || <Placeholder />\n\n  useEffect(() => {\n    let observer: IntersectionObserver\n\n    if (ref.current) {\n      const div = ref.current\n\n      observer = new IntersectionObserver((entries) => {\n        entries.forEach((entry) => {\n          const { isIntersecting } = entry\n          if (isIntersecting) {\n            if (src) {\n              // Load the image via an image element so we can show a placeholder until the image is downloaded\n              const img = document.createElement('img')\n              img.onload = () => {\n                div.style.backgroundImage = `url(\"${src}\")`\n                setIsLoaded(true)\n              }\n              img.src = src\n            }\n\n            observer.disconnect()\n          }\n        })\n      }, observerOptions)\n      observer.observe(div)\n    }\n    return () => {\n      if (observer) {\n        observer.disconnect()\n      }\n    }\n  }, [src, setIsLoaded])\n\n  return (\n    <StyledBackgroundImage ref={ref} width={width} height={height} {...props}>\n      {!isLoaded && placeholder}\n    </StyledBackgroundImage>\n  )\n}\n\nexport default BackgroundImage\n","import React, { useEffect, useRef, useState } from 'react'\nimport styled from 'styled-components'\nimport observerOptions from './options'\nimport Wrapper from './Wrapper'\nimport { ImageProps } from './types'\nimport Placeholder from './Placeholder'\n\nconst StyledImage = styled.img`\n  height: 100%;\n  left: 0;\n  position: absolute;\n  top: 0;\n  width: 100%;\n`\n\nconst Image: React.FC<ImageProps> = ({ src, alt, width, height, ...props }) => {\n  const imgRef = useRef<HTMLDivElement>(null)\n  const [isLoaded, setIsLoaded] = useState(false)\n\n  useEffect(() => {\n    let observer: IntersectionObserver\n\n    if (imgRef.current) {\n      observer = new IntersectionObserver((entries) => {\n        entries.forEach((entry) => {\n          const { isIntersecting } = entry\n          if (isIntersecting) {\n            setIsLoaded(true)\n            observer.disconnect()\n          }\n        })\n      }, observerOptions)\n      observer.observe(imgRef.current)\n    }\n\n    return () => {\n      if (observer) {\n        observer.disconnect()\n      }\n    }\n  }, [src])\n\n  return (\n    <Wrapper ref={imgRef} height={height} width={width} {...props}>\n      {isLoaded ? <StyledImage src={src} alt={alt} /> : <Placeholder />}\n    </Wrapper>\n  )\n}\n\nexport default Image\n","import styled from 'styled-components'\nimport Image from './Image'\n\nconst TokenImage = styled(Image)`\n  &:before {\n    border-radius: 50%;\n    border: 1px solid rgba(0, 0, 0, 0.25);\n    content: '';\n    height: 100%;\n    left: 0;\n    position: absolute;\n    top: 0;\n    width: 100%;\n    z-index: 7;\n  }\n`\n\nexport default TokenImage\n","import { HTMLAttributes, ImgHTMLAttributes, ReactElement } from 'react'\nimport { SpaceProps } from 'styled-system'\nimport { BoxProps } from '../Box'\n\nexport interface WrapperProps extends SpaceProps, HTMLAttributes<HTMLDivElement> {\n  width: number\n  height: number\n}\n\nexport interface ImageProps extends ImgHTMLAttributes<HTMLImageElement>, SpaceProps {\n  width: number\n  height: number\n  wrapperProps?: WrapperProps\n}\n\nexport interface BackgroundImageProps extends ImageProps {\n  loadingPlaceholder?: ReactElement\n}\n\nexport const variants = {\n  DEFAULT: 'default',\n  INVERTED: 'inverted',\n} as const\n\nexport type Variant = typeof variants[keyof typeof variants]\n\nexport interface TokenPairImageProps extends BoxProps {\n  primarySrc: string\n  secondarySrc: string\n  variant?: Variant\n  height: number\n  width: number\n  primaryImageProps?: Omit<ImageProps, 'width' | 'height'>\n  secondaryImageProps?: Omit<ImageProps, 'width' | 'height'>\n}\n","import styled from 'styled-components'\nimport { variant as StyledSystemVariant } from 'styled-system'\nimport { ImageProps, Variant, variants } from './types'\nimport TokenImage from './TokenImage'\n\ninterface StyledImageProps extends ImageProps {\n  variant: Variant\n}\n\nexport const StyledPrimaryImage = styled(TokenImage)<StyledImageProps>`\n  position: absolute;\n  width: ${({ variant }) =>\n    variant === variants.DEFAULT ? '92%' : '82%'}; // 92, 82 are arbitrary numbers to fit the variant\n\n  ${StyledSystemVariant({\n    variants: {\n      [variants.DEFAULT]: {\n        bottom: 'auto',\n        left: 0,\n        right: 'auto',\n        top: 0,\n        zIndex: 5,\n      },\n      [variants.INVERTED]: {\n        bottom: 0,\n        left: 'auto',\n        right: 0,\n        top: 'auto',\n        zIndex: 6,\n      },\n    },\n  })}\n`\n\nexport const StyledSecondaryImage = styled(TokenImage)<StyledImageProps>`\n  position: absolute;\n  width: 50%;\n\n  ${StyledSystemVariant({\n    variants: {\n      [variants.DEFAULT]: {\n        bottom: 0,\n        left: 'auto',\n        right: 0,\n        top: 'auto',\n        zIndex: 6,\n      },\n      [variants.INVERTED]: {\n        bottom: 'auto',\n        left: 0,\n        right: 'auto',\n        top: 0,\n        zIndex: 5,\n      },\n    },\n  })}\n`\n","import React from 'react'\nimport { TokenPairImageProps, variants } from './types'\nimport { StyledPrimaryImage, StyledSecondaryImage } from './styles'\nimport Wrapper from './Wrapper'\n\nconst TokenPairImage: React.FC<TokenPairImageProps> = ({\n  primarySrc,\n  secondarySrc,\n  width,\n  height,\n  variant = variants.DEFAULT,\n  primaryImageProps = {},\n  secondaryImageProps = {},\n  ...props\n}) => {\n  const secondaryImageSize = Math.floor(width / 2)\n\n  return (\n    <Wrapper position=\"relative\" width={width} height={height} {...props}>\n      <StyledPrimaryImage variant={variant} src={primarySrc} width={width} height={height} {...primaryImageProps} />\n      <StyledSecondaryImage\n        variant={variant}\n        src={secondarySrc}\n        width={secondaryImageSize}\n        height={secondaryImageSize}\n        {...secondaryImageProps}\n      />\n    </Wrapper>\n  )\n}\n\nexport default TokenPairImage\n","import React, { cloneElement } from 'react'\nimport styled from 'styled-components'\nimport Box from '../Box/Box'\nimport Input from './Input'\nimport { InputGroupProps, scales, Scales } from './types'\n\nconst getPadding = (scale: Scales, hasIcon: boolean) => {\n  if (!hasIcon) {\n    return '16px'\n  }\n\n  switch (scale) {\n    case scales.SM:\n      return '32px'\n    case scales.LG:\n      return '56px'\n    case scales.MD:\n    default:\n      return '48px'\n  }\n}\n\nconst StyledInputGroup = styled(Box)<{ scale: Scales; hasStartIcon: boolean; hasEndIcon: boolean }>`\n  ${Input} {\n    padding-left: ${({ hasStartIcon, scale }) => getPadding(scale, hasStartIcon)};\n    padding-right: ${({ hasEndIcon, scale }) => getPadding(scale, hasEndIcon)};\n  }\n`\n\nconst InputIcon = styled.div<{ scale: Scales; isEndIcon?: boolean }>`\n  align-items: center;\n  display: flex;\n  height: 100%;\n  position: absolute;\n  top: 0;\n\n  ${({ isEndIcon, scale }) =>\n    isEndIcon\n      ? `\n    right: ${scale === scales.SM ? '8px' : '16px'};\n  `\n      : `\n    left: ${scale === scales.SM ? '8px' : '16px'};\n  `}\n`\n\nconst InputGroup = ({ scale = scales.MD, startIcon, endIcon, children, ...props }: InputGroupProps): JSX.Element => (\n  <StyledInputGroup\n    scale={scale}\n    width=\"100%\"\n    position=\"relative\"\n    hasStartIcon={!!startIcon}\n    hasEndIcon={!!endIcon}\n    {...props}\n  >\n    {startIcon && <InputIcon scale={scale}>{startIcon}</InputIcon>}\n    {cloneElement(children, { scale })}\n    {endIcon && (\n      <InputIcon scale={scale} isEndIcon>\n        {endIcon}\n      </InputIcon>\n    )}\n  </StyledInputGroup>\n)\n\nexport default InputGroup\n","import React from 'react'\nimport styled from 'styled-components'\nimport BunnyPlaceholder from '../Svg/Icons/BunnyPlaceholder'\nimport BackgroundImage from './BackgroundImage'\nimport { BackgroundImageProps } from './types'\n\nconst StyledProfileAvatar = styled(BackgroundImage)`\n  border-radius: 50%;\n`\n\nconst StyledBunnyPlaceholder = styled(BunnyPlaceholder)`\n  height: 100%;\n  width: 100%;\n`\n\nconst ProfileAvatar: React.FC<BackgroundImageProps> = (props) => (\n  <StyledProfileAvatar loadingPlaceholder={<StyledBunnyPlaceholder />} {...props} />\n)\n\nexport default ProfileAvatar\n","import styled from 'styled-components'\nimport Grid from '../Box/Grid'\n\nconst GridLayout = styled(Grid)`\n  grid-template-columns: repeat(6, 1fr);\n  grid-gap: 16px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: repeat(8, 1fr);\n    grid-gap: 24px;\n  }\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: repeat(12, 1fr);\n    grid-gap: 24px;\n  }\n  ${({ theme }) => theme.mediaQueries.lg} {\n    grid-template-columns: repeat(12, 1fr);\n    grid-gap: 32px;\n  }\n`\n\nexport default GridLayout\n","import styled from 'styled-components'\nimport BaseLayout from './BaseLayout'\n\nconst GridLayout = styled(BaseLayout)`\n  & > div {\n    grid-column: span 6;\n    ${({ theme }) => theme.mediaQueries.sm} {\n      grid-column: span 4;\n    }\n  }\n`\n\nexport default GridLayout\n","import React from 'react'\nimport styled from 'styled-components'\nimport getExternalLinkProps from '../../util/getExternalLinkProps'\nimport Text from '../Text/Text'\nimport { LinkProps } from './types'\n\nconst StyledLink = styled(Text)<LinkProps>`\n  display: flex;\n  align-items: center;\n  width: fit-content;\n  &:hover {\n    text-decoration: underline;\n  }\n`\n\nconst Link: React.FC<LinkProps> = ({ external, ...props }) => {\n  const internalProps = external ? getExternalLinkProps() : {}\n  // @ts-ignore\n  return <StyledLink as=\"a\" bold {...internalProps} {...props} />\n}\n\nLink.defaultProps = {\n  color: 'primary',\n}\n\nexport default Link\n","import React from 'react'\nimport Link from './Link'\nimport { LinkProps } from './types'\nimport OpenNewIcon from '../Svg/Icons/OpenNew'\n\nconst LinkExternal: React.FC<LinkProps> = ({ children, ...props }) => {\n  return (\n    <Link external {...props}>\n      {children}\n      <OpenNewIcon color={props.color ? props.color : 'primary'} ml=\"4px\" />\n    </Link>\n  )\n}\n\nexport default LinkExternal\n","const variants = {\n  warning: {\n    background: '#FFB23719',\n    borderColor: 'warning',\n  },\n  danger: {\n    background: '#ED4B9E19',\n    borderColor: 'failure',\n  },\n}\n\nexport default variants\n","import React from 'react'\nimport styled from 'styled-components'\nimport { variant as systemVariant, space } from 'styled-system'\nimport { WarningIcon, ErrorIcon } from '../Svg'\nimport { Box } from '../Box'\nimport { MessageProps } from './types'\nimport variants from './theme'\n\nconst Icons = {\n  warning: WarningIcon,\n  danger: ErrorIcon,\n}\n\nconst MessageContainer = styled.div<MessageProps>`\n  display: flex;\n  background-color: gray;\n  padding: 16px;\n  border-radius: 16px;\n  border: solid 1px;\n\n  ${space}\n  ${systemVariant({\n    variants,\n  })}\n`\n\nconst Message: React.FC<MessageProps> = ({ children, variant, icon, ...props }) => {\n  const Icon = Icons[variant]\n  return (\n    <MessageContainer variant={variant} {...props}>\n      <Box mr=\"12px\">{icon ?? <Icon color={variants[variant].borderColor} width=\"24px\" />}</Box>\n      {children}\n    </MessageContainer>\n  )\n}\n\nexport default Message\n","import React, { cloneElement, Children, ReactElement } from 'react'\nimport styled from 'styled-components'\nimport { NotificationDotProps, DotProps } from './types'\n\nconst NotificationDotRoot = styled.span`\n  display: inline-flex;\n  position: relative;\n`\n\nconst Dot = styled.span<DotProps>`\n  display: ${({ show }) => (show ? 'inline-flex' : 'none')};\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 10px;\n  height: 10px;\n  pointer-events: none;\n  border: 2px solid ${({ theme }) => theme.colors.invertedContrast};\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.colors.failure};\n`\n\nconst NotificationDot: React.FC<NotificationDotProps> = ({ show = false, children, ...props }) => (\n  <NotificationDotRoot>\n    {Children.map(children, (child: ReactElement) => cloneElement(child, props))}\n    <Dot show={show} />\n  </NotificationDotRoot>\n)\n\nexport default NotificationDot\n","import styled from 'styled-components'\nimport { OverlayProps } from './types'\n\nconst Overlay = styled.div.attrs({ role: 'presentation' })<OverlayProps>`\n  position: fixed;\n  top: 0px;\n  left: 0px;\n  width: 100%;\n  height: 100%;\n  background-color: ${({ theme }) => theme.colors.overlay};\n  transition: opacity 0.4s;\n  opacity: ${({ show }) => (show ? 0.6 : 0)};\n  z-index: ${({ zIndex }) => zIndex};\n  pointer-events: ${({ show }) => (show ? 'initial' : 'none')};\n`\n\nOverlay.defaultProps = {\n  show: false,\n  zIndex: 10,\n}\n\nexport default Overlay\n","import { InputHTMLAttributes } from 'react'\n\nexport type PancakeToggleTheme = {\n  handleBackground: string\n  handleShadow: string\n}\n\nexport const scales = {\n  SM: 'sm',\n  MD: 'md',\n  LG: 'lg',\n} as const\n\nexport type Scales = typeof scales[keyof typeof scales]\n\nexport interface PancakeToggleProps extends InputHTMLAttributes<HTMLInputElement> {\n  scale?: Scales\n  checked?: boolean\n}\n\nexport interface HandleProps {\n  scale: Scales\n}\n\nexport interface InputProps {\n  scale: Scales\n}\n\nexport const scaleKeys = {\n  pancakeSize: 'pancakeSize',\n  travelDistance: 'travelDistance',\n  toggleHeight: 'toggleHeight',\n  toggleWidth: 'toggleWidth',\n  pancakeThickness: 'pancakeThickness',\n  pancakeTwoOffset: 'pancakeTwoOffset',\n  pancakeThreeOffset: 'pancakeThreeOffset',\n  butterTop: 'butterTop',\n  butterLeft: 'butterLeft',\n  butterWidth: 'butterWidth',\n  butterHeight: 'butterHeight',\n  butterThickness: 'butterThickness',\n  butterRadius: 'butterRadius',\n  butterSmearOneTop: 'butterSmearOneTop',\n  butterSmearOneLeft: 'butterSmearOneLeft',\n  butterSmearTwoTop: 'butterSmearTwoTop',\n  butterSmearTwoRight: 'butterSmearTwoRight',\n} as const\n\nexport type ScaleKeys = typeof scaleKeys[keyof typeof scaleKeys]\n","import styled from 'styled-components'\nimport { scales, PancakeToggleProps, HandleProps, InputProps, ScaleKeys } from './types'\n\nconst scaleKeyValues = {\n  sm: {\n    pancakeSize: '14px', // The size of a pancake (the handle)\n    travelDistance: '14px', // How far pancakes should travel horizontally\n    toggleHeight: '20px', // General Height and\n    toggleWidth: '36px', // Width of a toggle box\n    pancakeThickness: '1px', // Bottom shadow of a pancake\n    pancakeTwoOffset: '0px', // Pancakes don't look good when they are concentric\n    pancakeThreeOffset: '-3px', // so pancake 2 and 3 are shifted a little bit\n    butterTop: '3px', // Fine adjustments for butter position\n    butterLeft: '10px',\n    butterWidth: '6px', // Widht and\n    butterHeight: '5px', // Height of a butter block on top of pancakes\n    butterThickness: '0.5px', // Shadow on the bottom of the butter block\n    butterRadius: '2px', // Rounded corners for the butter\n    butterSmearOneTop: '10px', // There is melted butter\n    butterSmearOneLeft: '2.5px', // next to the butter block\n    butterSmearTwoTop: '11px', // implemented with :before and :after\n    butterSmearTwoRight: '2.5px', // these values adjust the position of it\n  },\n  md: {\n    pancakeSize: '24px',\n    travelDistance: '24px',\n    toggleHeight: '32px',\n    toggleWidth: '56px',\n    pancakeThickness: '1.5px',\n    pancakeTwoOffset: '-1px',\n    pancakeThreeOffset: '-6px',\n    butterTop: '5px',\n    butterLeft: '13px',\n    butterWidth: '10px',\n    butterHeight: '8px',\n    butterThickness: '0.75px',\n    butterRadius: '3px',\n    butterSmearOneTop: '15px',\n    butterSmearOneLeft: '3.75px',\n    butterSmearTwoTop: '16px',\n    butterSmearTwoRight: '3.75px',\n  },\n  lg: {\n    pancakeSize: '31px',\n    travelDistance: '31px',\n    toggleHeight: '40px',\n    toggleWidth: '72px',\n    pancakeThickness: '2px',\n    pancakeTwoOffset: '-3px',\n    pancakeThreeOffset: '-8px',\n    butterTop: '3px',\n    butterLeft: '16px',\n    butterWidth: '12px',\n    butterHeight: '11px',\n    butterThickness: '1px',\n    butterRadius: '4px',\n    butterSmearOneTop: '20px',\n    butterSmearOneLeft: '5px',\n    butterSmearTwoTop: '22px',\n    butterSmearTwoRight: '5px',\n  },\n}\n\nconst getScale =\n  (property: ScaleKeys) =>\n  ({ scale = scales.LG }: PancakeToggleProps) => {\n    return scaleKeyValues[scale][property]\n  }\n\nexport const PancakeStack = styled.div<HandleProps>`\n  position: relative;\n  display: inline-block;\n\n  &:label:before {\n    content: none;\n  }\n\n  .pancakes {\n    position: absolute;\n    transition: 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  }\n\n  .pancake {\n    width: ${getScale('pancakeSize')};\n    height: ${getScale('pancakeSize')};\n    position: absolute;\n    top: 2px;\n    left: 4px;\n    background: #756072;\n    box-shadow: rgb(189 194 196) 0px 1.5px 0px 1.5px;\n    transition: all 0.4s ease 0s;\n    border-radius: 50%;\n  }\n\n  .wagyu {\n    width: ${getScale('pancakeSize')};\n    height: ${getScale('pancakeSize')};\n    /* position: absolute; */\n    transition: 0.4s ease;\n    top: 2px;\n    left: 4px;\n    opacity: 0;\n  }\n\n  .butter {\n    width: ${getScale('butterWidth')};\n    height: ${getScale('butterHeight')};\n    background: #fbdb60;\n    top: ${getScale('butterTop')};\n    left: ${getScale('butterLeft')};\n    position: absolute;\n    border-radius: ${getScale('butterRadius')};\n    box-shadow: 0 ${getScale('butterThickness')} 0 ${getScale('butterThickness')} #d67823;\n    transform: scale(0);\n    transition: 0.2s ease;\n  }\n`\n\nexport const PancakeInput = styled.input<InputProps>`\n  height: 40px;\n  left: 0;\n  opacity: 0;\n  position: absolute;\n  top: 0;\n  width: 40px;\n\n  &:focus + label {\n    box-shadow: ${({ theme }) => theme.shadows.focus};\n  }\n\n  &:checked + label .pancakes {\n    transform: translateX(${getScale('travelDistance')});\n  }\n\n  &:checked + label .wagyu {\n    transition-delay: 0.2s;\n    opacity: 1;\n  }\n\n  &:checked + label .pancake {\n    transition-delay: 0.1s;\n    opacity: 0;\n  }\n`\n\nexport const PancakeLabel = styled.label<PancakeToggleProps>`\n  width: ${getScale('toggleWidth')};\n  height: ${getScale('toggleHeight')};\n  background: ${({ theme, checked }) => theme.colors[checked ? 'success' : 'input']};\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  display: inline-block;\n  border-radius: 50px;\n  position: relative;\n  transition: all 0.3s ease;\n  transform-origin: 20% center;\n  cursor: pointer;\n`\n","import React from 'react'\nimport { PancakeStack, PancakeInput, PancakeLabel } from './StyledPancakeToggle'\nimport { PancakeToggleProps, scales } from './types'\n\nconst PancakeToggle: React.FC<PancakeToggleProps> = ({ checked, scale = scales.LG, ...props }) => (\n  <PancakeStack scale={scale}>\n    <PancakeInput id={props.id || 'pancake-toggle'} scale={scale} type=\"checkbox\" checked={checked} {...props} />\n    <PancakeLabel scale={scale} checked={checked} htmlFor={props.id || 'pancake-toggle'}>\n      <div className=\"pancakes\">\n        <div className=\"pancake\" />\n        <img alt=\"tst\" className=\"wagyu\" src=\"/images/toggle/wagyu.png\" />\n      </div>\n    </PancakeLabel>\n  </PancakeStack>\n)\n\nexport default PancakeToggle\n","export const variants = {\n  ROUND: 'round',\n  FLAT: 'flat',\n} as const\n\nexport const scales = {\n  MD: 'md',\n  SM: 'sm',\n} as const\n\nexport type Scale = typeof scales[keyof typeof scales]\n\nexport type Variant = typeof variants[keyof typeof variants]\n\nexport interface ProgressProps {\n  variant?: Variant\n  scale?: Scale\n  primaryStep?: number\n  secondaryStep?: number\n  showProgressBunny?: boolean\n}\n","import { variants, scales } from './types'\n\nexport const styleVariants = {\n  [variants.ROUND]: {\n    borderRadius: '32px',\n  },\n  [variants.FLAT]: {\n    borderRadius: 0,\n  },\n}\n\nexport const styleScales = {\n  [scales.MD]: {\n    height: '16px',\n  },\n  [scales.SM]: {\n    height: '8px',\n  },\n}\n\nexport default styleVariants\n","import styled from 'styled-components'\nimport { space, variant as StyledSystemVariant } from 'styled-system'\nimport { styleVariants, styleScales } from './themes'\nimport { ProgressProps, variants } from './types'\n\ninterface BarProps {\n  primary?: boolean\n}\n\nexport const Bar = styled.div<BarProps>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  background-color: ${(props) => (props.primary ? props.theme.colors.secondary : `${props.theme.colors.secondary}80`)};\n  height: 100%;\n  transition: width 200ms ease;\n`\n\nBar.defaultProps = {\n  primary: false,\n}\n\ninterface StyledProgressProps {\n  variant: ProgressProps['variant']\n  scale: ProgressProps['scale']\n}\n\nconst StyledProgress = styled.div<StyledProgressProps>`\n  position: relative;\n  background-color: ${({ theme }) => theme.colors.input};\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  overflow: hidden;\n\n  ${Bar} {\n    border-top-left-radius: ${({ variant }) => (variant === variants.FLAT ? '0' : '32px')};\n    border-bottom-left-radius: ${({ variant }) => (variant === variants.FLAT ? '0' : '32px')};\n  }\n\n  ${StyledSystemVariant({\n    variants: styleVariants,\n  })}\n  ${StyledSystemVariant({\n    prop: 'scale',\n    variants: styleScales,\n  })}\n  ${space}\n`\n\nexport default StyledProgress\n","import styled from 'styled-components'\n\nconst ProgressBunnyWrapper = styled.div`\n  display: flex;\n  z-index: 2;\n  top: -65%;\n  position: absolute;\n  transform: translate(-50%, -50%);\n  transition: left 200ms ease-out;\n`\n\nexport default ProgressBunnyWrapper\n","import { SpaceProps } from 'styled-system'\n\nexport type RadioTheme = {\n  handleBackground: string\n}\n\nexport const scales = {\n  SM: 'sm',\n  MD: 'md',\n} as const\n\nexport type Scales = typeof scales[keyof typeof scales]\n\nexport interface RadioProps extends SpaceProps {\n  scale?: Scales\n}\n","import styled from 'styled-components'\nimport { space } from 'styled-system'\nimport { RadioProps, scales } from './types'\n\nconst getScale = ({ scale }: RadioProps) => {\n  switch (scale) {\n    case scales.SM:\n      return '24px'\n    case scales.MD:\n    default:\n      return '32px'\n  }\n}\n\nconst getCheckedScale = ({ scale }: RadioProps) => {\n  switch (scale) {\n    case scales.SM:\n      return '12px'\n    case scales.MD:\n    default:\n      return '20px'\n  }\n}\n\nconst Radio = styled.input.attrs({ type: 'radio' })<RadioProps>`\n  appearance: none;\n  overflow: hidden;\n  cursor: pointer;\n  position: relative;\n  display: inline-block;\n  height: ${getScale};\n  width: ${getScale};\n  vertical-align: middle;\n  transition: background-color 0.2s ease-in-out;\n  border: 0;\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.colors.input};\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n\n  &:after {\n    border-radius: 50%;\n    content: '';\n    height: ${getCheckedScale};\n    left: 6px;\n    position: absolute;\n    top: 6px;\n    width: ${getCheckedScale};\n  }\n\n  &:hover:not(:disabled):not(:checked) {\n    box-shadow: ${({ theme }) => theme.shadows.focus};\n  }\n\n  &:focus {\n    outline: none;\n    box-shadow: ${({ theme }) => theme.shadows.focus};\n  }\n\n  &:checked {\n    background-color: ${({ theme }) => theme.colors.success};\n    &:after {\n      background-color: ${({ theme }) => theme.radio.handleBackground};\n    }\n  }\n\n  &:disabled {\n    cursor: default;\n    opacity: 0.6;\n  }\n  ${space}\n`\n\nRadio.defaultProps = {\n  scale: scales.MD,\n  m: 0,\n}\n\nexport default Radio\n","import { InputHTMLAttributes } from 'react'\nimport styled from 'styled-components'\nimport Text from '../Text/Text'\nimport bunnyHeadMain from './svg/bunnyhead-main.svg'\nimport bunnyHeadMax from './svg/bunnyhead-max.svg'\nimport bunnyButt from './svg/bunnybutt.svg'\n\ninterface SliderLabelProps {\n  progress: string\n}\n\ninterface StyledInputProps extends InputHTMLAttributes<HTMLInputElement> {\n  isMax: boolean\n}\n\ninterface DisabledProp {\n  disabled?: boolean\n}\n\nconst getCursorStyle = ({ disabled = false }: DisabledProp) => {\n  return disabled ? 'not-allowed' : 'cursor'\n}\n\nconst getBaseThumbStyles = ({ isMax, disabled }: StyledInputProps) => `\n  -webkit-appearance: none;\n  background-image: url(/images/knife/knife-right.png);\n  background-size: contain;\n  background-repeat: no-repeat;\n  background-color: transparent;\n  background-position: right;\n  border: 0;\n  cursor: ${getCursorStyle};\n  width: 10px;\n  height: 32px;\n  filter: ${disabled ? 'grayscale(100%)' : 'none'};\n  transform: translate(-2px, -2px);\n  transition: 200ms transform;\n\n  &:hover {\n    transform: ${disabled ? 'scale(1) translate(-2px, -2px)' : 'scale(1.1) translate(-3px, -3px)'};\n  }\n`\n\nexport const SliderLabelContainer = styled.div`\n  bottom: 0;\n  position: absolute;\n  left: 14px;\n  width: calc(100% - 30px);\n`\n\nexport const SliderLabel = styled(Text)<SliderLabelProps>`\n  bottom: 0;\n  font-size: 12px;\n  left: ${({ progress }) => progress};\n  position: absolute;\n  text-align: center;\n  min-width: 24px; // Slider thumb size\n`\n\nexport const BunnyButt = styled.div<DisabledProp>`\n  background: url(/images/knife/knife-left.png) no-repeat;\n  height: 32px;\n  filter: ${({ disabled }) => (disabled ? 'grayscale(100%)' : 'none')};\n  position: absolute;\n  width: 12px;\n  background-size: contain;\n  background-position: right;\n`\n\nexport const BunnySlider = styled.div`\n  position: absolute;\n  left: 12px;\n  width: calc(100% - 14px);\n`\n\nexport const StyledInput = styled.input<StyledInputProps>`\n  cursor: ${getCursorStyle};\n  height: 32px;\n  position: relative;\n\n  ::-webkit-slider-thumb {\n    ${getBaseThumbStyles}\n  }\n\n  ::-moz-range-thumb {\n    ${getBaseThumbStyles}\n  }\n\n  ::-ms-thumb {\n    ${getBaseThumbStyles}\n  }\n`\n\nexport const BarBackground = styled.div<DisabledProp>`\n  background-color: ${({ theme, disabled }) => theme.colors[disabled ? 'textDisabled' : 'inputSecondary']};\n  height: 2px;\n  position: absolute;\n  top: 18px;\n  width: 100%;\n`\n\nexport const BarProgress = styled.div<DisabledProp>`\n  background-color: ${({ theme }) => theme.colors.primary};\n  filter: ${({ disabled }) => (disabled ? 'grayscale(100%)' : 'none')};\n  height: 10px;\n  position: absolute;\n  top: 18px;\n`\n","import React, { ChangeEvent } from 'react'\nimport { Box } from '../Box'\nimport {\n  BunnySlider,\n  BarBackground,\n  BarProgress,\n  BunnyButt,\n  StyledInput,\n  SliderLabel,\n  SliderLabelContainer,\n} from './styles'\nimport SliderProps from './types'\n\nconst Slider: React.FC<SliderProps> = ({\n  name,\n  min,\n  max,\n  value,\n  onValueChanged,\n  valueLabel,\n  step = 'any',\n  disabled = false,\n  ...props\n}) => {\n  const handleChange = ({ target }: ChangeEvent<HTMLInputElement>) => {\n    onValueChanged(parseFloat(target.value))\n  }\n\n  const progressPercentage = (value / max) * 100\n  const isMax = value === max\n  let progressWidth: string\n  if (progressPercentage <= 10) {\n    progressWidth = `${progressPercentage + 0.1}%`\n  } else if (progressPercentage >= 90) {\n    progressWidth = `${progressPercentage - 2}%`\n  } else if (progressPercentage >= 60) {\n    progressWidth = `${progressPercentage - 1.5}%`\n  } else {\n    progressWidth = `${progressPercentage}%`\n  }\n  const labelProgress = isMax ? 'calc(100% - 12px)' : `${progressPercentage}%`\n  const displayValueLabel = isMax ? 'MAX' : valueLabel\n  return (\n    <Box position=\"relative\" height=\"48px\" {...props}>\n      <BunnyButt disabled={disabled} />\n      <BunnySlider>\n        <BarBackground disabled={disabled} />\n        <BarProgress style={{ width: progressWidth }} disabled={disabled} />\n        <StyledInput\n          name={name}\n          type=\"range\"\n          min={min}\n          max={max}\n          value={value}\n          step={step}\n          onChange={handleChange}\n          isMax={isMax}\n          disabled={disabled}\n        />\n      </BunnySlider>\n      {valueLabel && (\n        <SliderLabelContainer>\n          <SliderLabel progress={labelProgress}>{displayValueLabel}</SliderLabel>\n        </SliderLabelContainer>\n      )}\n    </Box>\n  )\n}\n\nexport default Slider\n","import { LayoutProps, SpaceProps } from 'styled-system'\n\nexport const animation = {\n  WAVES: 'waves',\n  PULSE: 'pulse',\n} as const\n\nexport const variant = {\n  RECT: 'rect',\n  CIRCLE: 'circle',\n} as const\n\nexport type Animation = typeof animation[keyof typeof animation]\nexport type Variant = typeof variant[keyof typeof variant]\n\nexport interface SkeletonProps extends SpaceProps, LayoutProps {\n  animation?: Animation\n  variant?: Variant\n}\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport { space, layout } from 'styled-system'\nimport { SkeletonProps, animation as ANIMATION, variant as VARIANT } from './types'\n\nconst waves = keyframes`\n   from {\n        left: -150px;\n    }\n    to   {\n        left: 100%;\n    }\n`\n\nconst pulse = keyframes`\n  0% {\n    opacity: 1;\n  }\n  50% {\n    opacity: 0.4;\n  }\n  100% {\n    opacity: 1;\n  }\n`\n\nconst Root = styled.div<SkeletonProps>`\n  min-height: 20px;\n  display: block;\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  border-radius: ${({ variant, theme }) => (variant === VARIANT.CIRCLE ? theme.radii.circle : theme.radii.small)};\n\n  ${layout}\n  ${space}\n`\n\nconst Pulse = styled(Root)`\n  animation: ${pulse} 2s infinite ease-out;\n  transform: translate3d(0, 0, 0);\n`\n\nconst Waves = styled(Root)`\n  position: relative;\n  overflow: hidden;\n  transform: translate3d(0, 0, 0);\n  &:before {\n    content: '';\n    position: absolute;\n    background-image: linear-gradient(90deg, transparent, rgba(243, 243, 243, 0.5), transparent);\n    top: 0;\n    left: -150px;\n    height: 100%;\n    width: 150px;\n    animation: ${waves} 2s cubic-bezier(0.4, 0, 0.2, 1) infinite;\n  }\n`\n\nconst Skeleton: React.FC<SkeletonProps> = ({ variant = VARIANT.RECT, animation = ANIMATION.PULSE, ...props }) => {\n  if (animation === ANIMATION.WAVES) {\n    return <Waves variant={variant} {...props} />\n  }\n\n  return <Pulse variant={variant} {...props} />\n}\n\nexport default Skeleton\n","import React from 'react'\nimport Svg from '../Svg/Svg'\nimport { SvgProps } from '../Svg/types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 805.13 392.17\" {...props}>\n      <g id=\"Laag_2\" data-name=\"Laag 2\">\n        <g id=\"Layer_1\" data-name=\"Layer 1\">\n          <path\n            fill=\"#595c7f\"\n            d=\"M622.16,356.41s-55.39,26.42-105.1,35.74L267.28,321.33s-88.65-51.06-108.4-139.59C139.61,95.43,153,37.33,153,37.33s93.66,44.2,280.58,65.82c132.95,15.38,371.52-.4,371.52-.4s-22.74,73.66-80.53,154.78C668.73,336,622.16,356.41,622.16,356.41Z\"\n          />\n          <path\n            fill=\"#838aa3\"\n            d=\"M661.16,150.34C651,152.61,524.31,176.83,353,161.1S-4.63,66.36.09,62.42C52.05,19,165.61,1.48,165.61,1.48S295.4-7.27,505,17.82c195.17,23.37,300.13,84.93,300.13,84.93S715.1,138.31,661.16,150.34Z\"\n          />\n          <path\n            fill=\"#bbc1d2\"\n            opacity=\"0.4\"\n            d=\"M744,75.62c0-.21.05-.42.07-.64C693.89,55.53,613.35,30.79,505,17.82,295.4-7.27,165.61,1.48,165.61,1.48S52.05,19,.09,62.42C-2.69,64.74,60.78,93.08,148.4,119.2q21.53,2.3,43.56,4.33C488.83,150.8,736,129.35,744,75.62Z\"\n          />\n          <path\n            fill=\"#595c7f\"\n            d=\"M517.06,392.15l-196-18c-36.87-3.39-148.44-19.57-148.44-19.57S99.17,303.05,54.71,220.22C3.89,125.56.09,62.42.09,62.42s177.26,58.23,364.17,79.86c133,15.37,303.6,6.49,303.6,6.49S660.57,209.13,595,302C547.05,369.84,517.06,392.15,517.06,392.15Z\"\n          />\n          <path\n            fill=\"#58486c\"\n            d=\"M190.81,11.36S93.51,24,47.65,57.23c70.6,27,200.9,52.71,351.9,66.58,84.14,7.73,163.11,10.72,229.81,9.53,47.36-9.27,125.19-36.48,125.19-36.48S661.45,47.15,489.5,27C304.85,5.45,190.81,11.36,190.81,11.36Z\"\n          />\n          <path\n            fill=\"#443757\"\n            d=\"M185.41,47.46s114-5.92,298.7,15.68C585.9,75,660.06,97.32,703.63,113.52c28.28-8.75,50.92-16.66,50.92-16.66S661.45,47.15,489.5,27C304.85,5.45,190.81,11.36,190.81,11.36S93.51,24,47.65,57.23C59.49,61.76,73,66.26,88,70.67,133.79,54.18,185.41,47.46,185.41,47.46Z\"\n          />\n          <path\n            fill=\"#868ca7\"\n            opacity=\"0.6\"\n            d=\"M364.26,142.29C258,130,154.81,105.87,85.59,87.34a208.66,208.66,0,0,0-11,42.27c-13.05,87.33,31.89,170.09,112.06,227,31.14,4.44,105.6,14.91,134.41,17.55l196,18S547,369.86,595,302c65.6-92.87,72.89-153.23,72.89-153.23S497.21,157.67,364.26,142.29Z\"\n          />\n          <path\n            fill=\"#9da4ba\"\n            d=\"M667.85,148.84s-170.65,8.89-303.6-6.49c-70.49-8.15-139.6-21.52-198.36-35a147.55,147.55,0,0,0-3.29,16c-16.27,108.83,92.27,208.24,242.42,222,65.73,6,128.53-5.33,179.74-29.14q5-6.72,10.2-14.13C660.56,209.2,667.85,148.84,667.85,148.84Z\"\n          />\n          <path\n            fill=\"#1a1a1a\"\n            d=\"M668.09,124c5.7-1.58,14.81-4.32,20.46-6-35-8.34-84-17.63-157.32-29.3C453.42,76.3,381.36,58,353.61,55.77c-10-.8-15.25,2.19-11.48,6C345.45,65,426.1,79,532,99.7,594.75,112,630.51,119,668.09,124Z\"\n          />\n          <path\n            fill=\"#1a1a1a\"\n            d=\"M431.05,93.19C351.41,79.07,278.21,59.26,252.41,57.38c-8.36-.61-13,2-9.63,5.56,3.22,3.37,78.6,19.85,188.75,41.29,70.11,13.65,123.21,24.18,159,29.49,8.46.05,24.58-.2,32.71-.28C604.44,126.33,523.46,109.57,431.05,93.19Z\"\n          />\n          <path\n            fill=\"#1a1a1a\"\n            d=\"M346.93,104C267.09,86.78,194.18,63.36,169.55,61c-7.51-.71-11.92,2.42-8.9,5.91s81.89,25.61,186.1,48.13c20.58,4.44,13.69,2.58,32.7,6.8,1.14.1,45,4.32,65.49,5.68C410,118.63,393.18,114,346.93,104Z\"\n          />\n          <path\n            fill=\"#bebebe\"\n            d=\"M277.77,129.18c-44.1-6.91-90.3-17.19-134.69-27.34,47.43,15.45,99.28,29.23,150.34,37.24,123.52,19.37,214.72,16,265.46,12.25C493,152.28,401.66,148.62,277.77,129.18Z\"\n          />\n          <path\n            fill=\"#b74145\"\n            d=\"M593.71,62.3c-.44-1.17-5-.5-10.24,1.48s-9.07,4.55-8.63,5.72c.13.32.56.5,1.23.56a18.84,18.84,0,0,0,7.33.72c4.51-.26,8.11-1.39,8.05-2.53,0-.69-1.38-1.22-3.41-1.48C591.68,65.06,594.07,63.24,593.71,62.3Z\"\n          />\n          <path\n            fill=\"#e08778\"\n            d=\"M600,84.82c-5.86-4.33-10.44,2.8-17.44,6.24-5,2.46-11.33,1.14-12.73-5.09-2-8.83,13.43-17.53,7.64-18-13.88-1-22.79,9.54-22.79,20.36s7.9,22.93,22.57,22.54C601,110.28,608.7,91.26,600,84.82Z\"\n          />\n          <path\n            fill=\"#d5806f\"\n            d=\"M600,84.82a8.46,8.46,0,0,0-1-.63c.06,8-8.72,18.49-26.22,19A20.91,20.91,0,0,1,556,96.06c2.79,8.15,10,15.16,21.27,14.86C601,110.28,608.7,91.26,600,84.82Z\"\n          />\n          <path\n            fill=\"#b74145\"\n            d=\"M590,95.86a25.49,25.49,0,0,1-1.7-8.47c-1.26.91-2.69,1.89-4.09,2.78a26.24,26.24,0,0,0,1.75,7.25,24.05,24.05,0,0,0,6.72,9.74A26.48,26.48,0,0,0,596,105,24.84,24.84,0,0,1,590,95.86Z\"\n          />\n          <path\n            fill=\"#b74145\"\n            d=\"M576.42,99a26.34,26.34,0,0,1,.23-6.79,9.52,9.52,0,0,1-3.95-1.51,25.23,25.23,0,0,0-.58,8.75,24.2,24.2,0,0,0,4.12,11.51c.32,0,.44,0,1,0a31.94,31.94,0,0,0,3.61-.3A24.19,24.19,0,0,1,576.42,99Z\"\n          />\n          <path\n            fill=\"#b74145\"\n            d=\"M558.41,95.32a26.14,26.14,0,0,0-1,4.06,20.38,20.38,0,0,0,3.83,5.33,26.59,26.59,0,0,1,1.28-8,24.1,24.1,0,0,1,7.28-10.82c0-.06-.06-.32-.07-.38a9.67,9.67,0,0,1,.39-4C565.23,83.76,560.55,88.87,558.41,95.32Z\"\n          />\n          <path\n            fill=\"#b74145\"\n            d=\"M561,81.48A24.33,24.33,0,0,1,571.25,79a31.46,31.46,0,0,1,2.65-3.8,23.42,23.42,0,0,0-14.64,2.13c-.7.35-1.31.65-2,1.05a22.73,22.73,0,0,0-2.5,7.37A25.33,25.33,0,0,1,561,81.48Z\"\n          />\n          <path\n            fill=\"#dfc2c2\"\n            d=\"M583,95.94c1,1.68,4.44,1.49,7.66-.45s5-4.86,4-6.55-4.44-1.49-7.66.44S582,94.25,583,95.94Z\"\n          />\n          <path\n            fill=\"#b74145\"\n            d=\"M224.93,32.63c-.53-1.14-5.06-.17-10.12,2.16s-8.74,5.16-8.22,6.29c.14.31.59.47,1.26.48a18.88,18.88,0,0,0,7.37.22c4.48-.56,8-1.93,7.85-3.07-.09-.68-1.45-1.12-3.49-1.25C223.08,35.51,225.35,33.53,224.93,32.63Z\"\n          />\n          <path\n            fill=\"#e08778\"\n            d=\"M232.72,54.66c-6.14-3.92-10.23,3.51-17,7.41-4.83,2.79-11.23,1.91-13.05-4.22-2.57-8.67,12.21-18.39,6.41-18.42-13.92-.08-22.09,11.06-21.36,21.86s9.44,22.34,24,20.95C235.46,80,241.84,60.49,232.72,54.66Z\"\n          />\n          <path\n            fill=\"#d5806f\"\n            d=\"M232.72,54.66a8,8,0,0,0-1-.55c.62,8-7.43,19-24.87,20.69a20.93,20.93,0,0,1-17.26-5.94c3.34,8,11.06,14.45,22.23,13.38C235.46,80,241.84,60.49,232.72,54.66Z\"\n          />\n          <path\n            fill=\"#b74145\"\n            d=\"M223.48,66.36A25.61,25.61,0,0,1,221.21,58c-1.19,1-2.55,2.07-3.89,3a25.63,25.63,0,0,0,2.24,7.12,24,24,0,0,0,7.37,9.26,26.12,26.12,0,0,0,3.22-2.39A24.69,24.69,0,0,1,223.48,66.36Z\"\n          />\n          <path\n            fill=\"#b74145\"\n            d=\"M210.17,70.37a25.58,25.58,0,0,1-.24-6.79,9.51,9.51,0,0,1-4-1.24,25.32,25.32,0,0,0,0,8.77,24.08,24.08,0,0,0,4.9,11.21c.31,0,.43,0,1,0a33.48,33.48,0,0,0,3.58-.54A24,24,0,0,1,210.17,70.37Z\"\n          />\n          <path\n            fill=\"#b74145\"\n            d=\"M192,68a26.21,26.21,0,0,0-.73,4.12,20.77,20.77,0,0,0,4.19,5.06,26.61,26.61,0,0,1,.73-8.1,24.12,24.12,0,0,1,6.52-11.29c0-.06-.07-.31-.09-.38a9.52,9.52,0,0,1,.13-4C198,56,193.64,61.38,192,68Z\"\n          />\n          <path\n            fill=\"#b74145\"\n            d=\"M193.59,54a24.59,24.59,0,0,1,10.06-3.15,31.07,31.07,0,0,1,2.39-4A23.34,23.34,0,0,0,191.57,50c-.67.39-1.25.73-1.88,1.17a23.16,23.16,0,0,0-2,7.53A25.69,25.69,0,0,1,193.59,54Z\"\n          />\n          <path\n            fill=\"#dfc2c2\"\n            d=\"M216.52,66.91c1.13,1.61,4.53,1.18,7.61-1s4.66-5.2,3.53-6.81-4.53-1.19-7.61,1S215.39,65.29,216.52,66.91Z\"\n          />\n          <path\n            fill=\"#b74145\"\n            d=\"M657.8,96.38c.87-.9-1.65-4.79-5.63-8.69s-7.92-6.35-8.79-5.45c-.24.24-.23.71,0,1.35a18.75,18.75,0,0,0,2.41,7c2.11,4,4.65,6.79,5.66,6.25.6-.32.53-1.76-.08-3.71C654.44,95.68,657.1,97.09,657.8,96.38Z\"\n          />\n          <path\n            fill=\"#e08778\"\n            d=\"M640,111.49c1.49-7.13-6.9-8.32-13-13.25-4.33-3.52-5.78-9.81-.69-13.69,7.19-5.49,21.53,4.88,19.5-.56-4.88-13-18.19-16.71-28-12.19s-17.53,16.75-11,29.92C617.25,123,637.75,122.08,640,111.49Z\"\n          />\n          <path\n            fill=\"#d5806f\"\n            d=\"M640,111.49a7.16,7.16,0,0,0,.16-1.16c-7.28,3.42-20.44-.19-28.18-15.9a20.94,20.94,0,0,1-.58-18.25c-6.24,5.95-9.57,15.47-4.61,25.54C617.25,123,637.75,122.08,640,111.49Z\"\n          />\n          <path\n            fill=\"#b74145\"\n            d=\"M625.75,107a25.46,25.46,0,0,1,7-5.08c-1.35-.76-2.84-1.65-4.23-2.56a26.53,26.53,0,0,0-5.86,4.62,24,24,0,0,0-6,10.18,25.22,25.22,0,0,0,3.37,2.17A24.62,24.62,0,0,1,625.75,107Z\"\n          />\n          <path\n            fill=\"#b74145\"\n            d=\"M617.27,96a26.07,26.07,0,0,1,6.27-2.63,9.36,9.36,0,0,1-.28-4.22,25.15,25.15,0,0,0-8.2,3.13,24.16,24.16,0,0,0-8.74,8.55c.13.29.15.41.41,1a30.85,30.85,0,0,0,1.78,3.16A24.1,24.1,0,0,1,617.27,96Z\"\n          />\n          <path\n            fill=\"#b74145\"\n            d=\"M613.06,78.09a27.05,27.05,0,0,0-4.12.79,20.46,20.46,0,0,0-3.24,5.71,27,27,0,0,1,7.83-2.2,24.08,24.08,0,0,1,12.87,2.1l.32-.23A10,10,0,0,1,630.48,83C626.41,79.46,619.8,77.34,613.06,78.09Z\"\n          />\n          <path\n            fill=\"#b74145\"\n            d=\"M626.71,74.66A24.46,24.46,0,0,1,633.23,83a31.66,31.66,0,0,1,4.55.82,23.26,23.26,0,0,0-8-12.41A20.08,20.08,0,0,0,628,70a22.9,22.9,0,0,0-7.74.8A25.54,25.54,0,0,1,626.71,74.66Z\"\n          />\n          <path\n            fill=\"#dfc2c2\"\n            d=\"M622.76,100.69c-1.11,1.63.5,4.66,3.6,6.77s6.51,2.51,7.62.89-.5-4.66-3.6-6.77S623.87,99.06,622.76,100.69Z\"\n          />\n        </g>\n      </g>\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../Svg/Svg'\nimport { SvgProps } from '../Svg/types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 319.73 122.7\" {...props}>\n      <g id=\"Laag_2\" data-name=\"Laag 2\">\n        <g id=\"Layer_1\" data-name=\"Layer 1\">\n          <path\n            fill=\"#ead8d4\"\n            d=\"M302.36,100.89c-4.66,3.6-68.38,30.73-206.72,18.8-39.29-3.39-68.35-15.25-79-26.39C-9,66.56,1.22,35,6.76,25.73,13.57,14.37,28.55,3.76,46.5.86,87-5.69,144.13,27,185.78,35.9c24.18,5.16,70.92-4.52,80.39-4.15,32.24,1.26,44.37,11.63,47.51,17.47C322.17,65.05,324.4,83.81,302.36,100.89Z\"\n          />\n          <path\n            fill=\"#fff0e9\"\n            d=\"M301.56,39.83c13.89,4.5,33.93,28.91-49.73,45-17.07,3.29-100.43,15.69-172.63-.19C1.87,67.67,8.33,43.39,10.75,33.09c3-12.76,28.42-35.53,69.8-26.32,40.47,9,60.82,28.47,96.41,34.5C207.81,46.5,263.05,27.34,301.56,39.83Z\"\n          />\n          <path\n            fill=\"#df4561\"\n            d=\"M293.69,41.12c12.58,5.77,32.52,26.42-47.88,40.69C229.4,84.73,148.91,97.68,80,80.87,9.37,63.65,13.3,42.5,15.65,33.15,18.56,21.58,41.74,1.54,81.46,10.09c38.85,8.37,58.36,26.15,92.54,31.78C203.62,46.76,272.06,31.2,293.69,41.12Z\"\n          />\n          <path\n            fill=\"#8c374b\"\n            opacity=\"0.2\"\n            d=\"M31.65,20c-1.82,3-2.43,5.7.39,7.86,4.52,3.48,8.72,4,15.8,3.05a10.56,10.56,0,0,0,1.73-.4h0c1.66,1,6.57,3.16,10.53,2,11.27-3.18,14.18-15.75,7.35-23.19-.17-.2-.6-.64-1.24-1.26-2-.09-4-.1-5.86,0,3.19,6,3.09,12.4.56,16.53s-6.95,4.89-9.57,5.2c6.54-3.22,11.42-12.42,4-21.4a68.11,68.11,0,0,0-7.24,1.14c3.33,2.64,6.53,7.46,5.29,11.83-1.88,6.59-12.31,7.32-14.91,4.46-4.21-4.63,5.14-3.35,6.28-9.2.28-1.47-.64-4-1.17-5.95a59.41,59.41,0,0,0-6.83,2.46c-.84,1.09-1.72,2.18-2.57,3.25-.91,0-2.06-.07-3.39-.2-1.17.7-2.26,1.42-3.3,2.16C29,18.84,30.39,19.45,31.65,20Z\"\n          />\n          <path\n            fill=\"#cd465a\"\n            d=\"M305.43,53.82a41.21,41.21,0,0,1-5.38.51c-12.62.11-18.76-5.86-10.24-11.28a23.57,23.57,0,0,1,3.88-2,33,33,0,0,0-8.29-2.33c-.87,1-1.69,2.24-2.6,3.59-2.66,4-16-1.94-21.17-4.47l-1.27,0c3.36,2.52,15.34,7.8,12.55,9.58-4.69,3,24.21,9.29,27.95,13.14.41.42.83.82,1.26,1.22C304.73,59.06,305.63,56.34,305.43,53.82Z\"\n          />\n          <path\n            fill=\"#f4c4ab\"\n            opacity=\"0.2\"\n            d=\"M191.08,80c3.08.54,6.13,1.47,7.09,1.27s1.22-1.25,0-2.22c-1.77-1.42-8.76-3.28-14.33-2.36-1.09.19-2.21,1.45-.61,2.08C184.14,79.17,187.64,79.43,191.08,80Z\"\n          />\n          <path\n            fill=\"#cd465a\"\n            d=\"M251,49.53c2.1.67,8.84,2.64,12.15,3.86,6.81,2.53,15.63,7.72,16.59,7.53s-4.43-5.2-11.85-8.68c-2.11-1-10.72-5.72-16.28-4.79C250.51,47.63,249.36,49,251,49.53Z\"\n          />\n          <path\n            fill=\"#cd465a\"\n            d=\"M117.27,61.85c.56.71,2.08,1.5,4.75,3.62,2.39,1.9,4.37,3.38,5.38,3.71s2.91-.44,2.5-1.74c-.6-1.9-5-4.78-10.63-6.81C118.16,60.23,116.28,60.61,117.27,61.85Z\"\n          />\n          <path\n            fill=\"#cd465a\"\n            d=\"M178.61,83.27c-5-3.8-8.68-3.83-11.24-6.76-2.28-2.61-4.78-8.85-8.93-9.84-3.85-.91-6.23-1.81-9.89-1.72-5.22.14-9.62,4.48-7.4,7.08C144,75.38,142.5,80.81,147,82.3c.85.28,4.65,3.17,8,7,2.84,0,5.66,0,8.44,0-2.85-1.54-10.68-4.8-13.05-8.69a15.16,15.16,0,0,0-1-4.43c-1.72-3.88-4.94-5.49-1.75-7.47,1.18-.74,1.9-2.09,3.86-1.63,2.36.57,6.05,3.22,8.49,5.31,4.93,4.24,4.31,11.86,8.7,13.37A29.14,29.14,0,0,1,175.38,89q4.59-.17,9-.4A73.65,73.65,0,0,0,178.61,83.27Z\"\n          />\n          <path\n            fill=\"#cd465a\"\n            d=\"M263,75.16c-.57-.45-9.18-10.47-22.23-10.39-1.14,0,9.95,3.75,14.21,7.17a21.63,21.63,0,0,1,5.84,6.88c1.45-.32,2.85-.65,4.21-1A14.62,14.62,0,0,0,263,75.16Z\"\n          />\n          <path\n            fill=\"#f4c4ab\"\n            opacity=\"0.2\"\n            d=\"M79.81,61.33c-.76.58-.51,1.83.56,2.78s2.55,1.25,3.32.67.51-1.84-.56-2.79S80.57,60.74,79.81,61.33Z\"\n          />\n          <path\n            fill=\"#8c374b\"\n            opacity=\"0.2\"\n            d=\"M250,50.45c-7.82-2.41-7.25-8.78-10.13-11.08l-4.19.36c1.29,2.2,2.85,4.85,2.16,5.89-1,1.48-6,2.19-12.25-.21C222,44,217.94,42.7,214.37,41.59l-5.15.39c7.37,1.65,26.5,10.18,26.65,9.94,5.62,1.86,10.55.71,13.49,1.08,11.7,1.45,26.21,10.51,29.83,14.36a49.12,49.12,0,0,1,4.26,5.11q4-1.45,7.12-2.92C278.52,58.12,258.66,53.1,250,50.45Z\"\n          />\n          <path\n            fill=\"#8c374b\"\n            opacity=\"0.2\"\n            d=\"M220.69,79.44c2-1.42,15.59,2.68,18.48-3,3.63-7.19-14.34-12.16-12.52-15,.77-1.2,7.64,1.91,8.3.71.42-.78-1.36-1.54-3.8-2.31.59,0,1-.13,1-.41,1.48-6.22-24.67-13.38-25.8-17a.52.52,0,0,1,0-.21c-3.64.25-7.19.44-10.59.56,10.48,3.46,25.73,8.84,23.52,13.53,0,.06.16.18.5.35a5.65,5.65,0,0,1-3.36,1c-6.5.28-22.54-8.46-24.62-8.63-6.39-.54-9.28,1.21-11.1,1.09-4.49-.29-6-6.08-18.75-8.82-29.6-6.4-22.34,5.84-36,5-.7-.35-5.66-2.8-5.28-4.49.78-3.55,8.58-7,18.22-7.28a57.39,57.39,0,0,1,12.87,1.64C145.67,34,139.85,31.57,134,29c-9.17-.38-13.29,2.19-14.35,3-3.85,3.08-1.09,7.26-4.33,8.65a10.24,10.24,0,0,1-1.14.39c.07-2.58-8.9-9.79-3.33-13.63,2.23-1.53,6.79-2.71,11.13-3.73q-2.77-1.21-5.64-2.4C111.05,22.45,105,24,99.2,25.65c-2.61.75-11.18-2.78-11-6.22a8.37,8.37,0,0,1,4.14-6.61c-3.47-1-7.08-1.89-10.88-2.71-2.44-.52-4.81-.93-7.12-1.25-.53,2.53-.82,4.8,1.34,6.37C86,22.68,92.09,28.12,90.49,29.71c-1.28,1.27-19.06.62-28.75,4.82C56.09,37,51.26,40.86,52.52,45.94c.32,1.32-7.67.62-14.18-.88C22.69,41.45,20,31.3,19.76,25.59a23,23,0,0,0-3.61,6.07,23,23,0,0,0-.23,6.93A49.17,49.17,0,0,0,21.34,55c4.8,5.06,12.82,10.42,25.94,15.72C36.47,60.29,33.51,52,36.64,49.57c2.64-2.06,15.69-1.33,19.07.59C63.65,54.68,60,64.83,68.44,71.08,70,72.26,83.33,77.92,90.5,83.21q5.09,1,10.21,1.83C93.4,81,82,75,75.38,70.83,67,65.52,58.91,46.38,72.08,39.9c8.32-4.1,23-8.18,29.65-6.39,12.19,3.29,6.57,8,6,8.42a9,9,0,0,0-6.66,4.66c-2.55,4.23-4,12.27,2.5,14.23,4.74,1.41,1.25,8.32,7.2,14.17,3.57,3.5,24.53,13.4,31.1,14.12l.34,0c4.69.27,9.19.28,9.19.28a84.48,84.48,0,0,0-12.8-5.33c-7-2-21.36-8.48-22.39-10.1-3.67-5.74-.71-8.16-4.57-10.45-3-1.81-7.87-11.63-.64-14.92,5.49-2.49,21.41.81,23.88,4.24.82,1.13-1.44,5.57,2.77,7.33,13.91,5.8,5.4-5.43,2.15-9-.5-1.26-3.52-4.9,1.31-7.14,7.63-3.53,20.76-.1,22,.44,14.29,6.31,10.9,8.52,14.38,11.54C182,60,206.13,67.45,209.2,70.6c5.7,5.86,4.57,13-1.86,14.22-6.68,1.22-24.14-2.41-23.53-.88.33.86,4.5,2.64,10,4.14,10.81-.76,20.54-1.77,28.71-2.79C222.45,82.77,219.46,80.33,220.69,79.44Zm-33.94-23c-4-3.06.92-5.88,4.34-5C207,55.27,227.18,64.57,230.7,69.87c2.41,3.62.74,6.26-2.72,5.94C221.4,75.18,191,59.7,186.75,56.43Z\"\n          />\n          <path\n            fill=\"#dec4c2\"\n            d=\"M101.06,105.17c-40.77-3.52-70.9-15.47-82-26.64C5.79,65.07,1.84,50.41,1.94,38-1.69,52.11-1.9,74,16.62,93.3c10.67,11.14,39.73,23,79,26.39,138.34,11.93,202.06-15.2,206.72-18.8a50.63,50.63,0,0,0,12.43-13.35C305.7,92.59,239.24,117.09,101.06,105.17Z\"\n          />\n          <path\n            fill=\"#d1aeaf\"\n            d=\"M306.85,93.44c-4.73,3.6-69.54,30.64-210.19,18.5C56.71,108.5,27.18,96.6,16.34,85.45,6,74.84,1.43,63.47,0,53,0,65.4,3.86,79.92,16.62,93.24c10.66,11.13,39.72,23,79,26.38,138.34,11.93,202.06-15.2,206.71-18.8,7-5.42,11.53-11,14.22-16.62A56,56,0,0,1,306.85,93.44Z\"\n          />\n          <path\n            fill=\"#fff0e9\"\n            d=\"M305.49,53.79h0c-.5-5.71-6.7-10.4-11.73-12.71l-.06,0,.06,0a30.21,30.21,0,0,0-7.91-2.28s-.4,0-.42,0c-1.3-.21-2.69-.38-4.13-.52-4.26,0-56.57,14.69-62.47,19-3.15,2.28-3.77,6.53-3.77,6.53s3.57-3,12.21-6.28c12.57-4.8,33-10.71,44.82-12.67,32.35-5.34,30.08,9.61,18.15,16.27-6.41,3.57-19.59,2.74-24.89,3.2C210.52,68.9,217.79,85.9,217.84,86h0l14.79-1.87a1.85,1.85,0,0,1,0-.23S237.55,71,255,68.34c7.69-1.16,25.43-.56,39.93-5a23,23,0,0,0,10.62-6.51,8.34,8.34,0,0,0,.5-3.47S305.49,53.83,305.49,53.79Z\"\n          />\n          <path\n            fill=\"#fff0e9\"\n            d=\"M261.78,37.88l-.09-.05-1.28.06.07,0c-5.88.25-11,.11-17.4.63-15.79,5.11-37,22.81-37,22.81s5.23-8.15,1.19-15.34a15.92,15.92,0,0,0-2.94-3.76c-11.71.72-22.3.87-30.17-.4,1.74.25,20.67,3.21,26.82,10.46,9.22,10.88-4,15-5.16,15.33-14.12,3.81-23.76-3.92-44.74-6.83-1.94,1.17-1,4.24-3.14,5.29C175.89,75,181.87,84.56,180.7,89c3.67-.16,7.3-.4,10.77-.62,4.87-5.74,15.67-17.88,24.28-25.24,17.32-14.8,49.43-26,49.63-26.11C264.47,37,262.71,37.85,261.78,37.88Z\"\n          />\n          <path\n            fill=\"#fff0e9\"\n            d=\"M164.29,63.35C158.4,62,139.13,57.13,133.15,54c-10.26-5.41-20.36-21.36-44.83-24.33C77.74,28.35,68.13,31.11,53,30c-10.8-.81-27.79-10.31-27.83-10.33a36.18,36.18,0,0,0-5.83,6.09c5.11,1,14.85,3.18,20.71,5.82C61.75,41.36,50.13,56,80.21,63.76c26.69,6.84,37.74-4,51.54-1,7.14,1.56,18.52,3.25,23.26,5.46C156.16,66.23,163.37,65.42,164.29,63.35Z\"\n          />\n          <path\n            fill=\"#be999d\"\n            d=\"M65.2,40.19c-.72,3.81,9.27,9.48,22.31,12.66s24.2,2.66,24.91-1.15a3.07,3.07,0,0,0-.69-2.33c-2.48-3.53-11-7.74-21.62-10.32-.4-.1-.8-.2-1.2-.28C76.39,35.9,65.89,36.5,65.2,40.19Z\"\n          />\n          <path\n            fill=\"#e0c3c2\"\n            d=\"M91.34,36.23c-16-2.49-30.13-.79-31.21,4.17S71,52.76,86.84,56.92s29.53,3.52,30.61-1.43S112.16,39.46,91.34,36.23ZM87.45,50.76c-11.68-2.88-20.74-7.32-20.24-9.92s8.35-2.39,20.06.27C99.83,44,105.54,47.58,105,50.18S99.12,53.65,87.45,50.76Z\"\n          />\n        </g>\n      </g>\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport PanIcon from './PanIcon'\nimport PancakeIcon from './PancakeIcon'\nimport { SpinnerProps } from './types'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst float = keyframes`\n\t0% {\n\t\ttransform: translatey(0px);\n\t}\n\t50% {\n\t\ttransform: translatey(10px);\n\t}\n\t100% {\n\t\ttransform: translatey(0px);\n\t}\n`\n\nconst Container = styled.div`\n  position: relative;\n  padding-top: 20px;\n`\n\nconst RotatingPancakeIcon = styled(PancakeIcon)`\n  position: absolute;\n  top: -24px;\n  left: 35px;\n  animation: ${rotate} 2s linear infinite;\n  transform: translate3d(0, 0, 0);\n`\n\nconst FloatingPanIcon = styled(PanIcon)`\n  animation: ${float} 6s ease-in-out infinite;\n  transform: translate3d(0, 0, 0);\n`\n\nconst Spinner: React.FC<SpinnerProps> = ({ size = 128 }) => {\n  return (\n    <Container>\n      <RotatingPancakeIcon width={`${size * 0.4}px`} />\n      <FloatingPanIcon width={`${size}px`} />\n    </Container>\n  )\n}\n\nexport default Spinner\n","import React from 'react'\nimport styled from 'styled-components'\nimport Flex from '../Box/Flex'\nimport Box from '../Box/Box'\nimport { StatusProps, StepProps } from './types'\n\nconst getStepNumberFontColor = ({ theme, status }: StatusProps) => {\n  if (status === 'past') {\n    return theme.colors.success\n  }\n  if (status === 'current') {\n    return theme.colors.invertedContrast\n  }\n  return theme.colors.textDisabled\n}\n\nconst StyledStep = styled(Flex)`\n  ${({ theme }) => theme.mediaQueries.md} {\n    justify-content: center;\n  }\n`\n\nconst Connector = styled.div<StatusProps>`\n  position: absolute;\n  width: 4px;\n  height: 110%;\n  top: 50%;\n  left: calc(50% - 2px);\n  background-color: ${({ theme, status }) => theme.colors[status === 'past' ? 'success' : 'textDisabled']};\n`\n\nconst ChildrenWrapper = styled(Box)<{ isVisible: boolean }>`\n  ${({ theme }) => theme.mediaQueries.md} {\n    visibility: ${({ isVisible }) => (isVisible ? 'visible' : 'hidden')};\n  }\n`\n\nconst ChildrenLeftWrapper = styled(ChildrenWrapper)`\n  display: none;\n  ${({ theme }) => theme.mediaQueries.md} {\n    display: block;\n    margin-right: 16px;\n  }\n`\n\nconst ChildrenRightWrapper = styled(ChildrenWrapper)`\n  margin-left: 8px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-left: 16px;\n  }\n`\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n`\n\nexport const StepNumber = styled.div<StatusProps>`\n  box-shadow: 0px 1px 4px rgba(25, 19, 38, 0.15);\n  background-color: ${({ theme, status }) => theme.colors[status === 'current' ? 'secondary' : 'invertedContrast']};\n  border: 2px solid ${({ theme, status }) => (status === 'past' ? theme.colors.success : 'transparent')};\n  border-radius: ${({ theme }) => theme.radii.circle};\n  color: ${getStepNumberFontColor};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-weight: 600;\n  font-size: 32px;\n  width: 48px;\n  height: 48px;\n  z-index: 1;\n  ${({ theme }) => theme.mediaQueries.md} {\n    font-size: 40px;\n    width: 80px;\n    height: 80px;\n  }\n`\n\n/**\n * ChildrenLeftWrapper and ChildrenRightWrapper are used on the non mobile version, to force the alternate layout.\n * One of the child is hidden based on the step number.\n */\nexport const Step: React.FC<StepProps> = ({ index, status, numberOfSteps = 0, children }) => {\n  const isIndexPair = index % 2 === 0\n  return (\n    <StyledStep mb={index < numberOfSteps - 1 ? '16px' : 0}>\n      <ChildrenLeftWrapper isVisible={!isIndexPair}>{children}</ChildrenLeftWrapper>\n      <Wrapper>\n        <StepNumber status={status}>{index + 1}</StepNumber>\n        {index < numberOfSteps - 1 && <Connector status={status} />}\n      </Wrapper>\n      <ChildrenRightWrapper isVisible={isIndexPair}>{children}</ChildrenRightWrapper>\n    </StyledStep>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ThemedProps } from './types'\n\nconst StepperWrapper = styled.div<ThemedProps>`\n  display: flex;\n  flex-direction: column;\n  width: fit-content;\n`\n\nconst Stepper: React.FC = ({ children }) => {\n  const numberOfSteps = React.Children.count(children)\n  return (\n    <StepperWrapper>\n      {React.Children.map(children, (child) => {\n        if (React.isValidElement(child)) {\n          return React.cloneElement(child, { numberOfSteps })\n        }\n        return child\n      })}\n    </StepperWrapper>\n  )\n}\n\nexport default Stepper\n","import styled from 'styled-components'\nimport { typography, TypographyProps } from 'styled-system'\n\nexport const Td = styled.td<TypographyProps>`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  color: ${({ theme }) => theme.colors.text};\n  padding: 16px;\n  vertical-align: middle;\n\n  ${typography}\n`\n\nexport const Th = styled(Td).attrs({ as: 'th' })`\n  color: ${({ theme }) => theme.colors.secondary};\n  font-size: 12px;\n  text-transform: uppercase;\n`\n","import styled from 'styled-components'\nimport { Box, Flex } from '../Box'\n\nexport const InlineMenuContainer = styled(Box)`\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  border-radius: ${({ theme }) => theme.radii.card};\n  box-shadow: ${({ theme }) => theme.shadows.tooltip};\n`\n\nexport const SubMenuContainer = styled(Flex)`\n  flex-direction: column;\n  overflow: hidden;\n  min-width: 136px;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: ${({ theme }) => `1px solid ${theme.colors.inputSecondary}`};\n`\n\nexport const ClickableElementContainer = styled.div`\n  cursor: pointer;\n  display: inline-flex;\n`\n\nexport const SubMenuItem = styled.button`\n  border: 0;\n  outline: 0;\n  cursor: pointer;\n  background: transparent;\n  padding: 8px 16px;\n  color: ${({ theme }) => theme.colors.text};\n  width: 100%;\n  font-size: 16px;\n  text-align: left;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.inputSecondary};\n    text-decoration: none;\n  }\n`\n","import React, { useState, useEffect } from 'react'\nimport { createPortal } from 'react-dom'\nimport { usePopper } from 'react-popper'\nimport { ClickableElementContainer } from './styles'\nimport { BaseMenuProps } from './types'\n\nconst portalRoot = document.getElementById('portal-root')\n\nconst BaseMenu: React.FC<BaseMenuProps> = ({ component, options, children, isOpen = false }) => {\n  const [targetElement, setTargetElement] = useState<HTMLElement | null>(null)\n  const [menuElement, setMenuElement] = useState<HTMLElement | null>(null)\n  const placement = options?.placement ?? 'bottom'\n  const offset = options?.offset ?? [0, 10]\n  const padding = options?.padding ?? { left: 16, right: 16 }\n\n  const [isMenuOpen, setIsMenuOpen] = useState(isOpen)\n\n  const toggle = () => {\n    setIsMenuOpen((prev) => !prev)\n  }\n\n  const open = () => {\n    setIsMenuOpen(true)\n  }\n\n  const close = () => {\n    setIsMenuOpen(false)\n  }\n\n  // Allow for component to be controlled\n  useEffect(() => {\n    setIsMenuOpen(isOpen)\n  }, [isOpen, setIsMenuOpen])\n\n  useEffect(() => {\n    const handleClickOutside = ({ target }: Event) => {\n      if (target instanceof Node) {\n        if (\n          menuElement !== null &&\n          targetElement !== null &&\n          !menuElement.contains(target) &&\n          !targetElement.contains(target)\n        ) {\n          setIsMenuOpen(false)\n        }\n      }\n    }\n    if (menuElement !== null) {\n      document.addEventListener('click', handleClickOutside)\n    }\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [menuElement, targetElement])\n\n  const { styles, attributes } = usePopper(targetElement, menuElement, {\n    placement,\n    modifiers: [\n      { name: 'offset', options: { offset } },\n      { name: 'preventOverflow', options: { padding } },\n    ],\n  })\n\n  const menu = (\n    <div ref={setMenuElement} style={styles.popper} {...attributes.popper}>\n      {typeof children === 'function' ? children({ toggle, open, close }) : children}\n    </div>\n  )\n\n  const renderMenu = portalRoot ? createPortal(menu, portalRoot) : menu\n\n  return (\n    <>\n      <ClickableElementContainer ref={setTargetElement} onClick={toggle}>\n        {component}\n      </ClickableElementContainer>\n      {isMenuOpen && renderMenu}\n    </>\n  )\n}\n\nexport default BaseMenu\n","import styled from 'styled-components'\nimport { space } from 'styled-system'\nimport { Td } from './Cell'\n\nconst Table = styled.table`\n  max-width: 100%;\n  width: 100%;\n\n  tbody tr:last-child {\n    ${Td} {\n      border-bottom: 0;\n    }\n  }\n\n  ${space}\n`\n\nexport default Table\n","export const byTextAscending =\n  <T>(getTextProperty: (object: T) => string) =>\n  (objectA: T, objectB: T): number => {\n    const upperA = getTextProperty(objectA).toUpperCase()\n    const upperB = getTextProperty(objectB).toUpperCase()\n    if (upperA < upperB) {\n      return -1\n    }\n    if (upperA > upperB) {\n      return 1\n    }\n    return 0\n  }\n\nexport const byTextDescending =\n  <T>(getTextProperty: (object: T) => string) =>\n  (objectA: T, objectB: T): number => {\n    const upperA = getTextProperty(objectA).toUpperCase()\n    const upperB = getTextProperty(objectB).toUpperCase()\n    if (upperA > upperB) {\n      return -1\n    }\n    if (upperA < upperB) {\n      return 1\n    }\n    return 0\n  }\n","import { useMemo, useReducer, useEffect, ReactNode, useCallback } from 'react'\nimport noop from 'lodash/noop'\n\nimport {\n  ColumnByNamesType,\n  ColumnType,\n  TableState,\n  TableAction,\n  DataType,\n  UseTableReturnType,\n  UseTableOptionsType,\n  RowType,\n  HeaderType,\n  HeaderRenderType,\n  ColumnStateType,\n} from './types'\nimport { byTextAscending, byTextDescending } from './utils'\n\nconst sortByColumn = <T extends DataType>(\n  data: RowType<T>[],\n  sortColumn: string,\n  columns: ColumnStateType<T>[],\n): RowType<T>[] => {\n  let isAscending = null\n  let sortedRows: RowType<T>[] = [...data]\n\n  columns.forEach((column) => {\n    // if the row was found\n    if (sortColumn === column.name) {\n      isAscending = column.sorted.asc\n\n      if (column.sort) {\n        sortedRows = isAscending ? data.sort(column.sort) : data.sort(column.sort).reverse()\n        // default to sort by string\n      } else {\n        sortedRows = isAscending\n          ? data.sort(byTextAscending((object) => object.original[sortColumn]))\n          : data.sort(byTextDescending((object) => object.original[sortColumn]))\n      }\n    }\n  })\n\n  return sortedRows\n}\n\nconst getPaginatedData = <T extends DataType>(rows: RowType<T>[], perPage: number, page: number) => {\n  const start = (page - 1) * perPage\n  const end = start + perPage\n  return rows.slice(start, end)\n}\n\nconst getColumnsByName = <T extends DataType>(columns: ColumnType<T>[]): ColumnByNamesType<T> => {\n  const columnsByName: ColumnByNamesType<T> = {}\n  columns.forEach((column) => {\n    const col: ColumnType<T> = {\n      name: column.name,\n      label: column.label,\n    }\n\n    if (column.render) {\n      col.render = column.render\n    }\n    col.hidden = column.hidden\n    columnsByName[column.name] = col\n  })\n\n  return columnsByName\n}\n\nconst createReducer =\n  <T extends DataType>() =>\n  (state: TableState<T>, action: TableAction<T>): TableState<T> => {\n    let rows = []\n    let nextPage = 0\n    let prevPage = 0\n    let isAscending = null\n    let sortedRows: RowType<T>[] = []\n    let columnCopy = []\n    let filteredRows = []\n    let selectedRowsById: { [key: number]: boolean } = {}\n    let stateCopy: TableState<T> = { ...state }\n    const rowIds: { [key: number]: boolean } = {}\n\n    switch (action.type) {\n      case 'SET_ROWS':\n        rows = [...action.data]\n        // preserve sorting if a sort is already enabled when data changes\n        if (state.sortColumn) {\n          rows = sortByColumn(action.data, state.sortColumn, state.columns)\n        }\n\n        if (state.paginationEnabled === true) {\n          rows = getPaginatedData(rows, state.pagination.perPage, state.pagination.page)\n        }\n\n        if (state.paginationEnabled === true) {\n          rows = getPaginatedData(rows, state.pagination.perPage, state.pagination.page)\n        }\n\n        columnCopy = state.columns.map((column) => {\n          if (state.sortColumn === column.name) {\n            return {\n              ...column,\n              sorted: {\n                on: true,\n                asc: column.sorted.asc,\n              },\n            }\n          }\n\n          return column\n        })\n\n        return {\n          ...state,\n          rows,\n          originalRows: action.data,\n          columns: columnCopy,\n        }\n\n      case 'NEXT_PAGE':\n        nextPage = state.pagination.page + 1\n        return {\n          ...state,\n          rows: getPaginatedData(state.originalRows, state.pagination.perPage, nextPage),\n          pagination: {\n            ...state.pagination,\n            page: nextPage,\n            canNext: nextPage * state.pagination.perPage < state.originalRows.length,\n            canPrev: nextPage !== 1,\n          },\n        }\n      case 'PREV_PAGE':\n        prevPage = state.pagination.page === 1 ? 1 : state.pagination.page - 1\n\n        return {\n          ...state,\n          rows: getPaginatedData(state.originalRows, state.pagination.perPage, prevPage),\n          pagination: {\n            ...state.pagination,\n            page: prevPage,\n            canNext: prevPage * state.pagination.perPage < state.originalRows.length,\n            canPrev: prevPage !== 1,\n          },\n        }\n      case 'TOGGLE_SORT':\n        if (!(action.columnName in state.columnsByName)) {\n          throw new Error(`Invalid column, ${action.columnName} not found`)\n        }\n\n        // loop through all columns and set the sort parameter to off unless\n        // it's the specified column (only one column at a time for )\n        columnCopy = state.columns.map((column) => {\n          // if the row was found\n          if (action.columnName === column.name) {\n            if (action.isAscOverride !== undefined) {\n              // force the sort order\n              isAscending = action.isAscOverride\n            } else {\n              // if it's undefined, start by setting to ascending, otherwise toggle\n              isAscending = column.sorted.asc === undefined ? true : !column.sorted.asc\n            }\n\n            if (column.sort) {\n              sortedRows = isAscending ? state.rows.sort(column.sort) : state.rows.sort(column.sort).reverse()\n              // default to sort by string\n            } else {\n              sortedRows = isAscending\n                ? state.rows.sort(byTextAscending((object) => object.original[action.columnName]))\n                : state.rows.sort(byTextDescending((object) => object.original[action.columnName]))\n            }\n            return {\n              ...column,\n              sorted: {\n                on: true,\n                asc: isAscending,\n              },\n            }\n          }\n          // set sorting to false for all other columns\n          return {\n            ...column,\n            sorted: {\n              on: false,\n              asc: false,\n            },\n          }\n        })\n\n        return {\n          ...state,\n          columns: columnCopy,\n          rows: sortedRows,\n          sortColumn: action.columnName,\n          columnsByName: getColumnsByName(columnCopy),\n        }\n      case 'GLOBAL_FILTER':\n        filteredRows = action.filter(state.originalRows)\n        selectedRowsById = {}\n        state.selectedRows.forEach((row) => {\n          selectedRowsById[row.id] = row.selected ?? false\n        })\n\n        return {\n          ...state,\n          rows: filteredRows.map((row) => {\n            return selectedRowsById[row.id] ? { ...row, selected: selectedRowsById[row.id] } : { ...row }\n          }),\n          filterOn: true,\n        }\n      case 'SELECT_ROW':\n        stateCopy = { ...state }\n\n        stateCopy.rows = stateCopy.rows.map((row) => {\n          const newRow = { ...row }\n          if (newRow.id === action.rowId) {\n            newRow.selected = !newRow.selected\n          }\n          return newRow\n        })\n\n        stateCopy.originalRows = stateCopy.originalRows.map((row) => {\n          const newRow = { ...row }\n          if (newRow.id === action.rowId) {\n            newRow.selected = !newRow.selected\n          }\n          return newRow\n        })\n\n        stateCopy.selectedRows = stateCopy.originalRows.filter((row) => row.selected === true)\n\n        stateCopy.toggleAllState =\n          stateCopy.selectedRows.length === stateCopy.rows.length\n            ? (stateCopy.toggleAllState = true)\n            : (stateCopy.toggleAllState = false)\n\n        return stateCopy\n      case 'SEARCH_STRING':\n        stateCopy = { ...state }\n        stateCopy.rows = stateCopy.originalRows.filter((row) => {\n          return (\n            row.cells.filter((cell) => {\n              if (cell.value.includes(action.searchString)) {\n                return true\n              }\n              return false\n            }).length > 0\n          )\n        })\n        return stateCopy\n      case 'TOGGLE_ALL':\n        if (state.selectedRows.length < state.rows.length) {\n          stateCopy.rows = stateCopy.rows.map((row) => {\n            rowIds[row.id] = true\n            return { ...row, selected: true }\n          })\n\n          stateCopy.toggleAllState = true\n        } else {\n          stateCopy.rows = stateCopy.rows.map((row) => {\n            rowIds[row.id] = false\n\n            return { ...row, selected: false }\n          })\n          stateCopy.toggleAllState = false\n        }\n\n        stateCopy.originalRows = stateCopy.originalRows.map((row) => {\n          return row.id in rowIds ? { ...row, selected: rowIds[row.id] } : { ...row }\n        })\n\n        stateCopy.selectedRows = stateCopy.originalRows.filter((row) => row.selected)\n\n        return stateCopy\n      default:\n        throw new Error('Invalid reducer action')\n    }\n  }\n\nconst sortDataInOrder = <T extends DataType>(data: T[], columns: ColumnType<T>[]): T[] => {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return data.map((row: any) => {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const newRow: any = {}\n    columns.forEach((column) => {\n      if (!(column.name in row)) {\n        throw new Error(`Invalid row data, ${column.name} not found`)\n      }\n      newRow[column.name] = row[column.name]\n    })\n    return newRow\n  })\n}\n\nexport const makeRender = <T extends DataType>(\n  // eslint-disable-next-line\n  value: any,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  render: (({ value: val, row }: { value: any; row: T }) => ReactNode) | undefined,\n  row: T,\n): (() => React.ReactNode) => {\n  return render ? () => render({ row, value }) : () => value\n}\n\nconst makeHeaderRender = (label: string, render?: HeaderRenderType) => {\n  return render ? () => render({ label }) : () => label\n}\n\nexport const useTable = <T extends DataType>(\n  columns: ColumnType<T>[],\n  data: T[],\n  options?: UseTableOptionsType<T>,\n): UseTableReturnType<T> => {\n  const columnsWithSorting: ColumnStateType<T>[] = useMemo(\n    () =>\n      columns.map((column) => {\n        return {\n          ...column,\n          label: column.label ? column.label : column.name,\n          hidden: column.hidden ? column.hidden : false,\n          sort: column.sort,\n          sorted: {\n            on: false,\n            asc: false,\n          },\n        }\n      }),\n    [columns],\n  )\n  const columnsByName = useMemo(() => getColumnsByName(columnsWithSorting), [columnsWithSorting])\n\n  const tableData: RowType<T>[] = useMemo(() => {\n    const sortedData = sortDataInOrder(data, columnsWithSorting)\n\n    const newData = sortedData.map((row, idx) => {\n      return {\n        id: idx,\n        selected: false,\n        hidden: false,\n        original: row,\n        cells: Object.entries(row)\n          .map(([column, value]) => {\n            return {\n              hidden: columnsByName[column].hidden,\n              field: column,\n              value,\n              render: makeRender(value, columnsByName[column].render, row),\n            }\n          })\n          .filter((cell) => !cell.hidden),\n      }\n    })\n    return newData\n  }, [data, columnsWithSorting, columnsByName])\n\n  const reducer = createReducer<T>()\n\n  const [state, dispatch] = useReducer(reducer, {\n    columns: columnsWithSorting,\n    columnsByName,\n    originalRows: tableData,\n    rows: tableData,\n    selectedRows: [],\n    toggleAllState: false,\n    filterOn: !!options?.filter,\n    sortColumn: options?.sortColumn,\n    paginationEnabled: !!options?.pagination,\n    pagination: {\n      page: 1,\n      perPage: 10,\n      canNext: true,\n      canPrev: false,\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      nextPage: noop,\n      // eslint-disable-next-line @typescript-eslint/no-empty-function\n      prevPage: noop,\n    },\n  })\n\n  state.pagination.nextPage = useCallback(() => {\n    dispatch({ type: 'NEXT_PAGE' })\n  }, [dispatch])\n  state.pagination.prevPage = useCallback(() => dispatch({ type: 'PREV_PAGE' }), [dispatch])\n\n  useEffect(() => {\n    dispatch({ type: 'SET_ROWS', data: tableData })\n  }, [tableData])\n\n  const headers: HeaderType<T>[] = useMemo(() => {\n    return [\n      ...state.columns.map((column) => {\n        const label = column.label ? column.label : column.name\n        return {\n          ...column,\n          render: makeHeaderRender(label, column.headerRender),\n        }\n      }),\n    ]\n  }, [state.columns])\n\n  useEffect(() => {\n    if (options && options.filter) {\n      dispatch({ type: 'GLOBAL_FILTER', filter: options.filter })\n    }\n  })\n\n  return {\n    headers: headers.filter((column) => !column.hidden),\n    rows: state.rows,\n    originalRows: state.originalRows,\n    selectedRows: state.selectedRows,\n    dispatch,\n    selectRow: (rowId: number) => dispatch({ type: 'SELECT_ROW', rowId }),\n    toggleAll: () => dispatch({ type: 'TOGGLE_ALL' }),\n    toggleSort: (columnName: string, isAscOverride?: boolean) =>\n      dispatch({ type: 'TOGGLE_SORT', columnName, isAscOverride }),\n    setSearchString: (searchString: string) => dispatch({ type: 'SEARCH_STRING', searchString }),\n    pagination: state.pagination,\n    toggleAllState: state.toggleAllState,\n  }\n}\n","import styled from 'styled-components'\nimport { color } from 'styled-system'\nimport { TabProps } from './types'\n\nconst getBorderRadius = ({ scale }: TabProps) => (scale === 'md' ? '16px 16px 0 0' : '24px 24px 0 0')\n\nconst getPadding = ({ scale }: TabProps) => (scale === 'md' ? '8px' : '16px')\n\nconst Tab = styled.button<TabProps>`\n  display: inline-flex;\n  justify-content: center;\n  cursor: pointer;\n  border: 0;\n  outline: 0;\n  flex-grow: 1;\n  padding: ${getPadding};\n  border-radius: ${getBorderRadius};\n  font-size: 16px;\n  font-weight: 600;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-grow: 0;\n  }\n\n  ${color}\n`\n\nTab.defaultProps = {\n  scale: 'md',\n}\n\nexport default Tab\n","import React, { cloneElement, Children, ReactElement } from 'react'\nimport styled from 'styled-components'\nimport Flex from '../Box/Flex'\nimport { TabMenuProps } from './types'\n\nconst Wrapper = styled(Flex)`\n  border-bottom: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  overflow-x: scroll;\n\n  ::-webkit-scrollbar {\n    display: none;\n  }\n  -ms-overflow-style: none; /* IE and Edge */\n  scrollbar-width: none; /* Firefox */\n`\n\nconst Inner = styled(Flex)`\n  justify-content: space-between;\n  flex-grow: 1;\n\n  & > button + button {\n    margin-left: 4px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex-grow: 0;\n  }\n`\n\nconst ButtonMenu: React.FC<TabMenuProps> = ({ activeIndex = 0, onItemClick, children }) => {\n  return (\n    <Wrapper p={['0 4px', '0 16px']}>\n      <Inner>\n        {Children.map(children, (child: ReactElement, index) => {\n          const isActive = activeIndex === index\n          return cloneElement(child, {\n            isActive,\n            onClick: onItemClick ? () => onItemClick(index) : undefined,\n            color: isActive ? 'backgroundAlt' : 'textSubtle',\n            backgroundColor: isActive ? 'textSubtle' : 'input',\n          })\n        })}\n      </Inner>\n    </Wrapper>\n  )\n}\n\nexport default ButtonMenu\n","import { ReactNode } from 'react'\nimport { SpaceProps, TypographyProps } from 'styled-system'\n\nexport const variants = {\n  PRIMARY: 'primary',\n  SECONDARY: 'secondary',\n  SUCCESS: 'success',\n  TEXTDISABLED: 'textDisabled',\n  TEXTSUBTLE: 'textSubtle',\n  BINANCE: 'binance',\n  FAILURE: 'failure',\n  WARNING: 'warning',\n} as const\n\nexport const scales = {\n  MD: 'md',\n  SM: 'sm',\n} as const\n\nexport type Scale = typeof scales[keyof typeof scales]\nexport type Variant = typeof variants[keyof typeof variants]\n\nexport interface TagProps extends SpaceProps, TypographyProps {\n  variant?: Variant\n  scale?: Scale\n  startIcon?: ReactNode\n  endIcon?: ReactNode\n  outline?: boolean\n  textTransform?: 'uppercase' | 'lowercase' | 'capitalize'\n}\n","import { scales, variants } from './types'\n\nexport const scaleVariants = {\n  [scales.MD]: {\n    height: '28px',\n    padding: '0 8px',\n    fontSize: '14px',\n  },\n  [scales.SM]: {\n    height: '24px',\n    padding: '0 4px',\n    fontSize: '12px',\n  },\n}\n\nexport const styleVariants = {\n  [variants.PRIMARY]: {\n    backgroundColor: 'primary',\n  },\n  [variants.SECONDARY]: {\n    backgroundColor: 'secondary',\n  },\n  [variants.SUCCESS]: {\n    backgroundColor: 'success',\n  },\n  [variants.TEXTDISABLED]: {\n    backgroundColor: 'textDisabled',\n  },\n  [variants.TEXTSUBTLE]: {\n    backgroundColor: 'textSubtle',\n  },\n  [variants.BINANCE]: {\n    backgroundColor: 'binance',\n  },\n  [variants.FAILURE]: {\n    backgroundColor: 'failure',\n  },\n  [variants.WARNING]: {\n    backgroundColor: 'warning',\n  },\n}\n","import styled, { DefaultTheme } from 'styled-components'\nimport { space, variant, typography } from 'styled-system'\nimport { Colors } from '../../theme/types'\nimport { scaleVariants, styleVariants } from './theme'\nimport { TagProps, variants } from './types'\n\ninterface ThemedProps extends TagProps {\n  theme: DefaultTheme\n}\n\nconst getOutlineStyles = ({ outline, theme, variant: variantKey = variants.PRIMARY }: ThemedProps) => {\n  if (outline) {\n    const themeColorKey = styleVariants[variantKey].backgroundColor as keyof Colors\n    const color = theme.colors[themeColorKey]\n\n    return `\n      color: ${color};\n      background: ${theme.colors.background};\n      border: 2px solid ${color};\n    `\n  }\n\n  return ''\n}\n\nexport const StyledTag = styled.div<ThemedProps>`\n  align-items: center;\n  border-radius: 16px;\n  color: #ffffff;\n  display: inline-flex;\n  font-weight: 400;\n  white-space: nowrap;\n\n  & > svg {\n    fill: currentColor;\n  }\n\n  ${({ textTransform }) => textTransform && `text-transform: ${textTransform};`}\n\n  ${variant({\n    prop: 'scale',\n    variants: scaleVariants,\n  })}\n  ${variant({\n    variants: styleVariants,\n  })}\n  ${space}\n  ${typography}\n\n  ${getOutlineStyles}\n`\n\nexport default null\n","import React from 'react'\nimport { scales, TagProps } from './types'\nimport { StyledTag } from './StyledTag'\n\nconst Tag: React.FC<TagProps> = ({ startIcon, endIcon, children, ...props }) => (\n  <StyledTag {...props}>\n    {React.isValidElement(startIcon) &&\n      React.cloneElement(startIcon, {\n        mr: '0.5em',\n      })}\n    {children}\n    {React.isValidElement(endIcon) &&\n      React.cloneElement(endIcon, {\n        ml: '0.5em',\n      })}\n  </StyledTag>\n)\n\nTag.defaultProps = {\n  variant: 'primary',\n  scale: scales.MD,\n  outline: false,\n}\n\nexport default Tag\n","import { InputHTMLAttributes } from 'react'\n\nexport type ToggleTheme = {\n  handleBackground: string\n}\n\nexport const scales = {\n  SM: 'sm',\n  MD: 'md',\n  LG: 'lg',\n} as const\n\nexport type Scales = typeof scales[keyof typeof scales]\n\nexport interface ToggleProps extends InputHTMLAttributes<HTMLInputElement> {\n  scale?: Scales\n  checked?: boolean\n}\n\nexport interface HandleProps {\n  scale: Scales\n}\n\nexport interface InputProps {\n  scale: Scales\n}\n\nexport const scaleKeys = {\n  handleHeight: 'handleHeight',\n  handleWidth: 'handleWidth',\n  handleLeft: 'handleLeft',\n  handleTop: 'handleTop',\n  checkedLeft: 'checkedLeft',\n  toggleHeight: 'toggleHeight',\n  toggleWidth: 'toggleWidth',\n} as const\n\nexport type ScaleKeys = typeof scaleKeys[keyof typeof scaleKeys]\n","import styled from 'styled-components'\nimport { ToggleProps, HandleProps, InputProps, ScaleKeys, scales } from './types'\n\nconst scaleKeyValues = {\n  sm: {\n    handleHeight: '16px',\n    handleWidth: '16px',\n    handleLeft: '2px',\n    handleTop: '2px',\n    checkedLeft: 'calc(100% - 18px)',\n    toggleHeight: '20px',\n    toggleWidth: '36px',\n  },\n  md: {\n    handleHeight: '26px',\n    handleWidth: '26px',\n    handleLeft: '3px',\n    handleTop: '3px',\n    checkedLeft: 'calc(100% - 30px)',\n    toggleHeight: '32px',\n    toggleWidth: '56px',\n  },\n  lg: {\n    handleHeight: '32px',\n    handleWidth: '32px',\n    handleLeft: '4px',\n    handleTop: '4px',\n    checkedLeft: 'calc(100% - 36px)',\n    toggleHeight: '40px',\n    toggleWidth: '72px',\n  },\n}\n\nconst getScale =\n  (property: ScaleKeys) =>\n  ({ scale = scales.LG }: ToggleProps) => {\n    return scaleKeyValues[scale][property]\n  }\n\nexport const Handle = styled.div<HandleProps>`\n  background-color: ${({ theme }) => theme.toggle.handleBackground};\n  border-radius: 50%;\n  cursor: pointer;\n  height: ${getScale('handleHeight')};\n  left: ${getScale('handleLeft')};\n  position: absolute;\n  top: ${getScale('handleTop')};\n  transition: left 200ms ease-in;\n  width: ${getScale('handleWidth')};\n  z-index: 1;\n`\n\nexport const Input = styled.input<InputProps>`\n  cursor: pointer;\n  opacity: 0;\n  height: 100%;\n  position: absolute;\n  width: 100%;\n  z-index: 3;\n\n  &:checked + ${Handle} {\n    left: ${getScale('checkedLeft')};\n  }\n\n  &:focus + ${Handle} {\n    box-shadow: ${({ theme }) => theme.shadows.focus};\n  }\n\n  &:hover + ${Handle}:not(:disabled):not(:checked) {\n    box-shadow: ${({ theme }) => theme.shadows.focus};\n  }\n`\n\nconst StyledToggle = styled.div<ToggleProps>`\n  align-items: center;\n  background-color: ${({ theme, checked }) => theme.colors[checked ? 'success' : 'input']};\n  border-radius: 24px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  cursor: pointer;\n  display: inline-flex;\n  height: ${getScale('toggleHeight')};\n  position: relative;\n  transition: background-color 200ms;\n  width: ${getScale('toggleWidth')};\n`\n\nexport default StyledToggle\n","import React from 'react'\nimport StyledToggle, { Input, Handle } from './StyledToggle'\nimport { ToggleProps, scales } from './types'\n\nconst Toggle: React.FC<ToggleProps> = ({ checked, scale = scales.LG, ...props }) => {\n  const isChecked = !!checked\n\n  return (\n    <StyledToggle checked={isChecked} scale={scale}>\n      <Input checked={checked} scale={scale} {...props} type=\"checkbox\" />\n      <Handle scale={scale} />\n    </StyledToggle>\n  )\n}\n\nexport default Toggle\n","import { MediaQueries, Breakpoints, Spacing } from './types'\n\nexport const breakpointMap: { [key: string]: number } = {\n  xs: 370,\n  sm: 576,\n  md: 852,\n  lg: 968,\n  xl: 1080,\n  xxl: 1200,\n}\n\nconst breakpoints: Breakpoints = Object.values(breakpointMap).map((breakpoint) => `${breakpoint}px`)\n\nconst mediaQueries: MediaQueries = {\n  xs: `@media screen and (min-width: ${breakpointMap.xs}px)`,\n  sm: `@media screen and (min-width: ${breakpointMap.sm}px)`,\n  md: `@media screen and (min-width: ${breakpointMap.md}px)`,\n  lg: `@media screen and (min-width: ${breakpointMap.lg}px)`,\n  xl: `@media screen and (min-width: ${breakpointMap.xl}px)`,\n  xxl: `@media screen and (min-width: ${breakpointMap.xxl}px)`,\n  nav: `@media screen and (min-width: ${breakpointMap.lg}px)`,\n}\n\nexport const shadows = {\n  level1: '0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)',\n  active: '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4)',\n  success: '0px 0px 0px 1px #31D0AA, 0px 0px 0px 4px rgba(49, 208, 170, 0.2)',\n  warning: '0px 0px 0px 1px #ED4B9E, 0px 0px 0px 4px rgba(237, 75, 158, 0.2)',\n  focus: '0px 0px 0px 1px #7645D9, 0px 0px 0px 4px rgba(118, 69, 217, 0.6)',\n  inset: 'inset 0px 2px 2px -1px rgba(74, 74, 104, 0.1)',\n  tooltip: '0px 0px 2px rgba(0, 0, 0, 0.2), 0px 4px 12px -8px rgba(14, 14, 44, 0.1)',\n}\n\nconst spacing: Spacing = [0, 4, 8, 16, 24, 32, 48, 64]\n\nconst radii = {\n  small: '4px',\n  default: '16px',\n  card: '24px',\n  circle: '50%',\n}\n\nconst zIndices = {\n  dropdown: 10,\n  modal: 100,\n}\n\nexport default {\n  siteWidth: 1200,\n  breakpoints,\n  mediaQueries,\n  spacing,\n  shadows,\n  radii,\n  zIndices,\n}\n","import { useEffect, useState } from 'react'\nimport { breakpointMap } from '../theme/base'\n\ntype State = {\n  [key: string]: boolean\n}\n\ntype BreakpointChecks = {\n  isMobile: boolean\n  isTablet: boolean\n  isDesktop: boolean\n} & State\n\ntype MediaQueries = {\n  [key: string]: string\n}\n\n/**\n * Can't use the media queries from \"base.mediaQueries\" because of how matchMedia works\n * In order for the listener to trigger we need have have the media query with a range, e.g.\n * (min-width: 370px) and (max-width: 576px)\n * @see https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList\n */\nconst mediaQueries: MediaQueries = (() => {\n  let prevMinWidth = 0\n\n  return Object.keys(breakpointMap).reduce((accum, size, index) => {\n    // Largest size is just a min-width of second highest max-width\n    if (index === Object.keys(breakpointMap).length - 1) {\n      return { ...accum, [size]: `(min-width: ${prevMinWidth}px)` }\n    }\n\n    const minWidth = prevMinWidth\n    const breakpoint = breakpointMap[size]\n\n    // Min width for next iteration\n    prevMinWidth = breakpoint + 1\n\n    return { ...accum, [size]: `(min-width: ${minWidth}px) and (max-width: ${breakpoint}px)` }\n  }, {})\n})()\n\nconst getKey = (size: string) => `is${size.charAt(0).toUpperCase()}${size.slice(1)}`\n\nconst useMatchBreakpoints = (): BreakpointChecks => {\n  const [state, setState] = useState<State>(() => {\n    return Object.keys(mediaQueries).reduce((accum, size) => {\n      const key = getKey(size)\n      const mql = window.matchMedia(mediaQueries[size])\n      return { ...accum, [key]: mql.matches }\n    }, {})\n  })\n\n  useEffect(() => {\n    // Create listeners for each media query returning a function to unsubscribe\n    const handlers = Object.keys(mediaQueries).map((size) => {\n      const mql = window.matchMedia(mediaQueries[size])\n\n      const handler = (matchMediaQuery: MediaQueryListEvent) => {\n        const key = getKey(size)\n        setState((prevState) => ({\n          ...prevState,\n          [key]: matchMediaQuery.matches,\n        }))\n      }\n\n      // Safari < 14 fix\n      if (mql.addEventListener) {\n        mql.addEventListener('change', handler)\n      }\n\n      return () => {\n        // Safari < 14 fix\n        if (mql.removeEventListener) {\n          mql.removeEventListener('change', handler)\n        }\n      }\n    })\n\n    return () => {\n      handlers.forEach((unsubscribe) => {\n        unsubscribe()\n      })\n    }\n  }, [setState])\n\n  return {\n    ...state,\n    isMobile: state.isXs || state.isSm,\n    isTablet: state.isMd || state.isLg,\n    isDesktop: state.isXl || state.isXxl,\n  }\n}\n\nexport default useMatchBreakpoints\n","import { useEffect } from 'react'\n\nconst useKonamiCheatCode = (matchedCodeHandler: () => void): void => {\n  useEffect(() => {\n    const pattern = [\n      'ArrowUp',\n      'ArrowUp',\n      'ArrowDown',\n      'ArrowDown',\n      'ArrowLeft',\n      'ArrowRight',\n      'ArrowLeft',\n      'ArrowRight',\n    ]\n\n    let currentIndex = 0\n\n    const onKeyUpHandler = (event: KeyboardEvent) => {\n      const { key } = event\n      // is key in correct order otherwise reset\n      if (key !== pattern[currentIndex]) {\n        currentIndex = 0\n        return\n      }\n      currentIndex += 1\n      if (pattern.length === currentIndex) {\n        currentIndex = 0\n        matchedCodeHandler()\n      }\n    }\n\n    document.addEventListener('keyup', onKeyUpHandler)\n    return () => document.removeEventListener('keyup', onKeyUpHandler)\n  }, [matchedCodeHandler])\n}\n\nexport default useKonamiCheatCode\n","import { Colors } from './types'\n\nexport const baseColors = {\n  failure: '#ED4B9E',\n  primary: '#DE2549',\n  primaryBright: '#53DEE9',\n  primaryDark: '#0098A1',\n  secondary: '#7645D9',\n  success: '#31D0AA',\n  warning: '#FFB237',\n}\n\nexport const additionalColors = {\n  binance: '#F0B90B',\n  overlay: '#452a7a',\n  gold: '#FFC700',\n  silver: '#B2B2B2',\n  bronze: '#E7974D',\n}\n\nexport const lightColors: Colors = {\n  ...baseColors,\n  ...additionalColors,\n  background: '#FAF9FA',\n  backgroundDisabled: '#E9EAEB',\n  backgroundAlt: '#FFFFFF',\n  cardBorder: '#E7E3EB',\n  contrast: '#191326',\n  dropdown: '#F6F6F6',\n  dropdownDeep: '#EEEEEE',\n  invertedContrast: '#FFFFFF',\n  input: '#FAF1EA',\n  inputSecondary: '#d7caec',\n  tertiary: '#EFF4F5',\n  text: '#432645',\n  textDisabled: '#BDC2C4',\n  textSubtle: '#432645',\n  disabled: '#E9EAEB',\n  gradients: {\n    bubblegum: 'linear-gradient(180deg, #E3CCCB -34.7%, #F9F1EA 79.3%)',\n    inverseBubblegum: 'linear-gradient(139.73deg, #F3EFFF 0%, #E5FDFF 100%)',\n    cardHeader: 'linear-gradient(111.68deg, #F2ECF2 0%, #E8F2F6 100%)',\n    blue: 'linear-gradient(180deg, #A7E8F1 0%, #94E1F2 100%)',\n    violet: 'linear-gradient(180deg, #E2C9FB 0%, #CDB8FA 100%)',\n    violetAlt: 'linear-gradient(180deg, #CBD7EF 0%, #9A9FD0 100%)',\n    gold: 'linear-gradient(180deg, #FFD800 0%, #FDAB32 100%)',\n  },\n  toggle: '#756072',\n}\n\nexport const darkColors: Colors = {\n  ...baseColors,\n  ...additionalColors,\n  secondary: '#9A6AFF',\n  background: '#08060B',\n  backgroundDisabled: '#3c3742',\n  backgroundAlt: '#FFFFFF',\n  cardBorder: '#383241',\n  contrast: '#FFFFFF',\n  dropdown: '#1E1D20',\n  dropdownDeep: '#100C18',\n  invertedContrast: '#191326',\n  input: '#FAF1EA',\n  inputSecondary: '#262130',\n  primaryDark: '#0098A1',\n  tertiary: '#353547',\n  text: '#432645',\n  textDisabled: '#666171',\n  textSubtle: '#432645',\n  disabled: '#524B63',\n  gradients: {\n    bubblegum: 'linear-gradient(180deg, #E3CCCB -34.7%, #F9F1EA 79.3%)',\n    inverseBubblegum: 'linear-gradient(139.73deg, #3D2A54 0%, #313D5C 100%)',\n    cardHeader: 'linear-gradient(166.77deg, #3B4155 0%, #3A3045 100%)',\n    blue: 'linear-gradient(180deg, #00707F 0%, #19778C 100%)',\n    violet: 'linear-gradient(180deg, #6C4999 0%, #6D4DB2 100%)',\n    violetAlt: 'linear-gradient(180deg, #434575 0%, #66578D 100%)',\n    gold: 'linear-gradient(180deg, #FFD800 0%, #FDAB32 100%)',\n  },\n  toggle: '#756072',\n}\n","import { darkColors, lightColors } from '../../theme/colors'\nimport { AlertTheme } from './types'\n\nexport const light: AlertTheme = {\n  background: lightColors.backgroundAlt,\n}\n\nexport const dark: AlertTheme = {\n  background: darkColors.backgroundAlt,\n}\n","import { darkColors, lightColors } from '../../theme/colors'\nimport { shadows } from '../../theme/base'\nimport { CardTheme } from './types'\n\nexport const light: CardTheme = {\n  background: lightColors.backgroundAlt,\n  boxShadow: shadows.level1,\n  boxShadowActive: shadows.active,\n  boxShadowSuccess: shadows.success,\n  boxShadowWarning: shadows.warning,\n  cardHeaderBackground: {\n    default: lightColors.gradients.cardHeader,\n    blue: lightColors.gradients.blue,\n    bubblegum: lightColors.gradients.bubblegum,\n    violet: lightColors.gradients.violet,\n  },\n  dropShadow: 'drop-shadow(0px 1px 4px rgba(25, 19, 38, 0.15))',\n}\n\nexport const dark: CardTheme = {\n  background: darkColors.backgroundAlt,\n  boxShadow: shadows.level1,\n  boxShadowActive: shadows.active,\n  boxShadowSuccess: shadows.success,\n  boxShadowWarning: shadows.warning,\n  cardHeaderBackground: {\n    default: darkColors.gradients.cardHeader,\n    blue: darkColors.gradients.blue,\n    bubblegum: lightColors.gradients.bubblegum,\n    violet: darkColors.gradients.violet,\n  },\n  dropShadow: 'drop-shadow(0px 1px 4px rgba(25, 19, 38, 0.15))',\n}\n","import { darkColors, lightColors } from '../../theme/colors'\nimport { PancakeToggleTheme } from './types'\n\nexport const light: PancakeToggleTheme = {\n  handleBackground: lightColors.backgroundAlt,\n  handleShadow: lightColors.textDisabled,\n}\n\nexport const dark: PancakeToggleTheme = {\n  handleBackground: darkColors.backgroundAlt,\n  handleShadow: darkColors.textDisabled,\n}\n","import { darkColors, lightColors } from '../../theme/colors'\nimport { RadioTheme } from './types'\n\nexport const light: RadioTheme = {\n  handleBackground: lightColors.backgroundAlt,\n}\n\nexport const dark: RadioTheme = {\n  handleBackground: darkColors.backgroundAlt,\n}\n","import { darkColors, lightColors } from '../../theme/colors'\nimport { ToggleTheme } from './types'\n\nexport const light: ToggleTheme = {\n  handleBackground: lightColors.toggle,\n}\n\nexport const dark: ToggleTheme = {\n  handleBackground: darkColors.toggle,\n}\n","import { darkColors, lightColors } from '../../theme/colors'\nimport { NavTheme } from './types'\n\nexport const light: NavTheme = {\n  background: lightColors.backgroundAlt,\n}\n\nexport const dark: NavTheme = {\n  background: darkColors.backgroundAlt,\n}\n","import { darkColors, lightColors } from '../../theme/colors'\nimport { ModalTheme } from './types'\n\nexport const light: ModalTheme = {\n  background: lightColors.backgroundAlt,\n}\n\nexport const dark: ModalTheme = {\n  background: darkColors.backgroundAlt,\n}\n","import { shadows } from '../../theme/base'\nimport { darkColors, lightColors } from '../../theme/colors'\nimport { TooltipTheme } from './types'\n\nexport const light: TooltipTheme = {\n  background: darkColors.backgroundAlt,\n  text: darkColors.text,\n  boxShadow: shadows.tooltip,\n}\n\nexport const dark: TooltipTheme = {\n  background: lightColors.backgroundAlt,\n  text: lightColors.text,\n  boxShadow: shadows.tooltip,\n}\n","import { DefaultTheme } from 'styled-components'\nimport { dark as darkAlert } from '../components/Alert/theme'\nimport { dark as darkCard } from '../components/Card/theme'\nimport { dark as darkPancakeToggle } from '../components/PancakeToggle/theme'\nimport { dark as darkRadio } from '../components/Radio/theme'\nimport { dark as darkToggle } from '../components/Toggle/theme'\nimport { dark as darkNav } from '../widgets/Menu/theme'\nimport { dark as darkModal } from '../widgets/Modal/theme'\nimport { dark as darkTooltip } from '../components/Tooltip/theme'\nimport base from './base'\nimport { darkColors } from './colors'\n\nconst darkTheme: DefaultTheme = {\n  ...base,\n  isDark: true,\n  alert: darkAlert,\n  colors: darkColors,\n  card: darkCard,\n  toggle: darkToggle,\n  nav: darkNav,\n  modal: darkModal,\n  pancakeToggle: darkPancakeToggle,\n  radio: darkRadio,\n  tooltip: darkTooltip,\n}\n\nexport default darkTheme\n","import { DefaultTheme } from 'styled-components'\nimport { light as lightAlert } from '../components/Alert/theme'\nimport { light as lightCard } from '../components/Card/theme'\nimport { light as lightPancakeToggle } from '../components/PancakeToggle/theme'\nimport { light as lightRadio } from '../components/Radio/theme'\nimport { light as lightToggle } from '../components/Toggle/theme'\nimport { light as lightTooltip } from '../components/Tooltip/theme'\nimport { light as lightNav } from '../widgets/Menu/theme'\nimport { light as lightModal } from '../widgets/Modal/theme'\nimport base from './base'\nimport { lightColors } from './colors'\n\nconst lightTheme: DefaultTheme = {\n  ...base,\n  isDark: false,\n  alert: lightAlert,\n  colors: lightColors,\n  card: lightCard,\n  toggle: lightToggle,\n  nav: lightNav,\n  modal: lightModal,\n  pancakeToggle: lightPancakeToggle,\n  radio: lightRadio,\n  tooltip: lightTooltip,\n}\n\nexport default lightTheme\n","const isTouchDevice = (): boolean => {\n  return 'ontouchstart' in window || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0\n}\n\nexport default isTouchDevice\n","import styled from 'styled-components'\n\nexport const Arrow = styled.div`\n  &,\n  &::before {\n    position: absolute;\n    width: 10px;\n    height: 10px;\n    border-radius: 2px;\n    z-index: -1;\n  }\n\n  &::before {\n    content: '';\n    transform: rotate(45deg);\n    background: ${({ theme }) => theme.tooltip.background};\n  }\n`\n\nexport const StyledTooltip = styled.div`\n  padding: 16px;\n  font-size: 16px;\n  line-height: 130%;\n  border-radius: 16px;\n  max-width: 320px;\n  z-index: 101;\n  background: ${({ theme }) => theme.tooltip.background};\n  color: ${({ theme }) => theme.tooltip.text};\n  box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n\n  &[data-popper-placement^='top'] > ${Arrow} {\n    bottom: -4px;\n  }\n\n  &[data-popper-placement^='bottom'] > ${Arrow} {\n    top: -4px;\n  }\n\n  &[data-popper-placement^='left'] > ${Arrow} {\n    right: -4px;\n  }\n\n  &[data-popper-placement^='right'] > ${Arrow} {\n    left: -4px;\n  }\n`\n","import React, { useState, useEffect, useCallback, useRef } from 'react'\nimport { createPortal } from 'react-dom'\nimport { usePopper } from 'react-popper'\nimport { ThemeProvider, DefaultTheme } from 'styled-components'\nimport { light, dark } from '../../theme'\nimport isTouchDevice from '../../util/isTouchDevice'\nimport { StyledTooltip, Arrow } from './StyledTooltip'\nimport { TooltipOptions, TooltipRefs } from './types'\n\nconst invertTheme = (currentTheme: DefaultTheme) => {\n  if (currentTheme.isDark) {\n    return light\n  }\n  return dark\n}\n\nconst portalRoot = document.getElementById('portal-root')\n\nconst useTooltip = (content: React.ReactNode, options: TooltipOptions): TooltipRefs => {\n  const {\n    placement = 'auto',\n    trigger = 'hover',\n    arrowPadding = 16,\n    tooltipPadding = { left: 16, right: 16 },\n    tooltipOffset = [0, 10],\n  } = options\n  const [targetElement, setTargetElement] = useState<HTMLElement | null>(null)\n  const [tooltipElement, setTooltipElement] = useState<HTMLElement | null>(null)\n  const [arrowElement, setArrowElement] = useState<HTMLElement | null>(null)\n\n  const [visible, setVisible] = useState(false)\n  const isHoveringOverTooltip = useRef(false)\n  const hideTimeout = useRef<number>()\n\n  const hideTooltip = useCallback(\n    (e: Event) => {\n      const hide = () => {\n        e.stopPropagation()\n        e.preventDefault()\n        setVisible(false)\n      }\n\n      if (trigger === 'hover') {\n        if (hideTimeout.current) {\n          window.clearTimeout(hideTimeout.current)\n        }\n        if (e.target === tooltipElement) {\n          isHoveringOverTooltip.current = false\n        }\n        if (!isHoveringOverTooltip.current) {\n          hideTimeout.current = window.setTimeout(() => {\n            if (!isHoveringOverTooltip.current) {\n              hide()\n            }\n          }, 100)\n        }\n      } else {\n        hide()\n      }\n    },\n    [tooltipElement, trigger],\n  )\n\n  const showTooltip = useCallback(\n    (e: Event) => {\n      e.stopPropagation()\n      e.preventDefault()\n      setVisible(true)\n      if (trigger === 'hover') {\n        if (e.target === targetElement) {\n          // If we were about to close the tooltip and got back to it\n          // then prevent closing it.\n          clearTimeout(hideTimeout.current)\n        }\n        if (e.target === tooltipElement) {\n          isHoveringOverTooltip.current = true\n        }\n      }\n    },\n    [tooltipElement, targetElement, trigger],\n  )\n\n  const toggleTooltip = useCallback(\n    (e: Event) => {\n      e.stopPropagation()\n      setVisible(!visible)\n    },\n    [visible],\n  )\n\n  // Trigger = hover\n  useEffect(() => {\n    if (targetElement === null || trigger !== 'hover') return undefined\n\n    if (isTouchDevice()) {\n      targetElement.addEventListener('touchstart', showTooltip)\n      targetElement.addEventListener('touchend', hideTooltip)\n    } else {\n      targetElement.addEventListener('mouseenter', showTooltip)\n      targetElement.addEventListener('mouseleave', hideTooltip)\n    }\n    return () => {\n      targetElement.removeEventListener('touchstart', showTooltip)\n      targetElement.removeEventListener('touchend', hideTooltip)\n      targetElement.removeEventListener('mouseenter', showTooltip)\n      targetElement.removeEventListener('mouseleave', showTooltip)\n    }\n  }, [trigger, targetElement, hideTooltip, showTooltip])\n\n  // Keep tooltip open when cursor moves from the targetElement to the tooltip\n  useEffect(() => {\n    if (tooltipElement === null || trigger !== 'hover') return undefined\n\n    tooltipElement.addEventListener('mouseenter', showTooltip)\n    tooltipElement.addEventListener('mouseleave', hideTooltip)\n    return () => {\n      tooltipElement.removeEventListener('mouseenter', showTooltip)\n      tooltipElement.removeEventListener('mouseleave', hideTooltip)\n    }\n  }, [trigger, tooltipElement, hideTooltip, showTooltip])\n\n  // Trigger = click\n  useEffect(() => {\n    if (targetElement === null || trigger !== 'click') return undefined\n\n    targetElement.addEventListener('click', toggleTooltip)\n\n    return () => targetElement.removeEventListener('click', toggleTooltip)\n  }, [trigger, targetElement, visible, toggleTooltip])\n\n  // Handle click outside\n  useEffect(() => {\n    if (trigger !== 'click') return undefined\n\n    const handleClickOutside = ({ target }: Event) => {\n      if (target instanceof Node) {\n        if (\n          tooltipElement != null &&\n          targetElement != null &&\n          !tooltipElement.contains(target) &&\n          !targetElement.contains(target)\n        ) {\n          setVisible(false)\n        }\n      }\n    }\n    document.addEventListener('mousedown', handleClickOutside)\n\n    return () => document.removeEventListener('mousedown', handleClickOutside)\n  }, [trigger, targetElement, tooltipElement])\n\n  // Trigger = focus\n  useEffect(() => {\n    if (targetElement === null || trigger !== 'focus') return undefined\n\n    targetElement.addEventListener('focus', showTooltip)\n    targetElement.addEventListener('blur', hideTooltip)\n    return () => {\n      targetElement.removeEventListener('focus', showTooltip)\n      targetElement.removeEventListener('blur', hideTooltip)\n    }\n  }, [trigger, targetElement, showTooltip, hideTooltip])\n\n  // On small screens Popper.js tries to squeeze the tooltip to available space without overflowing beyound the edge\n  // of the screen. While it works fine when the element is in the middle of the screen it does not handle well the\n  // cases when the target element is very close to the edge of the screen - no margin is applied between the tooltip\n  // and the screen edge.\n  // preventOverflow mitigates this behaviour, default 16px paddings on left and right solve the problem for all screen sizes\n  // that we support.\n  // Note that in the farm page where there are tooltips very close to the edge of the screen this padding works perfectly\n  // even on the iPhone 5 screen (320px wide), BUT in the storybook with the contrived example ScreenEdges example\n  // iPhone 5 behaves differently overflowing beyound the edge. All paddings are identical so I have no idea why it is,\n  // and fixing that seems like a very bad use of time.\n  const { styles, attributes } = usePopper(targetElement, tooltipElement, {\n    placement,\n    modifiers: [\n      {\n        name: 'arrow',\n        options: { element: arrowElement, padding: arrowPadding },\n      },\n      { name: 'offset', options: { offset: tooltipOffset } },\n      { name: 'preventOverflow', options: { padding: tooltipPadding } },\n    ],\n  })\n\n  const tooltip = (\n    <StyledTooltip ref={setTooltipElement} style={styles.popper} {...attributes.popper}>\n      <ThemeProvider theme={invertTheme}>{content}</ThemeProvider>\n      <Arrow ref={setArrowElement} style={styles.arrow} />\n    </StyledTooltip>\n  )\n\n  const tooltipInPortal = portalRoot ? createPortal(tooltip, portalRoot) : null\n\n  return {\n    targetRef: setTargetElement,\n    tooltip: tooltipInPortal ?? tooltip,\n    tooltipVisible: visible,\n  }\n}\n\nexport default useTooltip\n","import React from 'react'\nimport styled from 'styled-components'\nimport Flex from '../../components/Box/Flex'\nimport { Box } from '../../components/Box'\nimport { ArrowBackIcon, CloseIcon } from '../../components/Svg'\nimport { IconButton } from '../../components/Button'\nimport { ModalProps } from './types'\n\nexport const ModalHeader = styled.div<{ background?: string }>`\n  align-items: center;\n  background: ${({ background }) => background || 'transparent'};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  display: flex;\n  padding: 12px 24px;\n`\n\nexport const ModalTitle = styled(Flex)`\n  align-items: center;\n  flex: 1;\n`\n\nexport const ModalBody = styled(Flex)`\n  flex-direction: column;\n  max-height: 90vh;\n  overflow-y: auto;\n`\n\nexport const ModalCloseButton: React.FC<{ onDismiss: ModalProps['onDismiss'] }> = ({ onDismiss }) => {\n  return (\n    <IconButton variant=\"text\" onClick={onDismiss} aria-label=\"Close the dialog\">\n      <CloseIcon color=\"primary\" />\n    </IconButton>\n  )\n}\n\nexport const ModalBackButton: React.FC<{ onBack: ModalProps['onBack'] }> = ({ onBack }) => {\n  return (\n    <IconButton variant=\"text\" onClick={onBack} area-label=\"go back\" mr=\"8px\">\n      <ArrowBackIcon color=\"primary\" />\n    </IconButton>\n  )\n}\n\nexport const ModalContainer = styled(Box)<{ minWidth: string }>`\n  overflow: hidden;\n  background: ${({ theme }) => theme.modal.background};\n  box-shadow: 0px 20px 36px -8px rgba(14, 14, 44, 0.1), 0px 1px 1px rgba(0, 0, 0, 0.05);\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  border-radius: 32px;\n  width: 100%;\n  max-height: 100vh;\n  z-index: ${({ theme }) => theme.zIndices.modal};\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    width: auto;\n    min-width: ${({ minWidth }) => minWidth};\n    max-width: 100%;\n  }\n`\n","import React from 'react'\nimport { useTheme } from 'styled-components'\nimport Heading from '../../components/Heading/Heading'\nimport getThemeValue from '../../util/getThemeValue'\nimport { ModalBody, ModalHeader, ModalTitle, ModalContainer, ModalCloseButton, ModalBackButton } from './styles'\nimport { ModalProps } from './types'\n\nconst Modal: React.FC<ModalProps> = ({\n  title,\n  onDismiss,\n  onBack,\n  children,\n  hideCloseButton = false,\n  bodyPadding = '24px',\n  headerBackground = 'transparent',\n  minWidth = '320px',\n  ...props\n}) => {\n  const theme = useTheme()\n  return (\n    <ModalContainer minWidth={minWidth} {...props}>\n      <ModalHeader background={getThemeValue(`colors.${headerBackground}`, headerBackground)(theme)}>\n        <ModalTitle>\n          {onBack && <ModalBackButton onBack={onBack} />}\n          <Heading>{title}</Heading>\n        </ModalTitle>\n        {!hideCloseButton && <ModalCloseButton onDismiss={onDismiss} />}\n      </ModalHeader>\n      <ModalBody p={bodyPadding}>{children}</ModalBody>\n    </ModalContainer>\n  )\n}\n\nexport default Modal\n","import React, { createContext, useState } from 'react'\nimport styled from 'styled-components'\nimport Overlay from '../../components/Overlay/Overlay'\nimport { Handler } from './types'\n\ninterface ModalsContext {\n  isOpen: boolean\n  nodeId: string\n  modalNode: React.ReactNode\n  setModalNode: React.Dispatch<React.SetStateAction<React.ReactNode>>\n  onPresent: (node: React.ReactNode, newNodeId: string) => void\n  onDismiss: Handler\n  setCloseOnOverlayClick: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nconst ModalWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: ${({ theme }) => theme.zIndices.modal - 1};\n`\n\nexport const Context = createContext<ModalsContext>({\n  isOpen: false,\n  nodeId: '',\n  modalNode: null,\n  setModalNode: () => null,\n  onPresent: () => null,\n  onDismiss: () => null,\n  setCloseOnOverlayClick: () => true,\n})\n\nconst ModalProvider: React.FC = ({ children }) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const [modalNode, setModalNode] = useState<React.ReactNode>()\n  const [nodeId, setNodeId] = useState('')\n  const [closeOnOverlayClick, setCloseOnOverlayClick] = useState(true)\n\n  const handlePresent = (node: React.ReactNode, newNodeId: string) => {\n    setModalNode(node)\n    setIsOpen(true)\n    setNodeId(newNodeId)\n  }\n\n  const handleDismiss = () => {\n    setModalNode(undefined)\n    setIsOpen(false)\n    setNodeId('')\n  }\n\n  const handleOverlayDismiss = () => {\n    if (closeOnOverlayClick) {\n      handleDismiss()\n    }\n  }\n\n  return (\n    <Context.Provider\n      value={{\n        isOpen,\n        nodeId,\n        modalNode,\n        setModalNode,\n        onPresent: handlePresent,\n        onDismiss: handleDismiss,\n        setCloseOnOverlayClick,\n      }}\n    >\n      {isOpen && (\n        <ModalWrapper>\n          <Overlay show onClick={handleOverlayDismiss} />\n          {React.isValidElement(modalNode) &&\n            React.cloneElement(modalNode, {\n              onDismiss: handleDismiss,\n            })}\n        </ModalWrapper>\n      )}\n      {children}\n    </Context.Provider>\n  )\n}\n\nexport default ModalProvider\n","import React, { useCallback, useContext, useEffect } from 'react'\nimport get from 'lodash/get'\nimport { Context } from './ModalContext'\nimport { Handler } from './types'\n\nconst useModal = (\n  modal: React.ReactNode,\n  closeOnOverlayClick = true,\n  updateOnPropsChange = false,\n  modalId = 'defaultNodeId',\n): [Handler, Handler] => {\n  const { isOpen, nodeId, modalNode, setModalNode, onPresent, onDismiss, setCloseOnOverlayClick } = useContext(Context)\n  const onPresentCallback = useCallback(() => {\n    onPresent(modal, modalId)\n  }, [modal, modalId, onPresent])\n\n  // Updates the \"modal\" component if props are changed\n  // Use carefully since it might result in unnecessary rerenders\n  // Typically if modal is staic there is no need for updates, use when you expect props to change\n  useEffect(() => {\n    // NodeId is needed in case there are 2 useModal hooks on the same page and one has updateOnPropsChange\n    if (updateOnPropsChange && isOpen && nodeId === modalId) {\n      const modalProps = get(modal, 'props')\n      const oldModalProps = get(modalNode, 'props')\n      // Note: I tried to use lodash isEqual to compare props but it is giving false-negatives too easily\n      // For example ConfirmSwapModal in exchange has ~500 lines prop object that stringifies to same string\n      // and online diff checker says both objects are identical but lodash isEqual thinks they are different\n      // Do not try to replace JSON.stringify with isEqual, high risk of infinite rerenders\n      // TODO: Find a good way to handle modal updates, this whole flow is just backwards-compatible workaround,\n      // would be great to simplify the logic here\n      if (modalProps && oldModalProps && JSON.stringify(modalProps) !== JSON.stringify(oldModalProps)) {\n        setModalNode(modal)\n      }\n    }\n  }, [updateOnPropsChange, nodeId, modalId, isOpen, modal, modalNode, setModalNode])\n\n  useEffect(() => {\n    setCloseOnOverlayClick(closeOnOverlayClick)\n  }, [closeOnOverlayClick, setCloseOnOverlayClick])\n\n  return [onPresentCallback, onDismiss]\n}\n\nexport default useModal\n","import React from 'react'\nimport Svg from '../../../components/Svg/Svg'\nimport { SvgProps } from '../../../components/Svg/types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M13.7803 2.71967C14.0732 3.01256 14.0732 3.48744 13.7803 3.78033L12.8107 4.75L14.0307 5.96999H20C21.1 5.96999 22 6.86999 22 7.96999V12.73C21.28 12.25 20.43 11.97 19.5 11.97C17.19 11.97 15.3 13.73 15.05 15.97H11.91C11.96 15.64 12 15.31 12 14.97C12 13.43 11.41 12.03 10.46 10.97H11C12.1 10.97 13 10.07 13 8.96999V7.06068L11.75 5.81066L10.7803 6.78033C10.4874 7.07322 10.0126 7.07322 9.71967 6.78033C9.42678 6.48744 9.42678 6.01256 9.71967 5.71967L12.7197 2.71967C13.0126 2.42678 13.4874 2.42678 13.7803 2.71967Z\" />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M11 15C11 17.7614 8.76142 20 6 20C3.23858 20 1 17.7614 1 15C1 12.2386 3.23858 10 6 10C8.76142 10 11 12.2386 11 15ZM9 15C9 16.6569 7.65685 18 6 18C4.34315 18 3 16.6569 3 15C3 13.3431 4.34315 12 6 12C7.65685 12 9 13.3431 9 15Z\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M19.5 12.97C17.57 12.97 16 14.54 16 16.47C16 18.4 17.57 19.97 19.5 19.97C21.43 19.97 23 18.4 23 16.47C23 14.54 21.43 12.97 19.5 12.97ZM19.5 17.97C18.67 17.97 18 17.3 18 16.47C18 15.64 18.67 14.97 19.5 14.97C20.33 14.97 21 15.64 21 16.47C21 17.3 20.33 17.97 19.5 17.97Z\"\n      />\n      <path d=\"M9 8.96997H4C3.45 8.96997 3 8.52997 3 7.96997C3 7.41997 3.45 6.96997 4 6.96997H7C8.1 6.96997 9 7.86997 9 8.96997Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../../../components/Svg/Svg'\nimport { SvgProps } from '../../../components/Svg/types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M12 12.75C13.63 12.75 15.07 13.14 16.24 13.65C17.32 14.13 18 15.21 18 16.38V17C18 17.55 17.55 18 17 18H7C6.45 18 6 17.55 6 17V16.39C6 15.21 6.68 14.13 7.76 13.66C8.93 13.14 10.37 12.75 12 12.75ZM4 13C5.1 13 6 12.1 6 11C6 9.9 5.1 9 4 9C2.9 9 2 9.9 2 11C2 12.1 2.9 13 4 13ZM5.13 14.1C4.76 14.04 4.39 14 4 14C3.01 14 2.07 14.21 1.22 14.58C0.48 14.9 0 15.62 0 16.43V17C0 17.55 0.45 18 1 18H4.5V16.39C4.5 15.56 4.73 14.78 5.13 14.1ZM20 13C21.1 13 22 12.1 22 11C22 9.9 21.1 9 20 9C18.9 9 18 9.9 18 11C18 12.1 18.9 13 20 13ZM24 16.43C24 15.62 23.52 14.9 22.78 14.58C21.93 14.21 20.99 14 20 14C19.61 14 19.24 14.04 18.87 14.1C19.27 14.78 19.5 15.56 19.5 16.39V18H23C23.55 18 24 17.55 24 17V16.43ZM12 6C13.66 6 15 7.34 15 9C15 10.66 13.66 12 12 12C10.34 12 9 10.66 9 9C9 7.34 10.34 6 12 6Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../../../components/Svg/Svg'\nimport { SvgProps } from '../../../components/Svg/types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M4 18H20C20.55 18 21 17.55 21 17C21 16.45 20.55 16 20 16H4C3.45 16 3 16.45 3 17C3 17.55 3.45 18 4 18ZM4 13H20C20.55 13 21 12.55 21 12C21 11.45 20.55 11 20 11H4C3.45 11 3 11.45 3 12C3 12.55 3.45 13 4 13ZM3 7C3 7.55 3.45 8 4 8H20C20.55 8 21 7.55 21 7C21 6.45 20.55 6 20 6H4C3.45 6 3 6.45 3 7Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../../../components/Svg/Svg'\nimport { SvgProps } from '../../../components/Svg/types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M4 18H15C15.55 18 16 17.55 16 17C16 16.45 15.55 16 15 16H4C3.45 16 3 16.45 3 17C3 17.55 3.45 18 4 18ZM4 13H12C12.55 13 13 12.55 13 12C13 11.45 12.55 11 12 11H4C3.45 11 3 11.45 3 12C3 12.55 3.45 13 4 13ZM3 7C3 7.55 3.45 8 4 8H15C15.55 8 16 7.55 16 7C16 6.45 15.55 6 15 6H4C3.45 6 3 6.45 3 7ZM20.3 14.88L17.42 12L20.3 9.12C20.69 8.73 20.69 8.1 20.3 7.71C19.91 7.32 19.28 7.32 18.89 7.71L15.3 11.3C14.91 11.69 14.91 12.32 15.3 12.71L18.89 16.3C19.28 16.69 19.91 16.69 20.3 16.3C20.68 15.91 20.69 15.27 20.3 14.88Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../../../components/Svg/Svg'\nimport { SvgProps } from '../../../components/Svg/types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M9.99998 19V14H14V19C14 19.55 14.45 20 15 20H18C18.55 20 19 19.55 19 19V12H20.7C21.16 12 21.38 11.43 21.03 11.13L12.67 3.59997C12.29 3.25997 11.71 3.25997 11.33 3.59997L2.96998 11.13C2.62998 11.43 2.83998 12 3.29998 12H4.99998V19C4.99998 19.55 5.44998 20 5.99998 20H8.99998C9.54998 20 9.99998 19.55 9.99998 19Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../../../components/Svg/Svg'\nimport { SvgProps } from '../../../components/Svg/types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M21.9 8.89L20.85 4.52C20.63 3.62 19.85 3 18.94 3H16.73H14.72H13H11H9.28001H7.26001H5.05001C4.15001 3 3.36001 3.63 3.15001 4.52L2.10001 8.89C1.86001 9.91 2.08001 10.95 2.72001 11.77C2.80001 11.88 2.91001 11.96 3.00001 12.06V19C3.00001 20.1 3.90001 21 5.00001 21H19C20.1 21 21 20.1 21 19V12.06C21.09 11.97 21.2 11.88 21.28 11.78C21.92 10.96 22.15 9.91 21.9 8.89ZM7.02001 5L6.44001 9.86C6.36001 10.51 5.84001 11 5.23001 11C4.74001 11 4.43001 10.71 4.30001 10.53C4.04001 10.2 3.95001 9.77 4.05001 9.36L5.05001 5H7.02001ZM18.91 4.99L19.96 9.36C20.06 9.78 19.97 10.2 19.71 10.53C19.57 10.71 19.27 11 18.77 11C18.16 11 17.63 10.51 17.56 9.86L16.98 5L18.91 4.99ZM15.51 9.52C15.56 9.91 15.44 10.3 15.18 10.59C14.95 10.85 14.63 11 14.22 11C13.55 11 13 10.41 13 9.69V5H14.96L15.51 9.52ZM11 9.69C11 10.41 10.45 11 9.71001 11C9.37001 11 9.06001 10.85 8.82001 10.59C8.57001 10.3 8.45001 9.91 8.49001 9.52L9.04001 5H11V9.69ZM18 19H6.00001C5.45001 19 5.00001 18.55 5.00001 18V12.97C5.08001 12.98 5.15001 13 5.23001 13C6.10001 13 6.89001 12.64 7.47001 12.05C8.07001 12.65 8.87001 13 9.78001 13C10.65 13 11.43 12.64 12.01 12.07C12.6 12.64 13.4 13 14.3 13C15.14 13 15.94 12.65 16.54 12.05C17.12 12.64 17.91 13 18.78 13C18.86 13 18.93 12.98 19.01 12.97V18C19 18.55 18.55 19 18 19Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../../../components/Svg/Svg'\nimport { SvgProps } from '../../../components/Svg/types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M5 7C5 6.44772 4.55228 6 4 6C3.44772 6 3 6.44772 3 7V18C3 19.1046 3.89543 20 5 20H20C20.5523 20 21 19.5523 21 19C21 18.4477 20.5523 18 20 18H5V7Z\" />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M19 17H7C6.44772 17 6 16.5523 6 16V12C6 11.4477 6.44772 11 7 11H10V10C10 9.44772 10.4477 9 11 9H14V7C14 6.44772 14.4477 6 15 6H19C19.5523 6 20 6.44772 20 7V16C20 16.5523 19.5523 17 19 17ZM16 8H18V15H16V8ZM12 15H14V11H12V15ZM10 13H8V15H10V13Z\"\n      />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../../../components/Svg/Svg'\nimport { SvgProps } from '../../../components/Svg/types'\n\ninterface LogoProps extends SvgProps {\n  isDark: boolean\n}\n\nconst Logo: React.FC<LogoProps> = ({ isDark, ...props }) => {\n  const textColor = isDark ? '#FFFFFF' : '#000000'\n  return (\n    <Svg viewBox=\"0 0 160 26\" {...props}>\n      <path\n        d=\"M30.8524 19.7569C30.4803 19.7569 30.2173 19.6799 30.0633 19.5259C29.9221 19.372 29.8516 19.1282 29.8516 18.7946V7.65066C29.8516 7.31705 29.9285 7.07326 30.0825 6.91928C30.2365 6.75248 30.4931 6.66907 30.8524 6.66907H35.5679C37.3642 6.66907 38.6858 7.04759 39.5327 7.80463C40.3796 8.56167 40.803 9.69082 40.803 11.1921C40.803 12.6805 40.3796 13.8032 39.5327 14.5603C38.6987 15.3045 37.3771 15.6766 35.5679 15.6766H33.7394V18.7946C33.7394 19.1282 33.6624 19.372 33.5085 19.5259C33.3545 19.6799 33.0914 19.7569 32.7193 19.7569H30.8524ZM35.2599 12.8858C35.786 12.8858 36.1902 12.7446 36.4725 12.4624C36.7676 12.1801 36.9151 11.7566 36.9151 11.1921C36.9151 10.6147 36.7676 10.1848 36.4725 9.90253C36.1902 9.62025 35.786 9.47911 35.2599 9.47911H33.7394V12.8858H35.2599Z\"\n        fill={textColor}\n      />\n      <path\n        d=\"M45.3484 20.0456C44.1423 20.0456 43.1735 19.6607 42.4421 18.8908C41.7236 18.1081 41.3643 17.011 41.3643 15.5996C41.3643 14.5218 41.6081 13.5787 42.0957 12.7703C42.5961 11.9619 43.2954 11.3396 44.1936 10.9034C45.1046 10.4543 46.1503 10.2297 47.3308 10.2297C48.306 10.2297 49.1657 10.3388 49.9099 10.5569C50.6669 10.7622 51.3598 11.0638 51.9885 11.4615V19.1602C51.9885 19.404 51.9436 19.5644 51.8538 19.6414C51.764 19.7184 51.5844 19.7569 51.3149 19.7569H49.3517C49.2106 19.7569 49.1015 19.7376 49.0245 19.6992C48.9475 19.6478 48.8834 19.5708 48.8321 19.4682L48.5819 18.8908C48.2097 19.2886 47.7607 19.5773 47.2346 19.7569C46.7213 19.9494 46.0926 20.0456 45.3484 20.0456ZM46.7919 17.428C47.2923 17.428 47.6837 17.3061 47.966 17.0623C48.2482 16.8186 48.3894 16.4721 48.3894 16.023V13.0205C48.1456 12.905 47.8376 12.8473 47.4655 12.8473C46.7855 12.8473 46.2402 13.0847 45.8296 13.5594C45.4318 14.0342 45.2329 14.7014 45.2329 15.5611C45.2329 16.8057 45.7526 17.428 46.7919 17.428Z\"\n        fill={textColor}\n      />\n      <path\n        d=\"M54.667 19.7569C54.2949 19.7569 54.0319 19.6799 53.8779 19.5259C53.7239 19.372 53.6469 19.1282 53.6469 18.7946V11.1151C53.6469 10.8841 53.6854 10.7301 53.7624 10.6532C53.8522 10.5633 54.0318 10.5184 54.3013 10.5184H56.2837C56.4377 10.5184 56.5532 10.5441 56.6302 10.5954C56.72 10.6339 56.7713 10.7109 56.7841 10.8264L56.8804 11.4038C57.2397 11.0445 57.708 10.7622 58.2854 10.5569C58.8756 10.3388 59.53 10.2297 60.2486 10.2297C61.2879 10.2297 62.1283 10.5248 62.7699 11.1151C63.4115 11.6925 63.7322 12.5522 63.7322 13.6942V18.7946C63.7322 19.1282 63.6552 19.372 63.5013 19.5259C63.3601 19.6799 63.1035 19.7569 62.7314 19.7569H60.8645C60.4924 19.7569 60.2229 19.6799 60.0561 19.5259C59.9021 19.372 59.8251 19.1282 59.8251 18.7946V13.9444C59.8251 13.5594 59.7417 13.2836 59.5749 13.1167C59.4081 12.9499 59.1451 12.8665 58.7858 12.8665C58.4009 12.8665 58.0929 12.9692 57.862 13.1745C57.6438 13.3798 57.5348 13.6621 57.5348 14.0213V18.7946C57.5348 19.1282 57.4578 19.372 57.3038 19.5259C57.1627 19.6799 56.906 19.7569 56.5339 19.7569H54.667Z\"\n        fill={textColor}\n      />\n      <path\n        d=\"M70.5354 20.0456C68.739 20.0456 67.3532 19.6286 66.3781 18.7946C65.4029 17.9605 64.9153 16.748 64.9153 15.1569C64.9153 14.1817 65.1399 13.322 65.5889 12.5778C66.038 11.8336 66.686 11.2562 67.5329 10.8456C68.3926 10.435 69.4062 10.2297 70.5739 10.2297C71.4592 10.2297 72.2034 10.3131 72.8065 10.4799C73.4224 10.6467 73.9677 10.9034 74.4425 11.2498C74.5836 11.3396 74.6542 11.4551 74.6542 11.5963C74.6542 11.6989 74.6029 11.8336 74.5002 12.0004L73.7111 13.367C73.6213 13.5466 73.5122 13.6364 73.3839 13.6364C73.3069 13.6364 73.185 13.5851 73.0182 13.4824C72.6718 13.2643 72.3446 13.1039 72.0366 13.0013C71.7415 12.8986 71.3694 12.8473 70.9203 12.8473C70.2787 12.8473 69.7591 13.0526 69.3613 13.4632C68.9764 13.8738 68.7839 14.4384 68.7839 15.1569C68.7839 15.8883 68.9828 16.4529 69.3806 16.8506C69.7783 17.2356 70.3237 17.428 71.0165 17.428C71.4271 17.428 71.7992 17.3703 72.1329 17.2548C72.4665 17.1393 72.8065 16.9789 73.1529 16.7736C73.3326 16.671 73.4609 16.6197 73.5379 16.6197C73.6534 16.6197 73.756 16.7095 73.8458 16.8891L74.7119 18.3711C74.7761 18.4994 74.8082 18.6021 74.8082 18.6791C74.8082 18.7946 74.7312 18.9036 74.5772 19.0063C74.0383 19.3527 73.4481 19.6093 72.8065 19.7761C72.1778 19.9558 71.4207 20.0456 70.5354 20.0456Z\"\n        fill={textColor}\n      />\n      <path\n        d=\"M79.6881 20.0456C78.482 20.0456 77.5132 19.6607 76.7819 18.8908C76.0633 18.1081 75.704 17.011 75.704 15.5996C75.704 14.5218 75.9478 13.5787 76.4354 12.7703C76.9358 11.9619 77.6351 11.3396 78.5333 10.9034C79.4443 10.4543 80.4901 10.2297 81.6705 10.2297C82.6457 10.2297 83.5054 10.3388 84.2496 10.5569C85.0067 10.7622 85.6995 11.0638 86.3283 11.4615V19.1602C86.3283 19.404 86.2834 19.5644 86.1935 19.6414C86.1037 19.7184 85.9241 19.7569 85.6546 19.7569H83.6915C83.5503 19.7569 83.4412 19.7376 83.3643 19.6992C83.2873 19.6478 83.2231 19.5708 83.1718 19.4682L82.9216 18.8908C82.5495 19.2886 82.1004 19.5773 81.5743 19.7569C81.0611 19.9494 80.4323 20.0456 79.6881 20.0456ZM81.1316 17.428C81.632 17.428 82.0234 17.3061 82.3057 17.0623C82.588 16.8186 82.7291 16.4721 82.7291 16.023V13.0205C82.4853 12.905 82.1774 12.8473 81.8053 12.8473C81.1252 12.8473 80.5799 13.0847 80.1693 13.5594C79.7715 14.0342 79.5726 14.7014 79.5726 15.5611C79.5726 16.8057 80.0923 17.428 81.1316 17.428Z\"\n        fill={textColor}\n      />\n      <path\n        d=\"M98.4184 19.0255C98.5082 19.1282 98.5531 19.2436 98.5531 19.372C98.5531 19.4874 98.5146 19.5837 98.4377 19.6607C98.3607 19.7248 98.258 19.7569 98.1297 19.7569H95.1465C94.9668 19.7569 94.8321 19.7441 94.7423 19.7184C94.6653 19.6799 94.5819 19.6093 94.4921 19.5067L91.8745 15.946V18.7946C91.8745 19.1282 91.7975 19.372 91.6435 19.5259C91.4896 19.6799 91.2265 19.7569 90.8544 19.7569H88.9875C88.6154 19.7569 88.3523 19.6799 88.1984 19.5259C88.0572 19.372 87.9866 19.1282 87.9866 18.7946V7.65066C87.9866 7.31705 88.0636 7.07326 88.2176 6.91928C88.3716 6.75248 88.6282 6.66907 88.9875 6.66907H90.8544C91.2265 6.66907 91.4896 6.75248 91.6435 6.91928C91.7975 7.07326 91.8745 7.31705 91.8745 7.65066V14.0983L94.4151 10.7879C94.4921 10.6852 94.5755 10.6147 94.6653 10.5762C94.7551 10.5377 94.8898 10.5184 95.0695 10.5184H98.0527C98.181 10.5184 98.2773 10.5569 98.3414 10.6339C98.4184 10.6981 98.4569 10.7879 98.4569 10.9034C98.4569 11.0317 98.412 11.1472 98.3222 11.2498L95.031 15.0222L98.4184 19.0255Z\"\n        fill={textColor}\n      />\n      <path\n        d=\"M104.668 20.0456C103.59 20.0456 102.628 19.866 101.781 19.5067C100.947 19.1474 100.286 18.6085 99.7985 17.89C99.3109 17.1714 99.0671 16.2925 99.0671 15.2531C99.0671 13.6236 99.529 12.379 100.453 11.5193C101.377 10.6596 102.705 10.2297 104.437 10.2297C106.131 10.2297 107.414 10.6532 108.286 11.5C109.172 12.334 109.614 13.4953 109.614 14.9837C109.614 15.6252 109.332 15.946 108.767 15.946H102.724C102.724 16.4978 102.929 16.9212 103.34 17.2163C103.763 17.5114 104.398 17.659 105.245 17.659C105.771 17.659 106.208 17.6141 106.554 17.5243C106.913 17.4216 107.273 17.2741 107.632 17.0816C107.786 17.0174 107.889 16.9854 107.94 16.9854C108.055 16.9854 108.152 17.0623 108.229 17.2163L108.883 18.4481C108.947 18.5764 108.979 18.6727 108.979 18.7368C108.979 18.8523 108.902 18.9614 108.748 19.064C108.222 19.4105 107.626 19.6607 106.958 19.8146C106.291 19.9686 105.528 20.0456 104.668 20.0456ZM106.15 14.0406C106.15 13.553 106.009 13.1745 105.726 12.905C105.444 12.6356 105.021 12.5009 104.456 12.5009C103.892 12.5009 103.462 12.642 103.167 12.9243C102.872 13.1937 102.724 13.5658 102.724 14.0406H106.15Z\"\n        fill={textColor}\n      />\n      <path\n        d=\"M116.211 20.0456C115.133 20.0456 114.113 19.9365 113.151 19.7184C112.189 19.4874 111.412 19.1667 110.822 18.7561C110.604 18.6149 110.495 18.4674 110.495 18.3134C110.495 18.2107 110.533 18.1017 110.61 17.9862L111.553 16.4849C111.656 16.331 111.759 16.254 111.861 16.254C111.926 16.254 112.035 16.2989 112.189 16.3887C112.663 16.6582 113.202 16.8763 113.805 17.0431C114.408 17.2099 115.005 17.2933 115.595 17.2933C116.198 17.2933 116.641 17.2035 116.923 17.0238C117.218 16.8442 117.366 16.5555 117.366 16.1577C117.366 15.7728 117.206 15.4713 116.885 15.2531C116.577 15.035 115.993 14.7591 115.133 14.4255C113.837 13.9379 112.824 13.3926 112.092 12.7896C111.374 12.1737 111.015 11.3396 111.015 10.2875C111.015 9.01718 111.47 8.04843 112.381 7.38121C113.292 6.71398 114.505 6.38037 116.019 6.38037C117.071 6.38037 117.969 6.47661 118.713 6.66907C119.47 6.84871 120.112 7.131 120.638 7.51593C120.856 7.68274 120.965 7.83671 120.965 7.97786C120.965 8.06767 120.927 8.17032 120.85 8.2858L119.907 9.78705C119.791 9.94103 119.688 10.018 119.599 10.018C119.534 10.018 119.425 9.97311 119.271 9.88329C118.527 9.3957 117.642 9.15191 116.615 9.15191C116.064 9.15191 115.64 9.24173 115.345 9.42137C115.05 9.601 114.902 9.89612 114.902 10.3067C114.902 10.589 114.979 10.82 115.133 10.9996C115.287 11.1792 115.493 11.3396 115.749 11.4808C116.019 11.6091 116.429 11.7759 116.981 11.9812L117.347 12.1159C118.296 12.488 119.04 12.8473 119.579 13.1937C120.131 13.5273 120.548 13.9444 120.83 14.4448C121.113 14.9324 121.254 15.5483 121.254 16.2925C121.254 17.4344 120.824 18.3455 119.964 19.0255C119.117 19.7056 117.866 20.0456 116.211 20.0456Z\"\n        fill={textColor}\n      />\n      <path\n        d=\"M125.343 19.7569C125.151 19.7569 125.003 19.7248 124.9 19.6607C124.798 19.5965 124.721 19.4682 124.67 19.2757L122.187 10.9611C122.161 10.8841 122.148 10.8264 122.148 10.7879C122.148 10.6083 122.277 10.5184 122.533 10.5184H125.074C125.241 10.5184 125.362 10.5505 125.439 10.6147C125.516 10.666 125.568 10.7558 125.593 10.8841L126.633 15.2531L127.941 11.731C128.006 11.577 128.07 11.4744 128.134 11.423C128.211 11.3589 128.339 11.3268 128.519 11.3268H129.731C129.911 11.3268 130.033 11.3589 130.097 11.423C130.174 11.4744 130.245 11.577 130.309 11.731L131.598 15.2531L132.657 10.8841C132.695 10.7558 132.747 10.666 132.811 10.6147C132.875 10.5505 132.991 10.5184 133.157 10.5184H135.717C135.974 10.5184 136.102 10.6083 136.102 10.7879C136.102 10.8264 136.089 10.8841 136.064 10.9611L133.562 19.2757C133.51 19.4682 133.433 19.5965 133.331 19.6607C133.241 19.7248 133.1 19.7569 132.907 19.7569H131.021C130.841 19.7569 130.707 19.7248 130.617 19.6607C130.527 19.5837 130.45 19.4554 130.386 19.2757L129.116 15.7921L127.845 19.2757C127.794 19.4554 127.717 19.5837 127.614 19.6607C127.524 19.7248 127.39 19.7569 127.21 19.7569H125.343Z\"\n        fill={textColor}\n      />\n      <path\n        d=\"M140.981 20.0456C139.775 20.0456 138.806 19.6607 138.075 18.8908C137.356 18.1081 136.997 17.011 136.997 15.5996C136.997 14.5218 137.241 13.5787 137.728 12.7703C138.229 11.9619 138.928 11.3396 139.826 10.9034C140.737 10.4543 141.783 10.2297 142.963 10.2297C143.938 10.2297 144.798 10.3388 145.542 10.5569C146.299 10.7622 146.992 11.0638 147.621 11.4615V19.1602C147.621 19.404 147.576 19.5644 147.486 19.6414C147.396 19.7184 147.217 19.7569 146.947 19.7569H144.984C144.843 19.7569 144.734 19.7376 144.657 19.6992C144.58 19.6478 144.516 19.5708 144.465 19.4682L144.214 18.8908C143.842 19.2886 143.393 19.5773 142.867 19.7569C142.354 19.9494 141.725 20.0456 140.981 20.0456ZM142.424 17.428C142.925 17.428 143.316 17.3061 143.598 17.0623C143.881 16.8186 144.022 16.4721 144.022 16.023V13.0205C143.778 12.905 143.47 12.8473 143.098 12.8473C142.418 12.8473 141.873 13.0847 141.462 13.5594C141.064 14.0342 140.865 14.7014 140.865 15.5611C140.865 16.8057 141.385 17.428 142.424 17.428Z\"\n        fill={textColor}\n      />\n      <path\n        d=\"M150.28 23.6447C149.908 23.6447 149.645 23.5678 149.491 23.4138C149.35 23.2598 149.279 23.016 149.279 22.6824V11.654C149.857 11.2434 150.582 10.9034 151.454 10.6339C152.327 10.3645 153.238 10.2297 154.187 10.2297C158.062 10.2297 160 11.8721 160 15.1569C160 16.6453 159.589 17.8322 158.768 18.7176C157.947 19.6029 156.786 20.0456 155.284 20.0456C154.861 20.0456 154.45 19.9943 154.053 19.8916C153.668 19.789 153.347 19.6478 153.09 19.4682V22.6824C153.09 23.016 153.013 23.2598 152.859 23.4138C152.705 23.5678 152.442 23.6447 152.07 23.6447H150.28ZM154.457 17.4473C155.009 17.4473 155.419 17.242 155.689 16.8314C155.971 16.408 156.112 15.8434 156.112 15.1377C156.112 14.3036 155.945 13.7198 155.612 13.3862C155.291 13.0398 154.79 12.8665 154.11 12.8665C153.674 12.8665 153.328 12.9243 153.071 13.0398V16.1C153.071 16.5363 153.193 16.8699 153.437 17.1008C153.681 17.3318 154.021 17.4473 154.457 17.4473Z\"\n        fill={textColor}\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M4.38998 4.50033C4.01476 2.49106 5.55649 0.634766 7.60049 0.634766C9.40427 0.634766 10.8665 2.09701 10.8665 3.90078V7.92728C11.3177 7.89544 11.7761 7.87911 12.2404 7.87911C12.6865 7.87911 13.1272 7.89418 13.5612 7.9236V3.90078C13.5612 2.09701 15.0234 0.634766 16.8272 0.634766C18.8712 0.634766 20.4129 2.49106 20.0377 4.50033L19.1539 9.23326C22.1872 10.5576 24.4809 12.8577 24.4809 15.748V17.4966C24.4809 19.8734 22.9085 21.8634 20.7102 23.2068C18.4948 24.5606 15.4978 25.3654 12.2404 25.3654C8.98304 25.3654 5.98604 24.5606 3.77065 23.2068C1.57242 21.8634 0 19.8734 0 17.4966V15.748C0 12.873 2.2701 10.5817 5.27785 9.25477L4.38998 4.50033ZM18.0212 9.85508L19.0555 4.3169C19.3159 2.92236 18.2459 1.63399 16.8272 1.63399C15.5753 1.63399 14.5604 2.64886 14.5604 3.90078V9.02479C14.2324 8.98273 13.8991 8.9494 13.5612 8.92524C13.128 8.89426 12.6873 8.87833 12.2404 8.87833C11.7753 8.87833 11.3168 8.89559 10.8665 8.92912C10.5286 8.95429 10.1953 8.98862 9.86729 9.03169V3.90078C9.86729 2.64886 8.85241 1.63399 7.60049 1.63399C6.18184 1.63399 5.11179 2.92235 5.37222 4.3169L6.40988 9.87345C3.16599 11.0784 0.999219 13.2586 0.999219 15.748V17.4966C0.999219 21.2906 6.03208 24.3662 12.2404 24.3662C18.4488 24.3662 23.4817 21.2906 23.4817 17.4966V15.748C23.4817 13.2458 21.2927 11.0562 18.0212 9.85508Z\"\n        fill=\"#633001\"\n      />\n      <path\n        d=\"M23.4815 17.4967C23.4815 21.2907 18.4486 24.3663 12.2402 24.3663C6.03189 24.3663 0.999023 21.2907 0.999023 17.4967V15.748H23.4815V17.4967Z\"\n        fill=\"#FEDC90\"\n      />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M5.37202 4.31671C5.1116 2.92216 6.18164 1.63379 7.6003 1.63379C8.85222 1.63379 9.8671 2.64867 9.8671 3.90059V9.0315C10.6321 8.93102 11.4261 8.87813 12.2402 8.87813C13.0356 8.87813 13.8116 8.9286 14.5602 9.02459V3.90059C14.5602 2.64867 15.5751 1.63379 16.827 1.63379C18.2457 1.63379 19.3157 2.92216 19.0553 4.31671L18.021 9.85488C21.2925 11.056 23.4815 13.2457 23.4815 15.7478C23.4815 19.5418 18.4486 22.6174 12.2402 22.6174C6.03189 22.6174 0.999023 19.5418 0.999023 15.7478C0.999023 13.2584 3.16579 11.0782 6.40968 9.87326L5.37202 4.31671Z\"\n        fill=\"#D1884F\"\n      />\n      <path\n        className=\"left-eye\"\n        d=\"M9.11817 15.2485C9.11817 16.2833 8.55896 17.1221 7.86914 17.1221C7.17932 17.1221 6.62012 16.2833 6.62012 15.2485C6.62012 14.2138 7.17932 13.375 7.86914 13.375C8.55896 13.375 9.11817 14.2138 9.11817 15.2485Z\"\n        fill=\"#633001\"\n      />\n      <path\n        className=\"right-eye\"\n        d=\"M17.7363 15.2485C17.7363 16.2833 17.1771 17.1221 16.4873 17.1221C15.7975 17.1221 15.2383 16.2833 15.2383 15.2485C15.2383 14.2138 15.7975 13.375 16.4873 13.375C17.1771 13.375 17.7363 14.2138 17.7363 15.2485Z\"\n        fill=\"#633001\"\n      />\n    </Svg>\n  )\n}\n\nexport default React.memo(Logo, (prev, next) => prev.isDark === next.isDark)\n","import React from 'react'\nimport Svg from '../../../components/Svg/Svg'\nimport { SvgProps } from '../../../components/Svg/types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M4.1534 13.6089L4.15362 13.61C4.77322 16.8113 7.42207 19.3677 10.647 19.8853L10.6502 19.8858C13.0412 20.2736 15.2625 19.6103 16.9422 18.2833C11.3549 16.2878 7.9748 10.3524 9.26266 4.48816C5.69846 5.77194 3.35817 9.51245 4.1534 13.6089ZM10.0083 2.21054C4.76622 3.2533 1.09895 8.36947 2.19006 13.9901C2.97006 18.0201 6.28006 21.2101 10.3301 21.8601C13.8512 22.4311 17.0955 21.1608 19.2662 18.8587C19.2765 18.8478 19.2866 18.837 19.2968 18.8261C19.4385 18.6745 19.5757 18.5184 19.7079 18.3581C19.7105 18.355 19.713 18.3519 19.7156 18.3487C19.8853 18.1426 20.0469 17.9295 20.2001 17.7101C20.4101 17.4001 20.2401 16.9601 19.8701 16.9201C19.5114 16.8796 19.1602 16.8209 18.817 16.7452C18.7964 16.7406 18.7758 16.736 18.7552 16.7313C18.6676 16.7114 18.5804 16.6903 18.4938 16.6681C18.4919 16.6676 18.4901 16.6672 18.4882 16.6667C13.0234 15.2647 9.72516 9.48006 11.4542 4.03417C11.4549 4.03214 11.4555 4.03012 11.4562 4.0281C11.4875 3.92954 11.5205 3.83109 11.5552 3.73278C11.5565 3.72911 11.5578 3.72543 11.5591 3.72175C11.6768 3.38921 11.8136 3.05829 11.9701 2.73005C12.1301 2.39005 11.8501 2.01005 11.4701 2.03005C11.1954 2.04379 10.924 2.06848 10.6561 2.10368C10.6517 2.10427 10.6472 2.10486 10.6428 2.10545C10.4413 2.13221 10.2418 2.16492 10.0446 2.2034C10.0325 2.20576 10.0204 2.20814 10.0083 2.21054Z\"\n      />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../../../components/Svg/Svg'\nimport { SvgProps } from '../../../components/Svg/types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M6 10C4.9 10 4 10.9 4 12C4 13.1 4.9 14 6 14C7.1 14 8 13.1 8 12C8 10.9 7.1 10 6 10ZM18 10C16.9 10 16 10.9 16 12C16 13.1 16.9 14 18 14C19.1 14 20 13.1 20 12C20 10.9 19.1 10 18 10ZM12 10C10.9 10 10 10.9 10 12C10 13.1 10.9 14 12 14C13.1 14 14 13.1 14 12C14 10.9 13.1 10 12 10Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../../../components/Svg/Svg'\nimport { SvgProps } from '../../../components/Svg/types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M12.8533 3.39627C12.4634 2.75821 11.5366 2.75821 11.1467 3.39627L7.42977 9.47855C7.02256 10.1449 7.50213 11 8.28306 11H15.7169C16.4979 11 16.9774 10.1449 16.5702 9.47855L12.8533 3.39627ZM12 5.84L13.93 9H10.06L12 5.84ZM17.5 13C15.01 13 13 15.01 13 17.5C13 19.99 15.01 22 17.5 22C19.99 22 22 19.99 22 17.5C22 15.01 19.99 13 17.5 13ZM17.5 20C16.12 20 15 18.88 15 17.5C15 16.12 16.12 15 17.5 15C18.88 15 20 16.12 20 17.5C20 18.88 18.88 20 17.5 20ZM3 19.5C3 20.6046 3.89543 21.5 5 21.5H9C10.1046 21.5 11 20.6046 11 19.5V15.5C11 14.3954 10.1046 13.5 9 13.5H5C3.89543 13.5 3 14.3954 3 15.5V19.5ZM5 15.5H9V19.5H5V15.5Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../../../components/Svg/Svg'\nimport { SvgProps } from '../../../components/Svg/types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M7.5 13C7.5 11.8954 8.39543 11 9.5 11H12.5C13.6046 11 14.5 11.8954 14.5 13V15C14.5 16.1046 13.6046 17 12.5 17H9.5C8.39543 17 7.5 16.1046 7.5 15V13Z\" />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M9.5 2C8.39543 2 7.5 2.89543 7.5 4V6.49482C7.5 6.93167 7.2113 7.30895 6.81834 7.49981C5.15004 8.31009 4 10.0207 4 12V17C4 19.2091 5.79086 21 8 21H14C16.2091 21 18 19.2091 18 17V12C18 11.4175 17.9004 10.8583 17.7173 10.3385L17.7892 10.297C19.4786 9.32167 20.0574 7.16153 19.082 5.47221C18.1552 3.86682 16.1534 3.25957 14.5 4.05146V4C14.5 2.89543 13.6046 2 12.5 2H9.5ZM9.5 6.25V4H12.5V6.25H9.5ZM9.22663 7.75C8.89473 8.46917 8.30318 9.00205 7.69211 9.29884C6.68638 9.78731 6 10.8154 6 12V17C6 18.1046 6.89543 19 8 19H14C15.1046 19 16 18.1046 16 17V12C16 10.8154 15.3136 9.78731 14.3079 9.29884C13.6968 9.00205 13.1053 8.46917 12.7734 7.75H9.22663ZM14.5 6.3226V6.49482C14.5 6.93167 14.7887 7.30895 15.1817 7.49981C15.7529 7.77726 16.2634 8.16029 16.6878 8.62352L16.7892 8.56495C17.522 8.1419 17.773 7.20495 17.35 6.47221C16.9346 5.75269 16.0213 5.49542 15.2914 5.89229L14.5 6.3226Z\"\n      />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../../../components/Svg/Svg'\nimport { SvgProps } from '../../../components/Svg/types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M5.66 4.2L6.05 4.59C6.44 4.97 6.44 5.61 6.05 5.99L6.04 6C5.65 6.39 5.03 6.39 4.64 6L4.25 5.61C3.86 5.23 3.86 4.6 4.25 4.21L4.26 4.2C4.64 3.82 5.27 3.81 5.66 4.2Z\" />\n      <path d=\"M1.99 10.95H3.01C3.56 10.95 4 11.39 4 11.95V11.96C4 12.51 3.56 12.95 3 12.94H1.99C1.44 12.94 1 12.5 1 11.95V11.94C1 11.39 1.44 10.95 1.99 10.95Z\" />\n      <path d=\"M12 1H12.01C12.56 1 13 1.44 13 1.99V2.96C13 3.51 12.56 3.95 12 3.94H11.99C11.44 3.94 11 3.5 11 2.95V1.99C11 1.44 11.44 1 12 1Z\" />\n      <path d=\"M18.34 4.2C18.73 3.82 19.36 3.82 19.75 4.21C20.14 4.6 20.14 5.22 19.75 5.61L19.36 6C18.98 6.39 18.35 6.39 17.96 6L17.95 5.99C17.56 5.61 17.56 4.98 17.95 4.59L18.34 4.2Z\" />\n      <path d=\"M18.33 19.7L17.94 19.31C17.55 18.92 17.55 18.3 17.95 17.9C18.33 17.52 18.96 17.51 19.35 17.9L19.74 18.29C20.13 18.68 20.13 19.31 19.74 19.7C19.35 20.09 18.72 20.09 18.33 19.7Z\" />\n      <path d=\"M20 11.95V11.94C20 11.39 20.44 10.95 20.99 10.95H22C22.55 10.95 22.99 11.39 22.99 11.94V11.95C22.99 12.5 22.55 12.94 22 12.94H20.99C20.44 12.94 20 12.5 20 11.95Z\" />\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M6 11.95C6 8.64 8.69 5.95 12 5.95C15.31 5.95 18 8.64 18 11.95C18 15.26 15.31 17.95 12 17.95C8.69 17.95 6 15.26 6 11.95ZM12 16C14.2091 16 16 14.2091 16 12C16 9.79086 14.2091 8 12 8C9.79086 8 8 9.79086 8 12C8 14.2091 9.79086 16 12 16Z\"\n      />\n      <path d=\"M12 22.9H11.99C11.44 22.9 11 22.46 11 21.91V20.95C11 20.4 11.44 19.96 11.99 19.96H12C12.55 19.96 12.99 20.4 12.99 20.95V21.91C12.99 22.46 12.55 22.9 12 22.9Z\" />\n      <path d=\"M5.66 19.69C5.27 20.08 4.64 20.08 4.25 19.69C3.86 19.3 3.86 18.68 4.24 18.28L4.63 17.89C5.02 17.5 5.65 17.5 6.04 17.89L6.05 17.9C6.43 18.28 6.44 18.91 6.05 19.3L5.66 19.69Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../../../components/Svg/Svg'\nimport { SvgProps } from '../../../components/Svg/types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M19 5H17C17 3.89543 16.1046 3 15 3H9C7.89543 3 7 3.89543 7 5H5C3.9 5 3 5.9 3 7V8C3 10.55 4.92 12.63 7.39 12.94C8.02 14.44 9.37 15.57 11 15.9V19H8C7.44772 19 7 19.4477 7 20C7 20.5523 7.44772 21 8 21H16C16.5523 21 17 20.5523 17 20C17 19.4477 16.5523 19 16 19H13V15.9C14.63 15.57 15.98 14.44 16.61 12.94C19.08 12.63 21 10.55 21 8V7C21 5.9 20.1 5 19 5ZM5 8V7H7V10.82C5.84 10.4 5 9.3 5 8ZM12 14C10.35 14 9 12.65 9 11V5H15V11C15 12.65 13.65 14 12 14ZM19 8C19 9.3 18.16 10.4 17 10.82V7H19V8Z\" />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../../../components/Svg/Svg'\nimport { SvgProps } from '../../../components/Svg/types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg width=\"28\" height=\"23\" viewBox=\"0 0 28 23\" {...props}>\n      <path\n        d=\"M22.2841 22.741C21.2521 22.921 15.1991 18.2691 15.1991 18.2691C15.1991 18.2691 11.5601 22.1791 10.9991 21.8521C10.1641 21.3671 7.98212 14.0401 7.98212 14.0401C7.98212 14.0401 0.869117 11.858 0.870117 10.888C0.870117 9.15404 25.8471 0.0880449 26.8651 0.759045C28.5901 1.89204 23.9841 22.445 22.2841 22.741Z\"\n        fill=\"#E34561\"\n      />\n      <path\n        opacity=\"0.5\"\n        d=\"M15.2023 18.2701C15.2023 18.2701 12.7253 21.2881 11.2443 21.8541C11.1332 21.8702 11.0203 21.8702 10.9092 21.8541L11.6472 15.3611L15.2023 18.2701Z\"\n        fill=\"#90374B\"\n      />\n      <path\n        d=\"M22.7455 4.62709C23.1305 4.87709 11.6455 15.3611 11.6455 15.3611C11.6455 15.3611 11.4254 21.8241 10.9984 21.8531C10.4604 21.8901 10.2715 21.1801 10.2715 21.1801C10.2715 21.1801 8.95851 17.2441 8.52051 15.8801C8.38551 15.4601 7.98145 14.0431 7.98145 14.0431C7.98145 14.0431 21.7685 3.99409 22.7455 4.62709Z\"\n        fill=\"#90374B\"\n      />\n      <path\n        opacity=\"0.2\"\n        d=\"M23.2728 18.838C23.5843 18.6746 23.9104 18.5407 24.2468 18.4381C24.3558 18.0771 24.4649 17.7001 24.5739 17.3111C23.6045 17.2503 22.6448 17.5336 21.8639 18.1111C21.4419 18.4021 21.7969 19.1111 22.3639 19.6841L22.3279 19.6731C20.6699 19.2581 19.6629 20.3481 18.2559 20.5191C18.6269 20.7781 19.0049 21.036 19.3759 21.281C19.5083 21.2616 19.642 21.251 19.7759 21.2491C19.9169 21.2721 19.8448 21.3491 19.6628 21.4691C20.1628 21.7961 20.6489 22.0901 21.0629 22.3141C21.8298 22.043 22.5669 21.6942 23.2628 21.273C23.4098 20.922 23.5628 20.517 23.7198 20.067C23.4258 19.555 22.8868 19.06 23.2728 18.838Z\"\n        fill=\"#90374B\"\n      />\n      <path\n        opacity=\"0.2\"\n        d=\"M16.0143 18.889C16.1233 18.816 16.2423 18.741 16.3723 18.662C16.6433 18.617 16.9054 18.569 17.1544 18.518C17.3249 18.4993 17.4887 18.4408 17.6327 18.3475C17.7767 18.2541 17.8968 18.1283 17.9835 17.9803C18.0701 17.8322 18.121 17.6658 18.1319 17.4946C18.1428 17.3233 18.1135 17.1519 18.0463 16.994C18.8386 17.166 19.6569 17.182 20.4553 17.041C21.1383 16.841 22.2954 17.141 23.3474 16.781C23.9988 16.3805 24.5468 15.8324 24.9473 15.181C25.3583 14.529 22.9314 13.381 23.0474 12.781C23.1648 12.3785 23.3981 12.0196 23.7183 11.749C24.3982 12.062 25.0584 12.4159 25.6953 12.809C25.7953 12.344 25.9004 11.877 25.9954 11.409C25.4744 11.045 25.9173 10.478 25.2953 9.953C23.7443 8.64 23.0163 7.89303 22.0953 7.85303C21.3263 7.81903 18.2783 6.44701 17.6833 6.33701C17.2313 6.25401 15.5593 5.60601 13.4473 4.93701C13.0927 5.07035 12.7386 5.20367 12.3853 5.33701C13.0393 5.61901 16.0264 7.73001 18.1364 7.90701C18.6454 7.95001 14.3073 8.085 15.3803 8.746C15.8033 9.007 18.8614 9.50502 19.1204 8.86502C19.5124 7.89502 20.7204 9.77202 21.4014 10.378C21.8797 10.763 22.4 11.0927 22.9523 11.361C22.4243 11.461 21.6073 11.685 20.8743 11.817C20.2603 11.928 17.6473 10.172 16.5433 10.461C15.5647 10.551 14.5786 10.5174 13.6083 10.361C14.2523 10.153 14.9083 9.80801 14.3853 9.63101C13.8123 9.43601 10.1763 7.72401 9.43335 7.57501C8.97297 7.43271 8.52375 7.25656 8.08936 7.048C7.60936 7.248 7.14133 7.44802 6.68933 7.63702C7.55233 7.73702 8.27735 7.82302 8.48035 7.86102C9.57235 8.06102 13.7654 9.36103 12.8914 10.267C11.9214 10.155 9.46433 9.90303 9.24133 9.92603C9.08933 9.94303 8.95531 9.95701 8.84131 9.97601C7.66241 9.32273 6.39183 8.85077 5.07233 8.57602C4.96433 8.56702 4.79835 8.56403 4.59235 8.56403C3.83135 8.91703 3.15832 9.248 2.60132 9.548C3.75432 9.485 5.01036 9.52703 4.18536 10.112C3.87536 10.332 2.22037 10.363 0.914368 10.731C0.882804 10.7765 0.864128 10.8297 0.860352 10.885C0.860352 11.156 1.41533 11.522 2.21533 11.908C2.21674 11.8742 2.2221 11.8406 2.23132 11.808C2.39532 11.236 5.67233 10.528 5.97833 9.95102C6.17833 9.58202 8.53634 10.49 9.00134 10.576C9.21634 10.717 9.51137 10.891 9.90137 11.111C10.8286 11.2967 11.7815 11.3157 12.7153 11.167C13.9186 11.384 15.1538 11.3499 16.3433 11.067C16.7013 10.906 18.8953 11.981 19.2603 12.048C19.5603 12.104 22.0843 13.854 23.4703 14.511C24.3793 14.942 23.2264 15.702 22.9304 15.878C22.7374 15.993 20.7864 15.747 19.7664 16.385C19.4074 16.609 16.2813 15.33 15.1473 15.355C14.9443 15.3704 14.7433 15.4063 14.5474 15.462C13.1814 15.052 9.71732 15.569 8.43732 15.545C8.50032 15.745 8.56833 15.956 8.63733 16.178C11.3373 16.094 14.7024 16.194 15.7504 16.6C16.4444 16.9 17.3163 17.39 16.1033 17.536C15.5583 17.601 15.0214 18.2 14.2354 18.071C12.5755 17.9052 10.9049 17.8761 9.24036 17.984C9.34936 18.299 9.46136 18.613 9.57336 18.919C10.7976 19.0388 12.0293 19.0635 13.2573 18.993C11.3883 19.714 10.6323 20.88 11.5433 21.129C11.7368 21.1773 11.9337 21.2107 12.1323 21.229C13.2021 20.2955 14.2225 19.3068 15.1893 18.267C15.1893 18.267 15.5173 18.523 16.0143 18.889Z\"\n        fill=\"#90374B\"\n      />\n      <path\n        opacity=\"0.2\"\n        d=\"M7.96515 11.323C7.84415 11.06 7.16516 11.046 6.55316 11.323C5.94116 11.6 5.43912 11.823 5.56012 12.084C5.68112 12.345 6.35214 12.464 6.96014 12.184C7.56814 11.904 8.08615 11.586 7.96515 11.323Z\"\n        fill=\"#90374B\"\n      />\n      <path\n        opacity=\"0.2\"\n        d=\"M24.458 1.18103C24.863 1.54102 25.3122 1.84782 25.7949 2.09402C25.8949 2.13602 26.472 2.28503 27.246 2.47803C27.2491 2.15537 27.2294 1.8329 27.187 1.51303C26.7901 1.31308 26.417 1.06887 26.075 0.785034C25.665 0.863034 25.117 0.99803 24.458 1.18103Z\"\n        fill=\"#90374B\"\n      />\n      <path\n        opacity=\"0.2\"\n        d=\"M23.8801 3.366C22.8447 3.12776 21.8415 2.76722 20.8912 2.29199C20.4799 2.42533 20.0558 2.56633 19.6191 2.715L19.7281 2.793C20.4281 3.281 20.9482 3.12999 21.9872 3.58499C23.1142 4.07899 24.2672 4.62801 24.3712 4.61801C25.0832 4.54601 25.6252 5.49902 26.9092 6.21802C27.0092 5.53102 27.0842 4.88199 27.1392 4.28799C26.1103 3.8052 25.0094 3.49377 23.8801 3.366Z\"\n        fill=\"#90374B\"\n      />\n      <path\n        opacity=\"0.2\"\n        d=\"M16.397 5.35897C16.84 5.49997 17.2261 5.52897 17.3131 5.25897C17.4001 4.98897 17.1131 4.64997 16.6671 4.50997C16.2211 4.36997 15.7331 4.38097 15.7081 4.75097C15.6881 5.03397 15.954 5.21797 16.397 5.35897Z\"\n        fill=\"#90374B\"\n      />\n      <path\n        opacity=\"0.2\"\n        d=\"M24.1601 7.15399C24.7731 7.39199 25.32 7.454 25.481 7.04C25.642 6.626 25.275 6.096 24.662 5.859C24.049 5.622 23.3031 5.50398 23.0241 6.00198C22.6811 6.60798 23.5471 6.91699 24.1601 7.15399Z\"\n        fill=\"#90374B\"\n      />\n      <path\n        d=\"M10.009 6.28299C9.54274 6.52997 9.10647 6.82997 8.70898 7.177C6.54898 9.112 6.17907 11.594 5.24707 13.116C5.54707 13.224 5.84702 13.327 6.12402 13.422C6.16902 13.357 6.21403 13.292 6.25903 13.228C7.18403 11.548 7.95906 9.22801 10.2111 7.46701C12.4911 5.68901 16.1551 5.51399 18.4301 3.66199C18.6836 3.47405 18.8828 3.22215 19.0071 2.93201C16.1761 3.90701 12.925 5.11999 10.009 6.28299Z\"\n        fill=\"#F0DEDA\"\n      />\n      <path\n        d=\"M21.709 15.7641C21.635 15.5401 20.965 15.5641 20.209 15.8091C19.453 16.0541 18.909 16.441 18.981 16.664C19.053 16.887 19.725 16.8641 20.481 16.6191C21.237 16.3741 21.783 15.9881 21.709 15.7641Z\"\n        fill=\"#F0DEDA\"\n      />\n      <path\n        d=\"M2.87891 9.41406C2.70727 10.2526 2.2858 11.0196 1.66992 11.614C1.84092 11.714 2.0339 11.8141 2.2439 11.9141C2.2439 11.9141 2.2439 11.914 2.2439 11.907C2.4319 11.998 2.63393 12.0901 2.84393 12.1821C3.48618 11.7564 4.0225 11.1894 4.4118 10.5245C4.80111 9.85963 5.03304 9.11446 5.0899 8.34607C4.2499 8.72807 3.50291 9.08806 2.87891 9.41406Z\"\n        fill=\"#F0DEDA\"\n      />\n      <path\n        d=\"M21.78 17.875C19.9693 18.0314 18.1737 18.3303 16.41 18.769C16.286 18.815 16.164 18.869 16.043 18.927C16.517 19.277 17.135 19.727 17.801 20.195C19.336 19.33 21.807 19.169 23.537 18.42C23.8097 18.302 24.082 18.1726 24.354 18.032C24.4267 17.7873 24.499 17.5366 24.571 17.28C24.619 17.1086 24.6673 16.9353 24.7159 16.76C23.8177 17.3163 22.8211 17.6948 21.78 17.875Z\"\n        fill=\"#F0DEDA\"\n      />\n      <path\n        d=\"M24.9517 9.59506C23.9647 7.70306 24.1137 5.03806 24.9427 2.62906C25.1227 2.10606 25.3777 1.51406 25.6607 0.883057C25.4394 0.933057 25.193 0.994071 24.9217 1.06607C24.6667 1.59307 24.4018 2.18306 24.1218 2.91806C23.2334 5.12941 23.0489 7.56102 23.5937 9.88104C23.9373 11.0741 24.6783 12.1139 25.6938 12.8281C25.7938 12.3631 25.8987 11.8961 25.9937 11.4281C26.0227 11.2881 26.0517 11.148 26.0807 11.007C25.6187 10.6118 25.2356 10.1327 24.9517 9.59506Z\"\n        fill=\"#F0DEDA\"\n      />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../../../components/Svg/Svg'\nimport { SvgProps } from '../../../components/Svg/types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M14.3137 3L15.2631 3.94934C14.5597 5.19866 14.7398 6.81097 15.8032 7.87441C16.8667 8.93786 18.479 9.11792 19.7283 8.4146L20.6777 9.36396L17.6569 12.3848L17.1287 11.8566C16.7382 11.4661 16.105 11.4661 15.7145 11.8566C15.3239 12.2471 15.3239 12.8803 15.7145 13.2708L16.2426 13.799L9.36396 20.6777L8.49923 19.8129C9.71921 18.5286 9.69924 16.4983 8.43932 15.2384C7.1794 13.9784 5.14908 13.9585 3.86473 15.1784L3 14.3137L9.87868 7.43503L10.2145 7.77081C10.605 8.16134 11.2382 8.16134 11.6287 7.77081C12.0192 7.38029 12.0192 6.74713 11.6287 6.3566L11.2929 6.02081L14.3137 3ZM12.8995 1.58579C13.6805 0.804738 14.9469 0.804738 15.7279 1.58579L17.299 3.15684C17.6895 3.54736 17.6895 4.18053 17.299 4.57105L17.2175 4.65257C16.7183 5.15173 16.7183 5.96103 17.2175 6.4602C17.7166 6.95936 18.5259 6.95936 19.0251 6.4602L19.1066 6.37868C19.4971 5.98816 20.1303 5.98816 20.5208 6.37868L22.0919 7.94975C22.8729 8.7308 22.8729 9.99713 22.0919 10.7782L10.7782 22.0919C9.99713 22.8729 8.7308 22.8729 7.94975 22.0919L6.37869 20.5208C5.98817 20.1303 5.98817 19.4971 6.37869 19.1066L7.02511 18.4602C7.52427 17.961 7.52427 17.1517 7.02511 16.6526C6.52594 16.1534 5.71664 16.1534 5.21748 16.6526L4.57106 17.299C4.18054 17.6895 3.54737 17.6895 3.15685 17.299L1.58579 15.7279C0.804738 14.9469 0.804738 13.6805 1.58579 12.8995L12.8995 1.58579ZM13.8787 8.6066C13.4882 8.21608 12.855 8.21608 12.4645 8.6066C12.0739 8.99712 12.0739 9.63029 12.4645 10.0208L13.4645 11.0208C13.855 11.4113 14.4882 11.4113 14.8787 11.0208C15.2692 10.6303 15.2692 9.99713 14.8787 9.6066L13.8787 8.6066Z\"\n      />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../../../components/Svg/Svg'\nimport { SvgProps } from '../../../components/Svg/types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg viewBox=\"0 0 24 24\" {...props}>\n      <path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M18.86 4.86003L21.65 7.65003C21.84 7.84003 21.84 8.16003 21.64 8.35003L18.85 11.14C18.54 11.46 18 11.24 18 10.79V9.00003H4C3.45 9.00003 3 8.55003 3 8.00003C3 7.45003 3.45 7.00003 4 7.00003H18V5.21003C18 4.76003 18.54 4.54003 18.86 4.86003ZM5.14001 19.14L2.35001 16.35C2.16001 16.16 2.16001 15.84 2.36001 15.65L5.15001 12.86C5.46001 12.54 6.00001 12.76 6.00001 13.21V15H20C20.55 15 21 15.45 21 16C21 16.55 20.55 17 20 17H6.00001V18.79C6.00001 19.24 5.46001 19.46 5.14001 19.14Z\"\n      />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../../../components/Svg/Svg'\nimport { SvgProps } from '../../../components/Svg/types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg width=\"28\" height=\"23\" viewBox=\"0 0 28 23\" {...props}>\n      <path\n        d=\"M25.558 3.99351C25.323 4.05051 25.117 4.09349 24.937 4.12449C25.4478 3.73854 25.8981 3.27847 26.273 2.7595C26.6171 2.27141 26.8867 1.73487 27.073 1.16749C26.3662 1.52854 25.6302 1.82963 24.873 2.06751C24.3556 2.23117 23.8277 2.35944 23.293 2.45148C22.5145 1.64066 21.5109 1.0819 20.4116 0.847357C19.3124 0.612811 18.168 0.71326 17.1265 1.13575C16.0849 1.55824 15.1939 2.28334 14.5687 3.21738C13.9434 4.15143 13.6126 5.25151 13.619 6.37549C13.6364 6.75698 13.6749 7.13722 13.734 7.5145C11.4974 7.30054 9.30899 6.73211 7.25098 5.83051C5.29295 4.73436 3.53197 3.31848 2.04095 1.64149C1.69995 1.59049 1.09597 3.22151 1.24097 5.11451C1.35791 5.90525 1.63775 6.66309 2.06274 7.34009C2.48774 8.01709 3.04864 8.59849 3.70996 9.04749C3.34662 9.0814 2.98051 9.06998 2.62 9.01349C2.10544 8.90098 1.61194 8.70758 1.15796 8.4405C1.15759 9.7891 1.62718 11.0957 2.48596 12.1355C3.27306 13.0962 4.37872 13.7427 5.60199 13.9575L3.25195 14.0425C4.10295 17.4475 7.49198 17.7715 8.42798 17.8225C7.33406 18.7346 6.04742 19.3867 4.66498 19.7295C3.13268 20.0569 1.5659 20.1943 0 20.1385C0 20.1385 7.36901 25.6945 17.044 20.5985C21.181 18.4195 23.527 13.6855 23.957 12.5625C24.7163 10.6278 25.0867 8.56245 25.047 6.4845C25.0423 6.38984 25.0356 6.29582 25.027 6.20249C25.6889 5.82278 26.2981 5.35781 26.839 4.81949C27.276 4.38918 27.6168 3.87114 27.839 3.29951C27.0913 3.57045 26.3299 3.8021 25.558 3.99351Z\"\n        fill=\"#E34561\"\n      />\n      <path\n        opacity=\"0.2\"\n        d=\"M18.9454 12.3614C18.3114 11.9874 18.8264 11.3774 18.1624 10.8154C16.5574 9.45744 15.8044 8.68345 14.8544 8.64045C14.0544 8.60445 10.9054 7.18545 10.2894 7.07145C9.62443 6.94845 6.4054 5.64443 2.9494 4.77143C2.38434 4.63324 1.79535 4.62436 1.22638 4.74543C1.22638 4.86743 1.23542 4.99143 1.24542 5.11643C1.25978 5.303 1.28646 5.48843 1.32538 5.67145C1.54654 5.61541 1.76372 5.54457 1.9754 5.45945C2.3504 5.30545 3.1434 6.07643 4.6944 6.00443C5.0124 5.98943 8.40941 8.50442 10.7564 8.69742C11.2824 8.74242 6.79442 8.88144 7.90442 9.56644C8.34242 9.83644 11.5044 10.3524 11.7744 9.68943C12.1804 8.68943 13.4284 10.6274 14.1344 11.2554C14.6278 11.6535 15.1645 11.9946 15.7344 12.2724C15.1874 12.3724 14.3424 12.6075 13.5834 12.7445C12.9474 12.8595 10.2434 11.0444 9.10138 11.3444C8.08861 11.4367 7.06827 11.4011 6.06439 11.2384C6.73039 11.0224 7.41038 10.6664 6.86438 10.4824C6.49838 10.3584 4.92242 9.63444 3.58942 9.06244C3.26385 9.08588 2.93662 9.07145 2.61438 9.01945C2.09876 8.90531 1.6046 8.70985 1.15039 8.44044C1.15639 8.5431 1.16376 8.64312 1.17242 8.74045C2.68442 9.11545 6.13637 10.2884 5.32037 11.1404C4.39637 11.0344 2.1664 10.8045 1.6394 10.7875C1.82941 11.2559 2.09453 11.6903 2.42438 12.0734C3.326 12.2041 4.24181 12.2041 5.14343 12.0734C6.38884 12.2965 7.66688 12.2597 8.8974 11.9654C9.2674 11.7984 11.5384 12.9115 11.9154 12.9815C12.2294 13.0385 14.8384 14.8494 16.2724 15.5294C17.2124 15.9754 16.0194 16.7624 15.7134 16.9434C15.5134 17.0624 13.4944 16.8074 12.4394 17.4674C12.0684 17.6994 8.8334 16.3754 7.6604 16.4014C7.44885 16.4172 7.23945 16.4544 7.0354 16.5124C6.22806 16.3455 5.40083 16.2964 4.57941 16.3664C5.03677 16.7843 5.56733 17.1142 6.14441 17.3395C6.86874 17.3687 7.58675 17.4866 8.28241 17.6904C9.00041 18.0024 9.9034 18.5085 8.6474 18.6585C8.0834 18.7265 7.52742 19.3454 6.71442 19.2124C6.58142 19.1904 6.4374 19.1724 6.2854 19.1554C5.76059 19.395 5.21499 19.5862 4.6554 19.7264C3.7921 19.9285 2.91273 20.0543 2.0274 20.1025C3.24918 20.214 4.47751 20.2351 5.70239 20.1654C4.38839 20.6724 3.60238 21.3914 3.53638 21.8814C4.41316 22.1795 5.31377 22.4023 6.22839 22.5474C6.66336 22.5045 7.1024 22.5325 7.52838 22.6304C7.56205 22.6651 7.60305 22.6917 7.64838 22.7084C10.6412 22.893 13.6302 22.2889 16.3164 20.9564C16.0294 20.5494 15.7354 20.1834 16.0544 19.9964C17.2079 19.5203 18.3883 19.1119 19.5894 18.7734C20.8181 17.6256 21.8819 16.3131 22.7504 14.8734C21.5707 13.9091 20.2957 13.0674 18.9454 12.3614ZM19.0274 18.0284C17.3184 18.8534 16.5994 17.8645 14.6064 19.2405C14.1704 19.5405 14.5364 20.2744 15.1284 20.8684L15.0914 20.8565C13.2764 20.4015 12.2154 21.6924 10.6194 21.7564C8.65539 21.8304 5.84137 21.6924 8.91937 19.8204C9.20037 19.7734 9.47039 19.7205 9.72839 19.6715C9.9051 19.6525 10.0749 19.5923 10.2241 19.4958C10.3734 19.3993 10.4979 19.2691 10.5876 19.1158C10.6774 18.9624 10.73 18.7901 10.741 18.6127C10.7521 18.4353 10.7214 18.2578 10.6514 18.0944C11.4714 18.2722 12.3182 18.2885 13.1444 18.1424C13.8514 17.9354 15.0444 18.2424 16.1374 17.8734C16.8124 17.4606 17.3807 16.8947 17.7964 16.2214C18.2214 15.5474 15.7104 14.3574 15.8284 13.7424C15.9497 13.3259 16.191 12.9544 16.5224 12.6744C17.3492 13.0288 18.1338 13.4745 18.8614 14.0035C19.2614 14.3815 20.4844 15.3505 20.6304 16.2875C20.7874 17.2755 19.0684 18.0084 19.0274 18.0294V18.0284Z\"\n        fill=\"#90374B\"\n      />\n      <path\n        opacity=\"0.2\"\n        d=\"M24.8861 4.14349C25.0754 4.00517 25.2549 3.8538 25.4231 3.69049C25.3571 3.63149 25.2901 3.57351 25.2231 3.51651C24.5101 3.38951 23.8551 3.27849 23.6231 3.25049C22.0121 3.05649 19.4791 2.11651 18.5601 1.00851C18.506 0.94351 18.4572 0.874289 18.4141 0.801514C17.8341 0.884321 17.2706 1.05742 16.7441 1.31451C17.2945 1.87406 17.9271 2.34617 18.6201 2.71451C18.9711 2.86151 25.0901 4.3145 25.3501 4.3985C25.5971 4.3985 25.8621 4.3985 26.1221 4.3895C25.9921 4.2425 25.8551 4.09951 25.7131 3.96051L25.5051 4.01251C25.2751 4.06951 25.0691 4.11249 24.8861 4.14349Z\"\n        fill=\"#90374B\"\n      />\n      <path\n        opacity=\"0.2\"\n        d=\"M24.9056 8.93051C24.0866 8.31087 23.2996 7.65001 22.5477 6.9505C21.0523 5.26031 18.9618 4.21312 16.7126 4.02753C15.9665 3.85879 15.2367 3.62454 14.5317 3.32751C14.3849 3.5513 14.2542 3.78523 14.1406 4.02753C14.3543 4.09117 14.5637 4.16831 14.7676 4.25851C15.9266 4.77051 17.1107 5.33751 17.2177 5.32751C18.0177 5.24651 18.6097 6.43451 20.2177 7.18451C21.6667 7.85951 23.3176 9.0895 23.6526 10.1925C23.9226 11.0805 22.7456 12.2155 23.3406 12.8855C23.4457 12.9946 23.5697 13.0838 23.7067 13.1485C23.8067 12.9255 23.8886 12.7415 23.9396 12.6085C24.3942 11.4212 24.7181 10.1879 24.9056 8.93051Z\"\n        fill=\"#90374B\"\n      />\n      <path\n        opacity=\"0.2\"\n        d=\"M22.0517 9.59555C21.6007 9.69555 21.4437 10.1415 21.4377 10.8225C21.4317 11.5035 21.5687 12.0555 22.0297 12.0595C22.4907 12.0635 22.8687 11.5155 22.8747 10.8345C22.8807 10.1535 22.6297 9.47255 22.0517 9.59555Z\"\n        fill=\"#90374B\"\n      />\n      <path\n        opacity=\"0.2\"\n        d=\"M15.7765 6.82744C16.2355 6.97244 16.6345 7.00342 16.7245 6.72042C16.8145 6.43742 16.5145 6.09042 16.0565 5.94542C15.5985 5.80042 15.0895 5.81242 15.0635 6.19442C15.0435 6.49442 15.3185 6.68444 15.7765 6.82744Z\"\n        fill=\"#90374B\"\n      />\n      <path\n        d=\"M17.9459 13.0825C17.7009 13.3695 17.4459 13.6425 17.1839 13.9025C16.0659 15.2905 14.9839 17.2925 12.6349 18.5385C10.2599 19.7985 6.87789 19.3665 4.49589 20.6945C3.79589 21.0825 3.70186 21.5885 3.84086 21.9945C4.72176 22.2759 5.62504 22.4816 6.54088 22.6095C6.37388 22.2585 6.41088 21.7925 7.01488 21.3995C9.00688 20.1045 11.9709 20.2805 13.9599 19.0445C16.3379 17.5665 17.0439 15.2365 18.2179 14.0265C18.7599 13.4675 20.6049 10.3696 24.5179 10.8626C24.5999 10.5626 24.6789 10.2336 24.7509 9.89255C20.7859 9.44355 18.6249 12.4225 17.9459 13.0825Z\"\n        fill=\"#F0DEDA\"\n      />\n      <path\n        d=\"M14.1866 15.4294C14.0656 15.0634 12.9707 15.0965 11.7397 15.5035C10.5087 15.9105 9.60964 16.5364 9.73064 16.9034C9.85164 17.2704 10.9477 17.2364 12.1777 16.8294C13.4077 16.4224 14.3046 15.7994 14.1866 15.4294Z\"\n        fill=\"#F0DEDA\"\n      />\n      <path\n        d=\"M11.6609 10.2055C12.393 9.42902 12.919 8.48156 13.1909 7.44955C12.8489 7.40855 12.3469 7.33853 11.7399 7.22253C11.7138 8.46899 11.2039 9.65643 10.3179 10.5335C9.73287 11.2335 8.68888 11.7546 8.08588 12.4076C7.28588 13.2766 8.56089 14.7076 6.30389 16.1136C5.89167 16.3613 5.45629 16.5683 5.00391 16.7315C5.13124 16.8222 5.26088 16.9052 5.39288 16.9806C6.05504 16.7592 6.69031 16.4643 7.28687 16.1016C9.68687 14.5726 8.4049 13.1416 9.2699 12.2176C9.9239 11.5226 11.0269 10.9445 11.6609 10.2055Z\"\n        fill=\"#F0DEDA\"\n      />\n      <path\n        d=\"M9.91418 6.79947C9.79485 6.76547 9.67419 6.73015 9.55219 6.69348C9.23495 7.22848 8.8575 7.72537 8.42719 8.17447C7.60675 9.07014 6.53377 9.69571 5.35016 9.96848C4.3944 10.0515 3.44676 10.2103 2.51617 10.4435C2.2316 10.5671 1.95855 10.7157 1.7002 10.8875C1.88957 11.3284 2.14663 11.737 2.46216 12.0985C2.58398 11.7876 2.7922 11.518 3.06219 11.3215C3.84419 10.7535 5.29014 10.6885 6.27814 10.2585C7.31325 9.81176 8.20699 9.09124 8.86316 8.17447C9.25916 7.63847 9.61518 7.17747 9.91418 6.79947Z\"\n        fill=\"#F0DEDA\"\n      />\n      <path\n        d=\"M21.4298 14.8055C20.204 15.1239 19.1064 15.813 18.2868 16.7785C17.938 17.233 17.7326 17.7812 17.697 18.353C17.6614 18.9248 17.7971 19.4942 18.0868 19.9885C18.3121 19.8365 18.5311 19.6778 18.7438 19.5125C18.503 18.7779 18.5386 17.9807 18.8438 17.2705C19.5099 16.1766 20.5777 15.3868 21.8188 15.0705C22.1038 14.9815 22.4418 14.9014 22.8068 14.8224C22.8781 14.7044 22.9468 14.5888 23.0128 14.4755C22.4791 14.5545 21.9506 14.6647 21.4298 14.8055Z\"\n        fill=\"#F0DEDA\"\n      />\n      <path\n        d=\"M23.2888 2.44446C23.076 2.22735 22.847 2.0268 22.6038 1.84448C22.5961 2.36207 22.4785 2.87208 22.2589 3.34082C22.0392 3.80956 21.7226 4.22632 21.3298 4.56348C20.2228 5.20961 18.9067 5.39628 17.6638 5.08347C16.7638 4.90847 15.4638 4.40347 14.2958 4.22247C14.2178 4.21047 14.1387 4.20147 14.0577 4.19647C14.0264 4.26981 13.9971 4.34413 13.9697 4.41946C14.0577 4.42454 14.1452 4.43524 14.2318 4.45148C15.9038 4.76748 16.3388 5.13746 17.8768 5.49646C19.1051 5.79982 20.3971 5.71707 21.5767 5.25946C22.114 5.01937 22.5655 4.62151 22.8713 4.11871C23.1771 3.61591 23.3227 3.03196 23.2888 2.44446Z\"\n        fill=\"#F0DEDA\"\n      />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import React from 'react'\nimport Svg from '../../../components/Svg/Svg'\nimport { SvgProps } from '../../../components/Svg/types'\n\nconst Icon: React.FC<SvgProps> = (props) => {\n  return (\n    <Svg width=\"42\" height=\"31\" viewBox=\"0 0 42 31\" {...props}>\n      <path\n        d=\"M41.6812 15.274C41.6812 10.574 40.9392 6.75806 40.0242 6.75806C39.1092 6.75806 38.3672 10.571 38.3672 15.274C38.3672 19.977 39.1092 23.7901 40.0242 23.7901C40.9392 23.7901 41.6812 19.978 41.6812 15.274Z\"\n        fill=\"#E34561\"\n      />\n      <path\n        opacity=\"0.2\"\n        d=\"M38.3672 15.2751C38.3672 15.4151 38.3672 15.5547 38.3672 15.6941C38.6085 15.2612 38.9178 14.8698 39.2832 14.5351C40.1392 14.9601 40.9832 15.37 41.6762 15.756C41.6762 15.5967 41.6762 15.4367 41.6762 15.2761C41.6788 13.9305 41.612 12.5857 41.4762 11.2471C40.4112 10.3381 39.5922 9.61206 38.8762 9.09106C38.5096 11.1314 38.3392 13.2022 38.3672 15.2751Z\"\n        fill=\"#90374B\"\n      />\n      <path\n        opacity=\"0.2\"\n        d=\"M38.7616 20.7861C38.8523 21.37 38.9826 21.947 39.1516 22.5131C39.9956 21.8554 40.7248 21.0622 41.3096 20.1661C41.8726 19.2731 39.1886 17.8091 38.3936 16.7811C38.4196 17.5191 38.4636 18.2241 38.5236 18.8811C38.6536 18.9471 38.7796 19.0101 38.8996 19.0671C39.9106 19.5461 39.3686 20.2771 38.7616 20.7861Z\"\n        fill=\"#90374B\"\n      />\n      <path\n        opacity=\"0.2\"\n        d=\"M40.3097 23.6631C40.1287 23.6681 39.9467 23.6741 39.7637 23.6841C39.836 23.7489 39.9286 23.7864 40.0257 23.7901C40.1328 23.7843 40.2339 23.7391 40.3097 23.6631Z\"\n        fill=\"#90374B\"\n      />\n      <path\n        d=\"M22.8418 22.5645C26.9958 18.4105 26.9958 11.6755 22.8418 7.52147C18.6878 3.36747 11.9528 3.36747 7.79884 7.52147C3.64483 11.6755 3.64483 18.4105 7.79884 22.5645C11.9528 26.7185 18.6878 26.7185 22.8418 22.5645Z\"\n        fill=\"#E34561\"\n      />\n      <path\n        opacity=\"0.2\"\n        d=\"M13.2458 24.889C11.9178 24.695 9.24579 23.639 8.43079 22.617C7.85579 21.895 17.9368 21.479 23.3878 21.994C23.7686 21.5532 24.1128 21.082 24.4168 20.585C24.3548 20.6 24.2968 20.6161 24.2438 20.6331C21.9198 19.9331 15.9038 20.8711 13.9948 20.7631C13.1068 20.7131 8.00979 19.8631 8.38579 19.4351C8.76179 19.0071 6.12179 17.5601 4.75879 16.1801C4.86301 17.1668 5.10573 18.134 5.47979 19.053C6.10379 19.168 6.54979 19.305 6.62179 19.585C6.70079 19.885 6.43479 20.122 6.13479 20.385C7.46965 22.6824 9.61546 24.3974 12.1505 25.1931C14.6856 25.9887 17.4266 25.8076 19.8348 24.6851C16.7768 24.6651 13.5198 24.886 13.2458 24.889Z\"\n        fill=\"#90374B\"\n      />\n      <path\n        opacity=\"0.2\"\n        d=\"M7.21605 11.85C6.52306 12.0968 5.79773 12.241 5.06305 12.278C4.90934 12.8505 4.80397 13.4349 4.74805 14.025C6.30405 13.225 9.76605 12.335 10.165 11.584C10.487 10.978 14.365 12.469 15.134 12.612C15.488 12.844 15.972 13.13 16.614 13.491C18.714 14.17 20.331 13.457 21.239 13.583C22.7795 13.8076 24.3403 13.8579 25.892 13.733C25.841 13.3189 25.7656 12.9082 25.666 12.503C24.795 12.475 23.739 12.392 22.694 12.255C23.7521 11.913 24.8311 11.347 23.9711 11.055C23.0291 10.735 17.055 7.92096 15.833 7.67596C14.733 7.45596 12.918 6.18998 11.072 6.20898C10.641 6.20898 10.101 6.18699 9.52505 6.13599C8.96435 6.50258 8.43938 6.92109 7.95705 7.38599C10.421 7.67899 13.679 8.03597 14.27 8.14597C16.064 8.47697 22.955 10.605 21.519 12.1C19.926 11.917 15.888 11.5 15.519 11.54C15.269 11.567 15.049 11.592 14.867 11.622C13.43 11.048 10.945 9.50797 8.67205 9.32797C8.27205 9.29597 7.38005 9.30497 6.35305 9.34497C6.03953 9.83767 5.76728 10.3554 5.53905 10.893C7.08905 10.865 8.34905 11.041 7.21605 11.85Z\"\n        fill=\"#90374B\"\n      />\n      <path\n        d=\"M37.133 15.043C37.133 9.7 34.855 5.36902 32.046 5.36902C29.237 5.36902 26.959 9.7 26.959 15.043C26.959 20.386 29.237 24.717 32.046 24.717C34.855 24.717 37.133 20.386 37.133 15.043Z\"\n        fill=\"#E34561\"\n      />\n      <path\n        opacity=\"0.2\"\n        d=\"M27.1863 13.4289C27.7743 13.1639 31.3803 14.929 31.9793 15.042C32.3513 15.11 34.7534 16.729 36.8954 17.995C37.0556 17.0259 37.1355 16.0452 37.1343 15.0629C37.1343 14.7443 37.1264 14.4293 37.1104 14.118C36.3494 14.295 35.4523 14.518 34.6213 14.67C33.6113 14.853 29.3214 11.9699 27.5034 12.4419C27.3847 12.4701 27.2639 12.4892 27.1423 12.499C27.0957 12.825 27.0573 13.1583 27.0273 13.499C27.0823 13.473 27.1353 13.4519 27.1863 13.4289Z\"\n        fill=\"#90374B\"\n      />\n      <path\n        opacity=\"0.2\"\n        d=\"M30.122 8.23996C29.5348 8.37117 28.9356 8.44089 28.334 8.44797C28.0683 8.99285 27.8453 9.55755 27.667 10.137C29.358 10.397 31.467 10.481 31.738 9.81396C32.383 8.21996 34.365 11.304 35.487 12.301C35.9739 12.7103 36.4993 13.0713 37.056 13.379C36.9202 11.4508 36.3747 9.57366 35.456 7.87296C33.961 7.40296 31.679 6.44896 30.328 5.95496C29.6112 6.4819 29.0217 7.16297 28.603 7.94797C29.0991 8.09267 29.6076 8.19043 30.122 8.23996Z\"\n        fill=\"#90374B\"\n      />\n      <path\n        opacity=\"0.2\"\n        d=\"M32.812 22.169C32.428 22.409 30.12 21.602 28.04 21.021C28.4627 22.1619 29.1619 23.18 30.075 23.984C30.0708 23.7064 30.0329 23.4305 29.962 23.162C31.2646 23.4445 32.6097 23.4703 33.9221 23.238C34.2301 23.1588 34.5469 23.1185 34.8651 23.118C35.2666 22.5979 35.6056 22.0323 35.8751 21.433C34.8102 21.4324 33.7604 21.6846 32.812 22.169Z\"\n        fill=\"#90374B\"\n      />\n      <path\n        d=\"M40.4053 17.966C39.8053 18.01 39.1393 18.016 38.4473 18.003C38.4733 18.409 38.5053 18.803 38.5473 19.178C39.1813 19.225 39.8893 19.288 40.6863 19.369C40.9163 19.393 41.1793 19.428 41.4693 19.469C41.5243 18.969 41.5753 18.39 41.6103 17.818C41.2033 17.859 40.7993 17.937 40.4053 17.966Z\"\n        fill=\"#F0DEDA\"\n      />\n      <path\n        d=\"M27.831 19.991L27.667 20.02C27.9848 21.0733 28.4773 22.0659 29.124 22.956C31.635 22.411 33.468 21.428 33.333 20.645C33.185 19.786 30.721 19.493 27.831 19.991Z\"\n        fill=\"#F0DEDA\"\n      />\n      <path\n        d=\"M25.345 11.499C24.1438 12.0024 22.9893 12.6108 21.895 13.317C19.7322 14.7345 17.6917 16.3304 15.795 18.088C13.247 20.44 11.851 23.047 11.751 25.066C14.2644 25.957 17.0203 25.8745 19.476 24.835C19.334 24.789 19.192 24.74 19.046 24.688C16.538 23.776 18.27 18.722 22.156 15.136C22.793 14.548 24.246 13.386 25.606 12.336C25.5293 12.0527 25.4423 11.7737 25.345 11.499Z\"\n        fill=\"#F0DEDA\"\n      />\n      <path\n        d=\"M35.5221 15.319C34.8591 15.213 36.1151 14.397 37.0771 13.441C37.0631 13.277 37.0471 13.1146 37.0291 12.954C36.0131 13.959 34.1191 15.234 35.0371 15.54C35.7606 15.7664 36.4482 16.0947 37.0791 16.515C37.0978 16.2943 37.1121 16.071 37.1221 15.845C36.623 15.579 36.0817 15.401 35.5221 15.319Z\"\n        fill=\"#F0DEDA\"\n      />\n      <path\n        d=\"M36.7437 11.235C34.1797 11.756 28.3836 15.09 27.7986 13.415C27.2336 11.797 30.2746 7.64402 31.5256 5.36902C29.0316 5.85902 27.0737 9.77501 26.9727 14.6L26.9996 14.621C29.5606 16.376 34.7506 11.865 36.8286 11.645C36.802 11.507 36.7737 11.3703 36.7437 11.235Z\"\n        fill=\"#F0DEDA\"\n      />\n      <path\n        d=\"M38.6025 10.807C39.4524 11.0615 40.2788 11.3887 41.0725 11.785C41.2305 11.864 41.3945 11.9511 41.5615 12.0421C41.5365 11.7181 41.5075 11.403 41.4755 11.1C41.2755 10.987 41.0755 10.872 40.8575 10.754C40.1762 10.3862 39.4678 10.071 38.7385 9.81104C38.6895 10.126 38.6435 10.459 38.6025 10.807Z\"\n        fill=\"#F0DEDA\"\n      />\n      <path\n        d=\"M23.7345 8.53595C23.6365 8.40928 23.5365 8.28527 23.4345 8.16394C22.9598 8.57788 22.405 8.88969 21.8045 9.07996C18.1355 10.256 16.8715 9.98696 13.4245 10.934C10.6501 11.6551 8.16578 13.2147 6.31054 15.4C5.73301 16.1778 5.32181 17.0663 5.10254 18.0099C5.57218 19.6236 6.41802 21.1028 7.57054 22.326C6.80085 20.4661 6.79726 18.3774 7.56054 16.515C8.68554 14.207 11.3695 12.4469 14.2935 11.5269C16.2745 10.9039 19.4055 10.505 21.9245 9.60696C22.5927 9.37309 23.2079 9.00906 23.7345 8.53595Z\"\n        fill=\"#F0DEDA\"\n      />\n    </Svg>\n  )\n}\n\nexport default Icon\n","import styled from 'styled-components'\nimport Button from '../../../components/Button/Button'\n\nconst MenuButton = styled(Button)`\n  color: ${({ theme }) => theme.colors.text};\n  padding: 0 8px;\n  border-radius: 8px;\n`\nMenuButton.defaultProps = {\n  variant: 'text',\n  size: 'sm',\n}\n\nexport default MenuButton\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { LogoIcon } from '../../../components/Svg'\nimport Flex from '../../../components/Box/Flex'\nimport { HamburgerIcon, HamburgerCloseIcon, LogoIcon as LogoWithText } from '../icons'\nimport MenuButton from './MenuButton'\n\ninterface Props {\n  isPushed: boolean\n  isDark: boolean\n  togglePush: () => void\n  href: string\n}\n\nconst blink = keyframes`\n  0%,  100% { transform: scaleY(1); } \n  50% { transform:  scaleY(0.1); } \n`\n\nconst StyledLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  .mobile-icon {\n    width: 32px;\n    ${({ theme }) => theme.mediaQueries.nav} {\n      display: none;\n    }\n  }\n  .desktop-icon {\n    width: 160px;\n    display: none;\n    ${({ theme }) => theme.mediaQueries.nav} {\n      display: block;\n    }\n  }\n  .right-eye {\n    animation-delay: 20ms;\n  }\n  &:hover {\n    .left-eye,\n    .right-eye {\n      transform-origin: center 60%;\n      animation-name: ${blink};\n      animation-duration: 350ms;\n      animation-iteration-count: 1;\n    }\n  }\n`\n\nconst Logo: React.FC<Props> = ({ isPushed, togglePush, isDark, href }) => {\n  const isAbsoluteUrl = href.startsWith('http')\n  const innerLogo = (\n    <>\n      <img alt=\"logo mobile\" className=\"mobile-icon\" src=\"/images/zz-logo.png\" />\n      <img alt=\"logo desktop\" className=\"desktop-icon\" src=\"/images/zolaswap-text.png\" />\n    </>\n  )\n\n  return (\n    <Flex>\n      <MenuButton aria-label=\"Toggle menu\" onClick={togglePush} mr=\"24px\">\n        {isPushed ? (\n          <HamburgerCloseIcon width=\"24px\" color=\"textSubtle\" />\n        ) : (\n          <HamburgerIcon width=\"24px\" color=\"textSubtle\" />\n        )}\n      </MenuButton>\n      {isAbsoluteUrl ? (\n        // @ts-ignore\n        <StyledLink as=\"a\" href={href} aria-label=\"Zolaswap home page\">\n          {innerLogo}\n        </StyledLink>\n      ) : (\n        <StyledLink to={href} aria-label=\"Zolaswap home page\">\n          {innerLogo}\n        </StyledLink>\n      )}\n    </Flex>\n  )\n}\n\nexport default React.memo(Logo, (prev, next) => prev.isPushed === next.isPushed && prev.isDark === next.isDark)\n","import { LinkStatus } from './types'\n\nexport const status = {\n  LIVE: <LinkStatus>{\n    text: 'LIVE',\n    color: 'failure',\n  },\n  SOON: <LinkStatus>{\n    text: 'SOON',\n    color: 'warning',\n  },\n  NEW: <LinkStatus>{\n    text: 'NEW',\n    color: 'success',\n  },\n}\n\nexport const links = [\n  {\n    label: 'Home',\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: 'Trade',\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: 'Exchange',\n        href: 'https://exchange.pancakeswap.finance',\n      },\n      {\n        label: 'Liquidity',\n        href: 'https://exchange.pancakeswap.finance/#/pool',\n      },\n    ],\n  },\n  {\n    label: 'Farms',\n    icon: 'FarmIcon',\n    href: '/farms',\n    status: status.LIVE,\n  },\n  {\n    label: 'Pools',\n    icon: 'PoolIcon',\n    href: '/syrup',\n  },\n  {\n    label: 'Lottery',\n    icon: 'TicketIcon',\n    href: '/lottery',\n  },\n  {\n    label: 'NFT',\n    icon: 'NftIcon',\n    href: '/nft',\n  },\n  {\n    label: 'Team Battle',\n    icon: 'TeamBattleIcon',\n    href: '/competition',\n    status: status.SOON,\n  },\n  {\n    label: 'Profile & Teams',\n    icon: 'GroupsIcon',\n    status: status.LIVE,\n    items: [\n      {\n        label: 'Leaderboard',\n        href: '/teams',\n        status: status.NEW,\n      },\n      {\n        label: 'YourProfile',\n        href: '/',\n      },\n    ],\n    calloutClass: 'rainbow',\n  },\n  {\n    label: 'Info',\n    icon: 'InfoIcon',\n    items: [\n      {\n        label: 'Overview',\n        href: 'https://pancakeswap.info',\n      },\n      {\n        label: 'Tokens',\n        href: 'https://pancakeswap.info/tokens',\n      },\n      {\n        label: 'Pairs',\n        href: 'https://pancakeswap.info/pairs',\n      },\n      {\n        label: 'Accounts',\n        href: 'https://pancakeswap.info/accounts',\n      },\n    ],\n  },\n  {\n    label: 'IFO',\n    icon: 'IfoIcon',\n    items: [\n      {\n        label: 'Next',\n        href: '/ifo',\n      },\n      {\n        label: 'History',\n        href: '/ifo/history',\n      },\n    ],\n  },\n  {\n    label: 'More',\n    icon: 'MoreIcon',\n    items: [\n      {\n        label: 'Voting',\n        href: 'https://voting.pancakeswap.finance',\n      },\n      {\n        label: 'Github',\n        href: 'https://github.com/pancakeswap',\n      },\n      {\n        label: 'Docs',\n        href: 'https://docs.pancakeswap.finance',\n      },\n      {\n        label: 'Blog',\n        href: 'https://pancakeswap.medium.com',\n      },\n    ],\n  },\n]\n\nexport const socials = [\n  {\n    label: 'Medium',\n    icon: 'MediumIcon',\n    href: 'https://medium.com/@zolaswap.app',\n  },\n  {\n    label: 'Twitter',\n    icon: 'TwitterIcon',\n    href: 'https://twitter.com/zolacoin1',\n  },\n]\n\nexport const MENU_HEIGHT = 64\nexport const MENU_ENTRY_HEIGHT = 48\nexport const SIDEBAR_WIDTH_FULL = 240\nexport const SIDEBAR_WIDTH_REDUCED = 56\n","import React from 'react'\nimport styled, { keyframes, DefaultTheme } from 'styled-components'\nimport { Text } from '../../../components/Text'\nimport { Colors } from '../../../theme/types'\nimport { MENU_ENTRY_HEIGHT } from '../config'\n\nexport interface Props {\n  secondary?: boolean\n  isActive?: boolean\n  theme: DefaultTheme\n}\n\nconst rainbowAnimation = keyframes`\n  0%,\n  100% {\n    background-position: 0 0;\n  }\n  50% {\n    background-position: 100% 0;\n  }\n`\n\nconst LinkLabel = styled.div<{ isPushed: boolean }>`\n  color: ${({ isPushed, theme }) => (isPushed ? theme.colors.textSubtle : 'transparent')};\n  transition: color 0.4s;\n  flex-grow: 1;\n`\n\nconst MenuEntry = styled.div<Props>`\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  height: ${MENU_ENTRY_HEIGHT}px;\n  padding: ${({ secondary }) => (secondary ? '0 32px' : '0 16px')};\n  font-size: ${({ secondary }) => (secondary ? '14px' : '16px')};\n  background-color: ${({ secondary, theme }) => (secondary ? theme.colors.background : 'transparent')};\n  color: ${({ theme }) => theme.colors.textSubtle};\n  box-shadow: ${({ isActive, theme }) => (isActive ? `inset 4px 0px 0px ${theme.colors.primary}` : 'none')};\n\n  a {\n    display: flex;\n    align-items: center;\n    width: 100%;\n    height: 100%;\n  }\n\n  svg {\n    fill: ${({ theme }) => theme.colors.textSubtle};\n  }\n\n  &:hover {\n    background-color: ${({ theme }) => theme.colors.tertiary};\n  }\n\n  // Safari fix\n  flex-shrink: 0;\n\n  &.rainbow {\n    background-clip: text;\n    animation: ${rainbowAnimation} 3s ease-in-out infinite;\n    background: ${({ theme }) => theme.colors.gradients.bubblegum};\n    background-size: 400% 100%;\n  }\n`\nMenuEntry.defaultProps = {\n  secondary: false,\n  isActive: false,\n}\n\nconst LinkStatus = styled(Text)<{ color: keyof Colors }>`\n  border-radius: ${({ theme }) => theme.radii.default};\n  padding: 0 8px;\n  border: 2px solid;\n  border-color: ${({ theme, color }) => theme.colors[color]};\n  box-shadow: none;\n  color: ${({ theme, color }) => theme.colors[color]};\n  margin-left: 8px;\n`\n\nconst LinkLabelMemo = React.memo(LinkLabel, (prev, next) => prev.isPushed === next.isPushed)\n\nexport { MenuEntry, LinkStatus, LinkLabelMemo as LinkLabel }\n","import { FC } from 'react'\nimport { SvgProps } from '../../components/Svg/types'\n\nexport enum ConnectorNames {\n  Injected = 'injected',\n  WalletConnect = 'walletconnect',\n  // BSC = \"bsc\",\n}\n\nexport type Login = (connectorId: ConnectorNames) => void\n\nexport interface Config {\n  title: string\n  icon: FC<SvgProps>\n  connectorId: ConnectorNames\n  priority: number\n}\n","import React, { ReactNode, useState } from 'react'\nimport styled from 'styled-components'\nimport { MENU_ENTRY_HEIGHT } from '../config'\nimport { LinkLabel, LinkStatus as LinkStatusComponent, MenuEntry } from './MenuEntry'\nimport { LinkStatus, PushedProps } from '../types'\nimport { ArrowDropDownIcon, ArrowDropUpIcon } from '../../../components/Svg'\n\ninterface Props extends PushedProps {\n  label: string\n  status?: LinkStatus\n  icon: React.ReactElement\n  initialOpenState?: boolean\n  className?: string\n  children: ReactNode\n  isActive?: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  // Safari fix\n  flex-shrink: 0;\n`\n\nconst AccordionContent = styled.div<{ isOpen: boolean; isPushed: boolean; maxHeight: number }>`\n  max-height: ${({ isOpen, maxHeight }) => (isOpen ? `${maxHeight}px` : 0)};\n  transition: max-height 0.3s ease-out;\n  overflow: hidden;\n  border-color: ${({ isOpen, isPushed }) => (isOpen && isPushed ? 'rgba(133, 133, 133, 0.1)' : 'transparent')};\n  border-style: solid;\n  border-width: 1px 0;\n`\n\nconst Accordion: React.FC<Props> = ({\n  label,\n  status,\n  icon,\n  isPushed,\n  pushNav,\n  initialOpenState = false,\n  children,\n  className,\n  isActive,\n}) => {\n  const [isOpen, setIsOpen] = useState(initialOpenState)\n  const handleClick = () => {\n    if (isPushed) {\n      setIsOpen((prevState) => !prevState)\n    } else {\n      pushNav(true)\n      setIsOpen(true)\n    }\n  }\n\n  return (\n    <Container>\n      <MenuEntry onClick={handleClick} className={className} isActive={isActive} role=\"button\">\n        {icon}\n        <LinkLabel isPushed={isPushed}>{label}</LinkLabel>\n        {status && (\n          <LinkStatusComponent color={status.color} fontSize=\"14px\">\n            {status.text}\n          </LinkStatusComponent>\n        )}\n        {isOpen ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}\n      </MenuEntry>\n      <AccordionContent\n        isOpen={isOpen}\n        isPushed={isPushed}\n        maxHeight={React.Children.count(children) * MENU_ENTRY_HEIGHT}\n      >\n        {children}\n      </AccordionContent>\n    </Container>\n  )\n}\n\nexport default Accordion\n","import React, { AnchorHTMLAttributes } from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst MenuLink: React.FC<AnchorHTMLAttributes<HTMLAnchorElement>> = ({ href, ...otherProps }) => {\n  const isHttpLink = href?.startsWith('http') || href?.startsWith('mailto')\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const Tag: any = isHttpLink ? 'a' : NavLink\n  const props = isHttpLink ? { href } : { to: href }\n  return <Tag role=\"button\" {...props} {...otherProps} />\n}\n\nexport default MenuLink\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useLocation } from 'react-router-dom'\nimport { SvgProps } from '../../../components/Svg'\nimport * as IconModule from '../icons'\nimport Accordion from './Accordion'\nimport { MenuEntry, LinkLabel, LinkStatus } from './MenuEntry'\nimport MenuLink from './MenuLink'\nimport { PanelProps, PushedProps } from '../types'\n\ninterface Props extends PanelProps, PushedProps {\n  isMobile: boolean\n}\n\nconst Icons = IconModule as unknown as { [key: string]: React.FC<SvgProps> }\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  overflow-y: auto;\n  overflow-x: hidden;\n  height: 100%;\n`\n\nconst PanelBody: React.FC<Props> = ({ isPushed, pushNav, isMobile, links }) => {\n  const location = useLocation()\n\n  // Close the menu when a user clicks a link on mobile\n  const handleClick = isMobile ? () => pushNav(false) : undefined\n\n  return (\n    <Container>\n      {links.map((entry) => {\n        const Icon = Icons[entry.icon]\n        const iconElement = <Icon width=\"24px\" mr=\"8px\" />\n        const calloutClass = entry.calloutClass ? entry.calloutClass : undefined\n\n        if (entry.items) {\n          const itemsMatchIndex = entry.items.findIndex((item) => item.href === location.pathname)\n          const initialOpenState = entry.initialOpenState === true ? entry.initialOpenState : itemsMatchIndex >= 0\n\n          return (\n            <Accordion\n              key={entry.label}\n              isPushed={isPushed}\n              pushNav={pushNav}\n              icon={iconElement}\n              label={entry.label}\n              status={entry.status}\n              initialOpenState={initialOpenState}\n              className={calloutClass}\n              isActive={entry.items.some((item) => item.href === location.pathname)}\n            >\n              {isPushed &&\n                entry.items.map((item) => {\n                  const isExternal = item.href && item.href.toLowerCase().startsWith('http')\n\n                  return (\n                    <MenuEntry\n                      key={item.href}\n                      secondary\n                      isActive={item.href === location.pathname}\n                      onClick={handleClick}\n                    >\n                      <MenuLink href={item.href} target={isExternal ? '_blank' : ''}>\n                        <LinkLabel isPushed={isPushed}>{item.label}</LinkLabel>\n                        {item.status && (\n                          <LinkStatus color={item.status.color} fontSize=\"14px\">\n                            {item.status.text}\n                          </LinkStatus>\n                        )}\n                      </MenuLink>\n                    </MenuEntry>\n                  )\n                })}\n            </Accordion>\n          )\n        }\n        return (\n          <MenuEntry key={entry.label} isActive={entry.href === location.pathname} className={calloutClass}>\n            <MenuLink href={entry.href} onClick={handleClick}>\n              {iconElement}\n              <LinkLabel isPushed={isPushed}>{entry.label}</LinkLabel>\n              {entry.status && (\n                <LinkStatus color={entry.status.color} fontSize=\"14px\">\n                  {entry.status.text}\n                </LinkStatus>\n              )}\n            </MenuLink>\n          </MenuEntry>\n        )\n      })}\n    </Container>\n  )\n}\n\nexport default PanelBody\n","import React from 'react'\nimport styled from 'styled-components'\nimport { PancakeRoundIcon } from '../../../components/Svg'\nimport Text from '../../../components/Text/Text'\nimport Skeleton from '../../../components/Skeleton/Skeleton'\n\ninterface Props {\n  cakePriceUsd?: number\n}\n\nconst PriceLink = styled.a`\n  display: flex;\n  align-items: center;\n  svg {\n    transition: transform 0.6s;\n  }\n  :hover {\n    svg {\n      transform: scale(1.2);\n    }\n  }\n`\n\nconst ImgWrapper = styled.img`\n  width: 32px;\n`\n\nconst CakePrice: React.FC<Props> = ({ cakePriceUsd }) => {\n  return cakePriceUsd ? (\n    <PriceLink\n      href=\"https://zolaswap.finance/swap?outputCurrency=0x8a226293bC6f697A681B0b29f825c149655fEC2d\"\n      target=\"_blank\"\n    >\n      <ImgWrapper alt=\"logo\" className=\"mr-24\" src=\"/images/tokens/zolaswap.png\" />\n      <Text color=\"textSubtle\" bold>{`$${cakePriceUsd}`}</Text>\n    </PriceLink>\n  ) : (\n    <Skeleton width={80} height={24} />\n  )\n}\n\nexport default React.memo(CakePrice)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CogIcon } from '../../../components/Svg'\nimport IconButton from '../../../components/Button/IconButton'\nimport { MENU_ENTRY_HEIGHT } from '../config'\nimport { PanelProps, PushedProps } from '../types'\nimport CakePrice from './CakePrice'\nimport ThemeSwitcher from './ThemeSwitcher'\nimport SocialLinks from './SocialLinks'\nimport LangSelector from './LangSelector'\n\ninterface Props extends PanelProps, PushedProps {}\n\nconst Container = styled.div`\n  flex: none;\n  padding: 8px 4px;\n  background-color: ${({ theme }) => theme.nav.background};\n  border-top: solid 2px rgba(133, 133, 133, 0.1);\n`\n\nconst SettingsEntry = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: ${MENU_ENTRY_HEIGHT}px;\n  padding: 0 8px;\n`\n\nconst SocialEntry = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  height: ${MENU_ENTRY_HEIGHT}px;\n  padding: 0 16px;\n`\n\nconst PanelFooter: React.FC<Props> = ({\n  isPushed,\n  pushNav,\n  toggleTheme,\n  isDark,\n  cakePriceUsd,\n  currentLang,\n  langs,\n  setLang,\n}) => {\n  if (!isPushed) {\n    return (\n      <Container>\n        <IconButton variant=\"text\" onClick={() => pushNav(true)}>\n          <CogIcon />\n        </IconButton>\n      </Container>\n    )\n  }\n\n  return (\n    <Container>\n      <SocialEntry>\n        <CakePrice cakePriceUsd={cakePriceUsd} />\n        {/* <SocialLinks /> */}\n      </SocialEntry>\n      {/* <SettingsEntry>\n        <ThemeSwitcher isDark={isDark} toggleTheme={toggleTheme} />\n        <LangSelector currentLang={currentLang} langs={langs} setLang={setLang} />\n      </SettingsEntry> */}\n    </Container>\n  )\n}\n\nexport default PanelFooter\n","import React from 'react'\nimport styled from 'styled-components'\nimport PanelBody from './PanelBody'\nimport PanelFooter from './PanelFooter'\nimport { SIDEBAR_WIDTH_REDUCED, SIDEBAR_WIDTH_FULL } from '../config'\nimport { PanelProps, PushedProps } from '../types'\n\ninterface Props extends PanelProps, PushedProps {\n  showMenu: boolean\n  isMobile: boolean\n}\n\nconst StyledPanel = styled.div<{ isPushed: boolean; showMenu: boolean }>`\n  position: fixed;\n  padding-top: ${({ showMenu }) => (showMenu ? '80px' : 0)};\n  top: 0;\n  left: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  flex-shrink: 0;\n  background-color: ${({ theme }) => theme.nav.background};\n  width: ${({ isPushed }) => (isPushed ? `${SIDEBAR_WIDTH_FULL}px` : 0)};\n  height: 100%;\n  transition: padding-top 0.2s, width 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n  border-right: ${({ isPushed }) => (isPushed ? '2px solid rgba(133, 133, 133, 0.1)' : 0)};\n  z-index: 11;\n  overflow: ${({ isPushed }) => (isPushed ? 'initial' : 'hidden')};\n  transform: translate3d(0, 0, 0);\n  ${({ isPushed }) => !isPushed && 'white-space: nowrap;'};\n\n  ${({ theme }) => theme.mediaQueries.nav} {\n    border-right: 2px solid rgba(133, 133, 133, 0.1);\n    width: ${({ isPushed }) => `${isPushed ? SIDEBAR_WIDTH_FULL : SIDEBAR_WIDTH_REDUCED}px`};\n  }\n`\n\nconst Panel: React.FC<Props> = (props) => {\n  const { isPushed, showMenu } = props\n  return (\n    <StyledPanel isPushed={isPushed} showMenu={showMenu}>\n      <PanelBody {...props} />\n      <PanelFooter {...props} />\n    </StyledPanel>\n  )\n}\n\nexport default Panel\n","import React from 'react'\nimport { SvgProps } from '../../../components/Svg'\nimport Flex from '../../../components/Box/Flex'\nimport Dropdown from '../../../components/Dropdown/Dropdown'\nimport Link from '../../../components/Link/Link'\nimport * as IconModule from '../icons'\nimport { socials } from '../config'\n\nconst Icons = IconModule as unknown as { [key: string]: React.FC<SvgProps> }\n\nconst SocialLinks: React.FC = () => (\n  <Flex alignItems=\"center\" ml=\"12px\">\n    {socials.map((social, index) => {\n      const Icon = Icons[social.icon]\n      const iconProps = { width: '24px', color: 'textSubtle', style: { cursor: 'pointer' } }\n      const mr = index < socials.length - 1 ? '12px' : 0\n\n      return (\n        <Link external key={social.label} href={social.href} aria-label={social.label} mr={mr}>\n          <Icon {...iconProps} />\n        </Link>\n      )\n    })}\n  </Flex>\n)\n\nexport default React.memo(SocialLinks, () => true)\n","import React, { useState, useEffect, useRef } from 'react'\nimport styled from 'styled-components'\nimport throttle from 'lodash/throttle'\nimport Overlay from '../../components/Overlay/Overlay'\nimport Flex from '../../components/Box/Flex'\nimport { useMatchBreakpoints } from '../../hooks'\nimport Logo from './components/Logo'\nimport Panel from './components/Panel'\nimport { NavProps } from './types'\nimport { MENU_HEIGHT, SIDEBAR_WIDTH_REDUCED, SIDEBAR_WIDTH_FULL } from './config'\nimport SocialLinks from './components/SocialLinks'\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst StyledNav = styled.nav<{ showMenu: boolean }>`\n  position: fixed;\n  top: ${({ showMenu }) => (showMenu ? 0 : `-${MENU_HEIGHT}px`)};\n  left: 0;\n  transition: top 0.2s;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding-left: 8px;\n  padding-right: 16px;\n  width: 100%;\n  height: ${MENU_HEIGHT}px;\n  background-color: ${({ theme }) => theme.nav.background};\n  border-bottom: solid 2px rgba(133, 133, 133, 0.1);\n  z-index: 20;\n  transform: translate3d(0, 0, 0);\n`\n\nconst BodyWrapper = styled.div`\n  position: relative;\n  display: flex;\n`\n\nconst Inner = styled.div<{ isPushed: boolean; showMenu: boolean }>`\n  flex-grow: 1;\n  margin-top: ${({ showMenu }) => (showMenu ? `${MENU_HEIGHT}px` : 0)};\n  transition: margin-top 0.2s, margin-left 0.2s cubic-bezier(0.4, 0, 0.2, 1);\n  transform: translate3d(0, 0, 0);\n  max-width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.nav} {\n    margin-left: ${({ isPushed }) => `${isPushed ? SIDEBAR_WIDTH_FULL : SIDEBAR_WIDTH_REDUCED}px`};\n    max-width: ${({ isPushed }) => `calc(100% - ${isPushed ? SIDEBAR_WIDTH_FULL : SIDEBAR_WIDTH_REDUCED}px)`};\n  }\n`\n\nconst MobileOnlyOverlay = styled(Overlay)`\n  position: fixed;\n  height: 100%;\n\n  ${({ theme }) => theme.mediaQueries.nav} {\n    display: none;\n  }\n`\n\nconst Menu: React.FC<NavProps> = ({\n  userMenu,\n  globalMenu,\n  isDark,\n  toggleTheme,\n  langs,\n  setLang,\n  currentLang,\n  cakePriceUsd,\n  links,\n  children,\n}) => {\n  const { isMobile, isTablet } = useMatchBreakpoints()\n  const isSmallerScreen = isMobile || isTablet\n  const [isPushed, setIsPushed] = useState(!isSmallerScreen)\n  const [showMenu, setShowMenu] = useState(true)\n  const refPrevOffset = useRef(window.pageYOffset)\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const currentOffset = window.pageYOffset\n      const isBottomOfPage = window.document.body.clientHeight === currentOffset + window.innerHeight\n      const isTopOfPage = currentOffset === 0\n      // Always show the menu when user reach the top\n      if (isTopOfPage) {\n        setShowMenu(true)\n      }\n      // Avoid triggering anything at the bottom because of layout shift\n      else if (!isBottomOfPage) {\n        if (currentOffset < refPrevOffset.current) {\n          // Has scroll up\n          setShowMenu(true)\n        } else {\n          // Has scroll down\n          setShowMenu(false)\n        }\n      }\n      refPrevOffset.current = currentOffset\n    }\n    const throttledHandleScroll = throttle(handleScroll, 200)\n\n    window.addEventListener('scroll', throttledHandleScroll)\n    return () => {\n      window.removeEventListener('scroll', throttledHandleScroll)\n    }\n  }, [])\n\n  // Find the home link if provided\n  const homeLink = links.find((link) => link.label === 'Home')\n\n  return (\n    <Wrapper>\n      <StyledNav showMenu={showMenu}>\n        <Flex>\n          <Logo\n            isPushed={isPushed}\n            togglePush={() => setIsPushed((prevState: boolean) => !prevState)}\n            isDark={isDark}\n            href={homeLink?.href ?? '/'}\n          />\n          <SocialLinks />\n        </Flex>\n\n        <Flex>\n          {globalMenu} {userMenu}\n        </Flex>\n      </StyledNav>\n      <BodyWrapper>\n        <Panel\n          isPushed={isPushed}\n          isMobile={isSmallerScreen}\n          showMenu={showMenu}\n          isDark={isDark}\n          toggleTheme={toggleTheme}\n          langs={langs}\n          setLang={setLang}\n          currentLang={currentLang}\n          cakePriceUsd={cakePriceUsd}\n          pushNav={setIsPushed}\n          links={links}\n        />\n        <Inner isPushed={isPushed} showMenu={showMenu}>\n          {children}\n        </Inner>\n        <MobileOnlyOverlay show={isPushed} onClick={() => setIsPushed(false)} role=\"presentation\" />\n      </BodyWrapper>\n    </Wrapper>\n  )\n}\n\nexport default Menu\n","import { FlexProps } from 'styled-system'\n\nexport const variants = {\n  DEFAULT: 'default',\n  WARNING: 'warning',\n  DANGER: 'danger',\n  PENDING: 'pending',\n} as const\n\nexport type Variant = typeof variants[keyof typeof variants]\n\nexport interface UserMenuProps extends FlexProps {\n  account?: string\n  text?: string\n  avatarSrc?: string\n  variant?: Variant\n}\n\nexport interface UserMenuItemProps {\n  disabled?: boolean\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Variant, variants } from './types'\nimport { Image } from '../../../../components/Image'\nimport { RefreshIcon, WalletFilledIcon, WarningIcon } from '../../../../components/Svg'\nimport { Colors } from '../../../../theme/types'\n\nconst MenuIconWrapper = styled.div<{ borderColor: keyof Colors }>`\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.background};\n  border-color: ${({ theme, borderColor }) => theme.colors[borderColor]};\n  border-radius: 50%;\n  border-style: solid;\n  border-width: 2px;\n  display: flex;\n  height: 40px;\n  justify-content: center;\n  left: 0;\n  position: absolute;\n  top: -4px;\n  width: 40px;\n  z-index: 102;\n`\n\nconst ProfileIcon = styled(Image)`\n  left: 0;\n  position: absolute;\n  top: -4px;\n  z-index: 102;\n\n  & > img {\n    border-radius: 50%;\n  }\n`\n\nexport const NoProfileMenuIcon: React.FC = () => (\n  <MenuIconWrapper borderColor=\"primary\">\n    <WalletFilledIcon color=\"primary\" width=\"24px\" />\n  </MenuIconWrapper>\n)\n\nexport const PendingMenuIcon: React.FC = () => (\n  <MenuIconWrapper borderColor=\"secondary\">\n    <RefreshIcon color=\"secondary\" width=\"24px\" spin />\n  </MenuIconWrapper>\n)\n\nexport const WarningMenuIcon: React.FC = () => (\n  <MenuIconWrapper borderColor=\"warning\">\n    <WarningIcon color=\"warning\" width=\"24px\" />\n  </MenuIconWrapper>\n)\n\nexport const DangerMenuIcon: React.FC = () => (\n  <MenuIconWrapper borderColor=\"failure\">\n    <WarningIcon color=\"failure\" width=\"24px\" />\n  </MenuIconWrapper>\n)\n\nconst MenuIcon: React.FC<{ avatarSrc?: string; variant: Variant }> = ({ avatarSrc, variant }) => {\n  if (variant === variants.DANGER) {\n    return <DangerMenuIcon />\n  }\n\n  if (variant === variants.WARNING) {\n    return <WarningMenuIcon />\n  }\n\n  if (variant === variants.PENDING) {\n    return <PendingMenuIcon />\n  }\n\n  if (!avatarSrc) {\n    return <NoProfileMenuIcon />\n  }\n\n  return <ProfileIcon src={avatarSrc} height={40} width={40} />\n}\n\nexport default MenuIcon\n","import styled from 'styled-components'\nimport { UserMenuItemProps } from './types'\n\nexport const UserMenuDivider = styled.hr`\n  border-color: ${({ theme }) => theme.colors.cardBorder};\n  border-style: solid;\n  border-width: 1px 0 0;\n  margin: 4px 0;\n`\n\nexport const UserMenuItem = styled.button<UserMenuItemProps>`\n  align-items: center;\n  border: 0;\n  background: transparent;\n  color: ${({ theme, disabled }) => theme.colors[disabled ? 'textDisabled' : 'textSubtle']};\n  cursor: ${({ disabled }) => (disabled ? 'not-allowed' : 'pointer')};\n  display: flex;\n  font-size: 16px;\n  height: 48px;\n  justify-content: space-between;\n  outline: 0;\n  padding-left: 16px;\n  padding-right: 16px;\n  width: 100%;\n\n  &:hover:not(:disabled) {\n    background-color: ${({ theme }) => theme.colors.tertiary};\n  }\n\n  &:active:not(:disabled) {\n    opacity: 0.85;\n    transform: translateY(1px);\n  }\n`\n","import React, { useEffect, useRef, useState } from 'react'\nimport { usePopper } from 'react-popper'\nimport styled from 'styled-components'\nimport Flex from '../../../../components/Box/Flex'\nimport { ChevronDownIcon } from '../../../../components/Svg'\nimport isTouchDevice from '../../../../util/isTouchDevice'\nimport { UserMenuProps, variants } from './types'\nimport MenuIcon from './MenuIcon'\nimport { UserMenuItem } from './styles'\n\nconst StyledUserMenu = styled(Flex)`\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.tertiary};\n  border-radius: 16px;\n  box-shadow: inset 0px -2px 0px rgba(0, 0, 0, 0.1);\n  cursor: pointer;\n  display: inline-flex;\n  height: 32px;\n  padding-left: 40px;\n  padding-right: 8px;\n  position: relative;\n\n  &:hover {\n    opacity: 0.65;\n  }\n`\n\nconst LabelText = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  display: none;\n  font-weight: 600;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n    margin-left: 8px;\n    margin-right: 4px;\n  }\n`\n\nconst Menu = styled.div<{ isOpen: boolean }>`\n  background-color: ${({ theme }) => theme.card.background};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  border-radius: 16px;\n  padding-bottom: 4px;\n  padding-top: 4px;\n  pointer-events: auto;\n  width: 280px;\n  visibility: visible;\n  z-index: 1001;\n\n  ${({ isOpen }) =>\n    !isOpen &&\n    `\n    pointer-events: none;\n    visibility: hidden;\n  `}\n\n  ${UserMenuItem}:first-child {\n    border-radius: 8px 8px 0 0;\n  }\n\n  ${UserMenuItem}:last-child {\n    border-radius: 0 0 8px 8px;\n  }\n`\n\nconst UserMenu: React.FC<UserMenuProps> = ({\n  account,\n  text,\n  avatarSrc,\n  variant = variants.DEFAULT,\n  children,\n  ...props\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const [targetRef, setTargetRef] = useState<HTMLDivElement | null>(null)\n  const [tooltipRef, setTooltipRef] = useState<HTMLDivElement | null>(null)\n  const hideTimeout = useRef<number>()\n  const isHoveringOverTooltip = useRef(false)\n  const accountEllipsis = account ? `${account.substring(0, 2)}...${account.substring(account.length - 4)}` : null\n  const { styles, attributes } = usePopper(targetRef, tooltipRef, {\n    placement: 'bottom-end',\n    modifiers: [{ name: 'offset', options: { offset: [0, 12] } }],\n  })\n\n  /**\n   * See \"useTooltip\"\n   */\n  useEffect(() => {\n    const showTooltip = (evt: MouseEvent | TouchEvent) => {\n      setIsOpen(true)\n\n      if (evt.target === targetRef) {\n        clearTimeout(hideTimeout.current)\n      }\n\n      if (evt.target === tooltipRef) {\n        isHoveringOverTooltip.current = true\n      }\n    }\n\n    const hideTooltip = (evt: MouseEvent | TouchEvent) => {\n      if (hideTimeout.current) {\n        window.clearTimeout(hideTimeout.current)\n      }\n\n      if (evt.target === tooltipRef) {\n        isHoveringOverTooltip.current = false\n      }\n\n      if (!isHoveringOverTooltip.current) {\n        hideTimeout.current = window.setTimeout(() => {\n          if (!isHoveringOverTooltip.current) {\n            setIsOpen(false)\n          }\n        }, 150)\n      }\n    }\n\n    const toggleTouch = (evt: TouchEvent) => {\n      const target = evt.target as Node\n      const isTouchingTargetRef = target && targetRef?.contains(target)\n      const isTouchingTooltipRef = target && tooltipRef?.contains(target)\n\n      if (isTouchingTargetRef) {\n        setIsOpen((prevOpen) => !prevOpen)\n      } else if (isTouchingTooltipRef) {\n        // Don't close the menu immediately so it catches the event\n        setTimeout(() => {\n          setIsOpen(false)\n        }, 100)\n      } else {\n        setIsOpen(false)\n      }\n    }\n\n    if (isTouchDevice()) {\n      document.addEventListener('touchstart', toggleTouch)\n    } else {\n      targetRef?.addEventListener('mouseenter', showTooltip)\n      targetRef?.addEventListener('mouseleave', hideTooltip)\n      tooltipRef?.addEventListener('mouseenter', showTooltip)\n      tooltipRef?.addEventListener('mouseleave', hideTooltip)\n    }\n\n    return () => {\n      if (isTouchDevice()) {\n        document.removeEventListener('touchstart', toggleTouch)\n      } else {\n        targetRef?.removeEventListener('mouseenter', showTooltip)\n        targetRef?.removeEventListener('mouseleave', hideTooltip)\n        tooltipRef?.removeEventListener('mouseenter', showTooltip)\n        tooltipRef?.removeEventListener('mouseleave', hideTooltip)\n      }\n    }\n  }, [targetRef, tooltipRef, hideTimeout, isHoveringOverTooltip, setIsOpen])\n\n  return (\n    <>\n      <StyledUserMenu ref={setTargetRef} {...props}>\n        <MenuIcon avatarSrc={avatarSrc} variant={variant} />\n        <LabelText title={text || account}>{text || accountEllipsis}</LabelText>\n        <ChevronDownIcon color=\"text\" width=\"24px\" />\n      </StyledUserMenu>\n      <Menu style={styles.popper} ref={setTooltipRef} {...attributes.popper} isOpen={isOpen}>\n        {children}\n      </Menu>\n    </>\n  )\n}\n\nexport default UserMenu\n","import Metamask from '../../components/Svg/Icons/Metamask'\nimport WalletConnect from '../../components/Svg/Icons/WalletConnect'\nimport TrustWallet from '../../components/Svg/Icons/TrustWallet'\nimport MathWallet from '../../components/Svg/Icons/MathWallet'\nimport TokenPocket from '../../components/Svg/Icons/TokenPocket'\nimport BinanceChain from '../../components/Svg/Icons/BinanceChain'\nimport SafePal from '../../components/Svg/Icons/SafePal'\nimport Coin98 from '../../components/Svg/Icons/Coin98'\n\nimport { Config, ConnectorNames } from './types'\n\nconst connectors: Config[] = [\n  {\n    title: 'Metamask',\n    icon: Metamask,\n    connectorId: ConnectorNames.Injected,\n    priority: 1,\n  },\n  // {\n  //   title: 'WalletConnect',\n  //   icon: WalletConnect,\n  //   connectorId: ConnectorNames.WalletConnect,\n  //   priority: 2,\n  // },\n  // {\n  //   title: \"Trust Wallet\",\n  //   icon: TrustWallet,\n  //   connectorId: ConnectorNames.Injected,\n  //   priority: 3,\n  // },\n  // {\n  //   title: \"MathWallet\",\n  //   icon: MathWallet,\n  //   connectorId: ConnectorNames.Injected,\n  //   priority: 999,\n  // },\n  // {\n  //   title: \"TokenPocket\",\n  //   icon: TokenPocket,\n  //   connectorId: ConnectorNames.Injected,\n  //   priority: 999,\n  // },\n\n  // {\n  //   title: \"Binance Chain\",\n  //   icon: BinanceChain,\n  //   connectorId: ConnectorNames.BSC,\n  //   priority: 999,\n  // },\n  // {\n  //   title: \"SafePal\",\n  //   icon: SafePal,\n  //   connectorId: ConnectorNames.Injected,\n  //   priority: 999,\n  // },\n  // {\n  //   title: \"Coin98\",\n  //   icon: Coin98,\n  //   connectorId: ConnectorNames.Injected,\n  //   priority: 999,\n  // },\n]\n\nexport default connectors\nexport const connectorLocalStorageKey = 'connectorIdv2'\nexport const walletLocalStorageKey = 'wallet'\n","import React from 'react'\nimport styled from 'styled-components'\nimport Button from '../../components/Button/Button'\nimport Text from '../../components/Text/Text'\nimport MoreHorizontal from '../../components/Svg/Icons/MoreHorizontal'\nimport { ButtonProps } from '../../components/Button'\nimport { connectorLocalStorageKey, walletLocalStorageKey } from './config'\nimport { Login, Config, ConnectorNames } from './types'\n\ninterface Props {\n  walletConfig: Config\n  login: Login\n  onDismiss: () => void\n}\n\nconst WalletButton = styled(Button).attrs({ width: '100%', variant: 'text', py: '16px' })`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  height: auto;\n  justify-content: center;\n  margin-left: auto;\n  margin-right: auto;\n`\n\ninterface MoreWalletCardProps extends ButtonProps {\n  t: (key: string) => string\n}\n\nexport const MoreWalletCard: React.FC<MoreWalletCardProps> = ({ t, ...props }) => {\n  return (\n    <WalletButton variant=\"tertiary\" {...props}>\n      <MoreHorizontal width=\"40px\" mb=\"8px\" color=\"textSubtle\" />\n      <Text fontSize=\"14px\">{t('More')}</Text>\n    </WalletButton>\n  )\n}\n\nconst WalletCard: React.FC<Props> = ({ login, walletConfig, onDismiss }) => {\n  const { title, icon: Icon } = walletConfig\n\n  return (\n    <WalletButton\n      variant=\"tertiary\"\n      onClick={() => {\n        const isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n\n        // Since iOS does not support Trust Wallet we fall back to WalletConnect\n        if (walletConfig.title === 'Trust Wallet' && isIOS) {\n          login(ConnectorNames.WalletConnect)\n        } else {\n          login(walletConfig.connectorId)\n        }\n\n        localStorage.setItem(walletLocalStorageKey, walletConfig.title)\n        localStorage.setItem(connectorLocalStorageKey, walletConfig.connectorId)\n        onDismiss()\n      }}\n      id={`wallet-connect-${title.toLocaleLowerCase()}`}\n    >\n      <Icon width=\"40px\" mb=\"8px\" />\n      <Text fontSize=\"14px\">{title}</Text>\n    </WalletButton>\n  )\n}\n\nexport default WalletCard\n","import React, { useState } from 'react'\nimport styled, { useTheme } from 'styled-components'\nimport getExternalLinkProps from '../../util/getExternalLinkProps'\nimport Grid from '../../components/Box/Grid'\nimport Box from '../../components/Box/Box'\nimport getThemeValue from '../../util/getThemeValue'\nimport Text from '../../components/Text/Text'\nimport Heading from '../../components/Heading/Heading'\nimport { Button } from '../../components/Button'\nimport { ModalBody, ModalCloseButton, ModalContainer, ModalHeader, ModalTitle } from '../Modal'\nimport WalletCard, { MoreWalletCard } from './WalletCard'\nimport config, { walletLocalStorageKey } from './config'\nimport { Config, Login } from './types'\n\ninterface Props {\n  login: Login\n  onDismiss?: () => void\n  displayCount?: number\n  t: (key: string) => string\n}\n\nconst WalletWrapper = styled(Box)`\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\n/**\n * Checks local storage if we have saved the last wallet the user connected with\n * If we find something we put it at the top of the list\n *\n * @returns sorted config\n */\nconst getPreferredConfig = (walletConfig: Config[]) => {\n  const preferredWalletName = localStorage.getItem(walletLocalStorageKey)\n  const sortedConfig = walletConfig.sort((a: Config, b: Config) => a.priority - b.priority)\n\n  if (!preferredWalletName) {\n    return sortedConfig\n  }\n\n  const preferredWallet = sortedConfig.find((sortedWalletConfig) => sortedWalletConfig.title === preferredWalletName)\n\n  if (!preferredWallet) {\n    return sortedConfig\n  }\n\n  return [\n    preferredWallet,\n    ...sortedConfig.filter((sortedWalletConfig) => sortedWalletConfig.title !== preferredWalletName),\n  ]\n}\n\nconst ConnectModal: React.FC<Props> = ({ login, onDismiss = () => null, displayCount = 3, t }) => {\n  const [showMore, setShowMore] = useState(false)\n  const theme = useTheme()\n  const sortedConfig = getPreferredConfig(config)\n  const displayListConfig = showMore ? sortedConfig : sortedConfig.slice(0, displayCount)\n\n  return (\n    <ModalContainer minWidth=\"320px\">\n      <ModalHeader background={getThemeValue('colors.gradients.bubblegum')(theme)}>\n        <ModalTitle>\n          <Heading>{t('Connect Wallet')}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <ModalBody width={['320px', null, '340px']}>\n        <WalletWrapper py=\"24px\" maxHeight=\"453px\" overflowY=\"auto\">\n          <Grid gridTemplateColumns=\"1fr 1fr\">\n            {displayListConfig.map((wallet) => (\n              <Box key={wallet.title}>\n                <WalletCard walletConfig={wallet} login={login} onDismiss={onDismiss} />\n              </Box>\n            ))}\n            {/* {!showMore && <MoreWalletCard t={t} onClick={() => setShowMore(true)} />} */}\n          </Grid>\n        </WalletWrapper>\n        <Box p=\"24px\">\n          <Text textAlign=\"center\" color=\"textSubtle\" as=\"p\" mb=\"16px\">\n            {t('Haven’t got a crypto wallet yet?')}\n          </Text>\n          <Button\n            as=\"a\"\n            href=\"https://docs.zolaswap.finance/zolaswap/\"\n            variant=\"subtle\"\n            width=\"100%\"\n            {...getExternalLinkProps()}\n          >\n            {t('Learn How to Connect')}\n          </Button>\n        </Box>\n      </ModalBody>\n    </ModalContainer>\n  )\n}\n\nexport default ConnectModal\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport Text from '../../components/Text/Text'\nimport { CopyIcon } from '../../components/Svg'\n\ninterface Props {\n  toCopy: string\n}\n\nconst StyleButton = styled(Text).attrs({ role: 'button' })`\n  position: relative;\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst Tooltip = styled.div<{ isTooltipDisplayed: boolean }>`\n  display: ${({ isTooltipDisplayed }) => (isTooltipDisplayed ? 'block' : 'none')};\n  position: absolute;\n  bottom: -22px;\n  right: 0;\n  left: 0;\n  text-align: center;\n  background-color: ${({ theme }) => theme.colors.contrast};\n  color: ${({ theme }) => theme.colors.invertedContrast};\n  border-radius: 16px;\n  opacity: 0.7;\n`\n\nconst CopyToClipboard: React.FC<Props> = ({ toCopy, children, ...props }) => {\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false)\n\n  const copyToClipboardWithCommand = (content: string) => {\n    const el = document.createElement('textarea')\n    el.value = content\n    document.body.appendChild(el)\n    el.select()\n    document.execCommand('copy')\n    document.body.removeChild(el)\n  }\n\n  function displayTooltip() {\n    setIsTooltipDisplayed(true)\n    setTimeout(() => {\n      setIsTooltipDisplayed(false)\n    }, 1000)\n  }\n\n  return (\n    <StyleButton\n      small\n      bold\n      onClick={() => {\n        if (navigator.clipboard && navigator.permissions) {\n          navigator.clipboard.writeText(toCopy).then(() => displayTooltip())\n        } else if (document.queryCommandSupported('copy')) {\n          copyToClipboardWithCommand(toCopy)\n          displayTooltip()\n        }\n      }}\n      {...props}\n    >\n      {children}\n      <CopyIcon width=\"20px\" color=\"primary\" ml=\"4px\" />\n      <Tooltip isTooltipDisplayed={isTooltipDisplayed}>Copied</Tooltip>\n    </StyleButton>\n  )\n}\n\nexport default CopyToClipboard\n","import React from 'react'\nimport Button from '../../components/Button/Button'\nimport Text from '../../components/Text/Text'\nimport LinkExternal from '../../components/Link/LinkExternal'\nimport Flex from '../../components/Box/Flex'\nimport { Modal } from '../Modal'\nimport CopyToClipboard from './CopyToClipboard'\nimport { connectorLocalStorageKey } from './config'\n\ninterface Props {\n  account: string\n  logout: () => void\n  onDismiss?: () => void\n  t: (key: string) => string\n}\n\nconst AccountModal: React.FC<Props> = ({ account, logout, onDismiss = () => null, t }) => (\n  <Modal title={t('Your wallet')} onDismiss={onDismiss}>\n    <Text\n      fontSize=\"20px\"\n      bold\n      style={{ whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis', marginBottom: '8px' }}\n    >\n      {account}\n    </Text>\n    <Flex mb=\"32px\">\n      <LinkExternal small href={`https://bscscan.com/address/${account}`} mr=\"16px\">\n        {t('View on Polygon Explorer')}\n      </LinkExternal>\n      <CopyToClipboard toCopy={account}>{t('Copy Address')}</CopyToClipboard>\n    </Flex>\n    <Flex justifyContent=\"center\">\n      <Button\n        scale=\"sm\"\n        variant=\"secondary\"\n        onClick={() => {\n          logout()\n          window.localStorage.removeItem(connectorLocalStorageKey)\n          onDismiss()\n        }}\n      >\n        {t('Logout')}\n      </Button>\n    </Flex>\n  </Modal>\n)\n\nexport default AccountModal\n","import React from 'react'\nimport { useModal } from '../Modal'\nimport ConnectModal from './ConnectModal'\nimport AccountModal from './AccountModal'\nimport { Login } from './types'\n\ninterface ReturnType {\n  onPresentConnectModal: () => void\n  onPresentAccountModal: () => void\n}\n\nconst useWalletModal = (login: Login, logout: () => void, t: (key: string) => string, account?: string): ReturnType => {\n  const [onPresentConnectModal] = useModal(<ConnectModal login={login} t={t} />)\n  const [onPresentAccountModal] = useModal(<AccountModal account={account || ''} logout={logout} t={t} />)\n  return { onPresentConnectModal, onPresentAccountModal }\n}\n\nexport default useWalletModal\n","import { createGlobalStyle } from 'styled-components'\n\nconst ResetCSS = createGlobalStyle`\n  /* prettier-ignore */\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed, \n  figure, figcaption, footer, header, hgroup, \n  menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    vertical-align: baseline;\n  }\n  /* HTML5 display-role reset for older browsers */\n  /* prettier-ignore */\n  article, aside, details, figcaption, figure, \n  footer, header, hgroup, menu, nav, section {\n    display: block;\n  }\n  body {\n    line-height: 1;\n    font-size: 16px;\n  }\n  ol,\n  ul {\n    list-style: disc;\n    list-style-position: inside;\n  }\n  blockquote,\n  q {\n    quotes: none;\n  }\n  blockquote:before,\n  blockquote:after,\n  q:before,\n  q:after {\n    content: \"\";\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n  a {\n    color: inherit;\n    text-decoration: none;\n  }\n  [role=\"button\"] {\n    cursor: pointer;\n  }\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n  }\n  * {\n    font-family: 'Kanit', sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  /* Number */\n  input::-webkit-outer-spin-button,\n  input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n  input[type=number] {\n    -moz-appearance: textfield;\n  }\n\n  /* Scrollbar */\n  ::-webkit-scrollbar {\n    width: 8px;\n  }\n  ::-webkit-scrollbar-thumb {\n    background: ${({ theme }) => theme.colors.textSubtle}; \n    border-radius: 8px;\n  }\n  ::-webkit-scrollbar-track {\n    box-shadow: inset 0 0 5px ${({ theme }) => theme.colors.input}; \n    border-radius: 10px;\n  }\n\n  /* Slider */ \n  input[type=range] {\n    -webkit-appearance: none; /* Hides the slider so that custom slider can be made */\n    width: 100%; /* Specific width is required for Firefox. */\n    background: transparent; /* Otherwise white in Chrome */\n  }\n  input[type=range]::-webkit-slider-thumb {\n    -webkit-appearance: none;\n  }\n  input[type=range]:focus {\n    outline: none; /* Removes the blue border. You should probably do some kind of focus styling for accessibility reasons though. */\n  }\n  input[type=range]::-ms-track {\n    width: 100%;\n    cursor: pointer;\n    /* Hides the slider so custom styles can be added */\n    background: transparent; \n    border-color: transparent;\n    color: transparent;\n  }  \n`\n\nexport default ResetCSS\n","import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from 'packages/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","import { useEffect, useState, useRef } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Web3Provider } from '@ethersproject/providers'\nimport { simpleRpcProvider } from 'utils/providers'\n// eslint-disable-next-line import/no-unresolved\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\n\n/**\n * Provides a web3 provider with or without user's signer\n * Recreate web3 instance only if the provider change\n */\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\n  const { library, chainId, ...web3React } = useWeb3React()\n  const refEth = useRef(library)\n  const [provider, setprovider] = useState(library || simpleRpcProvider)\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setprovider(library || simpleRpcProvider)\n      refEth.current = library\n    }\n  }, [library])\n\n  return { library: provider, chainId: chainId ?? parseInt(process.env.REACT_APP_CHAIN_ID, 10), ...web3React }\n}\n\nexport default useActiveWeb3React\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string; noLiquidity: boolean }>('mint/typeInputMint')\nexport const resetMintState = createAction<void>('mint/resetMintState')\n","import styled from 'styled-components'\nimport { Box } from 'packages/uikit'\n\nconst Row = styled(Box)<{\n  width?: string\n  align?: string\n  justify?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  display: flex;\n  padding: 0;\n  align-items: ${({ align }) => align ?? 'center'};\n  justify-content: ${({ justify }) => justify ?? 'flex-start'};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)<{ gap?: string; justify?: string }>`\n  flex-wrap: wrap;\n  margin: ${({ gap }) => gap && `-${gap}`};\n  justify-content: ${({ justify }) => justify && justify};\n\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)<{ gap?: string; justify?: string }>`\n  width: fit-content;\n  margin: ${({ gap }) => gap && `-${gap}`};\n`\n\nexport default Row\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  INPUT = 'INPUT',\n  OUTPUT = 'OUTPUT',\n}\n\nexport const selectCurrency = createAction<{ field: Field; currencyId: string }>('swap/selectCurrency')\nexport const switchCurrencies = createAction<void>('swap/switchCurrencies')\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('swap/typeInput')\nexport const replaceSwapState = createAction<{\n  field: Field\n  typedValue: string\n  inputCurrencyId?: string\n  outputCurrencyId?: string\n  recipient: string | null\n}>('swap/replaceSwapState')\nexport const setRecipient = createAction<{ recipient: string | null }>('swap/setRecipient')\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n\nexport const ethersToSerializedBigNumber = (ethersBn: ethers.BigNumber): SerializedBigNumber =>\n  ethersToBigNumber(ethersBn).toJSON()\n\nexport const ethersToBigNumber = (ethersBn: ethers.BigNumber): BigNumber => new BigNumber(ethersBn.toString())\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport { getLanguageCodeFromLS } from 'contexts/Localization/helpers'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object\n * Note: does NOT round\n */\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\n  return formatUnits(number.sub(remainder), decimals)\n}\n\n/**\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\n * Note: rounds\n */\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\n  const formattedString = formatUnits(number, decimals)\n  return (+formattedString).toFixed(displayDecimals)\n}\n\n/**\n * Formats a FixedNumber like BigNumber\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\n */\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\n  // Remove decimal\n  const [leftSide] = number.toString().split('.')\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\n}\n\nexport const formatLocalisedCompactNumber = (number: number): string => {\n  const codeFromStorage = getLanguageCodeFromLS()\n  return new Intl.NumberFormat(codeFromStorage, {\n    notation: 'compact',\n    compactDisplay: 'long',\n    maximumSignificantDigits: 2,\n  }).format(number)\n}\n\nexport default formatLocalisedCompactNumber\n","import addresses from './addresses.json'\n\nexport default {\n  masterChef: {\n    80001: addresses[80001].ZOLAFarm,\n    137: addresses[137].ZOLAFarm,\n  },\n  sousChef: {\n    8001: addresses[80001].ZOLAStakingFactory,\n    137: addresses[137].ZOLAStakingFactory,\n  },\n  lotteryV2: {\n    137: addresses[137].ZolaSwapLottery,\n    80001: '',\n  },\n  multiCall: {\n    80001: addresses[80001].Multicall2,\n    137: addresses[137].Multicall2,\n  },\n  // not\n  pancakeProfile: {\n    8001: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    137: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  //\n  pancakeRabbits: {\n    137: '0xDf7952B35f24aCF7fC0487D01c8d10690a60DBa07',\n    80001: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  //\n  bunnyFactory: {\n    137: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    80001: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  //\n  claimRefund: {\n    137: '0xE7e53A7e9E3Cf6b840f167eF69519175c4111e149',\n    80001: '',\n  },\n  pointCenterIfo: {\n    137: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    80001: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A29111e3',\n  },\n  bunnySpecial: {\n    137: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    80001: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    137: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    80001: '0xC787F45B833721ED3aC46E99b703B3E1E01abb111',\n  },\n  easterNft: {\n    137: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\n    80001: '0x24ec6962dbe874F6B67B5C5085710610667fA0854F',\n  },\n  cakeVault: {\n    137: addresses[137].ZOLAVault,\n    80001: addresses[80001].ZOLAVault,\n  },\n  predictions: {\n    137: '0x18B2A687610328590Bc8F2e5fEdDe3b582A49cdA',\n    80001: '',\n  },\n  chainlinkOracle: {\n    137: '0xD276fCF34D54A926773c399eBAa772C12ec394aC',\n    80001: '',\n  },\n  bunnySpecialCakeVault: {\n    137: '0x5B4a770Abe7Eafb2601CA4dF9d73EA99363E60a4',\n    80001: '',\n  },\n  bunnySpecialPrediction: {\n    137: '0x342c99e9aC24157657095eC69CB04b73257e7A9C',\n    80001: '',\n  },\n  bunnySpecialLottery: {\n    137: '0x24ED31d31C5868e5a96aA77fdcB890f3511fa0b2',\n    80001: '0x382cB4111110F398F0f152cae82821476AE51c9cF',\n  },\n  farmAuction: {\n    137: '0xb92Ab7c1edcb273AbA24b06106cEb3681654805D2',\n    80001: '0x3F9602593b4f7C67ab045DB51BbDEa94E40fA9Fe',\n  },\n}\n","import { ChainId } from '@wagyu-swap/sdk'\nimport addresses from 'config/constants/contracts'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[ChainId.MAINNET]\n}\n\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getLotteryV2Address = () => {\n  return getAddress(addresses.lotteryV2)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\nexport const getBunnySpecialCakeVaultAddress = () => {\n  return getAddress(addresses.bunnySpecialCakeVault)\n}\nexport const getBunnySpecialPredictionAddress = () => {\n  return getAddress(addresses.bunnySpecialPrediction)\n}\nexport const getBunnySpecialLotteryAddress = () => {\n  return getAddress(addresses.bunnySpecialLottery)\n}\nexport const getFarmAuctionAddress = () => {\n  return getAddress(addresses.farmAuction)\n}\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div<{\n  gap?: 'sm' | 'md' | 'lg' | string\n  justify?: 'stretch' | 'center' | 'start' | 'end' | 'flex-start' | 'flex-end' | 'space-between'\n}>`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import { ChainId, Token } from '@wagyu-swap/sdk'\nimport { serializeToken } from '../../state/user/hooks/helpers'\nimport { SerializedToken } from './types'\nimport addresses from './addresses.json'\n\nconst { MAINNET, TESTNET } = ChainId\n\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\ninterface TokenList {\n  [symbol: string]: Token\n}\n\ninterface SerializedTokenList {\n  [symbol: string]: SerializedToken\n}\n\nexport const mainnetTokens = {\n  // bnb here points to the wbnb contract. Wherever the currency BNB is required, conditional checks for the symbol 'BNB' can be used\n  wmatic: new Token(MAINNET, addresses[137].WMATIC, 18, 'WMATIC', 'Wrapped MATIC', 'https://zolaswap.finance/'),\n  lazermoon: new Token(\n    MAINNET,\n    addresses[137].LAZERMOON,\n    18,\n    'LAZERMOON',\n    'Lazermoon token',\n    'https://lazermoon.finance/',\n  ),\n  matic: new Token(\n    MAINNET,\n    '0x0000000000000000000000000000000000001010',\n    18,\n    'MATIC',\n    'MATIC',\n    'https://polygontechnology.com/',\n  ),\n  aave: new Token(\n    MAINNET,\n    '0xD6DF932A45C0f255f85145f286eA0b292B21C90B',\n    18,\n    'AAVE',\n    'AAVE Token',\n    'https://aave.finance/',\n  ),\n  shib: new Token(\n    MAINNET,\n    '0x6f8a06447Ff6FcF75d803135a7de15CE88C1d4ec',\n    18,\n    'SHIB',\n    'Shiba Inu',\n    'https://shibainu.finance/',\n  ),\n  bnb: new Token(MAINNET, '0x3BA4c387f786bFEE076A58914F5Bd38d668B42c3', 18, 'BNB', 'BNB', 'https://binance.com'),\n  zolamo: new Token(\n    MAINNET,\n    '0x108FD4c11d4a2A9a61ED420Ad21A198A6db5E100',\n    9,\n    'ZOLAMO',\n    'Zolamo',\n    'https://zolaswap.finance/',\n  ),\n  elon: new Token(\n    MAINNET,\n    '0xE0339c80fFDE91F3e20494Df88d4206D86024cdF',\n    18,\n    'ELON',\n    'Elon',\n    'https://zolaswap.finance',\n  ),\n  cake: new Token(\n    MAINNET,\n    '0x8a226293bC6f697A681B0b29f825c149655fEC2d',\n    18,\n    'ZOLA',\n    'Zola Token',\n    'https://zolaswap.finance/',\n  ),\n  usdc: new Token(MAINNET, '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174', 18, 'USDC', 'USDC Token', 'https://centre.io'),\n  quick: new Token(MAINNET, '0xB5C064F955D8e7F38fE0460C556a72987494eE17', 18, 'QUICK', 'https://quickswap.exchange/'),\n  banana: new Token(MAINNET, '0x5d47bAbA0d66083C52009271faF3F50DCc01023C', 18, 'BANANA', 'https://apeswap.finance/'),\n  usdt: new Token(MAINNET, '0xc2132D05D31c914a87C6611C10748AEb04B58e8F', 18, 'USDT', 'https://mapper.matic.today/'),\n  kom: new Token(MAINNET, '0xC004e2318722EA2b15499D6375905d75Ee5390B8', 8, 'KOM', 'https://www.kommunitas.net/'),\n  luna: new Token(MAINNET, '0x24834BBEc7E39ef42f4a75EAF8E5B6486d3F0e57', 18, 'LUNA', 'https://zolaswap.finance/'),\n  wbtc: new Token(MAINNET, '0x1BFD67037B42Cf73acF2047067bd4F2C47D9BfD6', 8, 'WBTC', 'https://zolaswap.finance/'),\n  mana: new Token(MAINNET, '0xA1c57f48F0Deb89f569dFbE6E2B7f46D33606fD4', 18, 'MANA', 'https://decentraland.org/'),\n  dai: new Token(MAINNET, '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063', 18, 'DAI', 'https://makerdao.com/'),\n  grt: new Token(MAINNET, '0x5fe2B58c013d7601147DcdD68C143A77499f5531', 18, 'GRT', 'https://thegraph.com/'),\n  syrup: new Token(MAINNET, addresses[137].ZOLAStake, 18, 'Syrup', 'Syrup Token', 'https://zolaswap.finance/'),\n  skilyne: new Token(MAINNET, addresses[137].SKILYNEToken, 18, 'SKILYNE', 'SkiLyne Token', 'https://zolaswap.finance/'),\n  gorydz: new Token(MAINNET, addresses[137].GORydzToken, 18, 'GORYDZ', 'GORydz Token', 'https://zolaswap.finance/'),\n}\n\nexport const testnetTokens = {\n  wmatic: new Token(\n    TESTNET,\n    '0xce2babFcb073bd638C8c63e7b59EDa23d1F15c3b',\n    18,\n    'WMATIC',\n    'Wrapped MATIC',\n    'https://zolaswap.finance/',\n  ),\n  cake: new Token(\n    TESTNET,\n    '0x4fAa02Adb061EC84666E301C3Cbf02CF0EA5D089',\n    18,\n    'ZOLA',\n    'ZOLA Token',\n    'https://zolaswap.finance/',\n  ),\n}\n\nconst tokens = (): TokenList => {\n  // If testnet - return list comprised of testnetTokens wherever they exist, and mainnetTokens where they don't\n  if (chainId === ChainId.TESTNET) {\n    // return Object.keys(mainnetTokens).reduce((accum, key) => {\n    //   return { ...accum, [key]: testnetTokens[key] || mainnetTokens[key] }\n    // }, {})\n    return Object.keys(testnetTokens).reduce((accum, key) => {\n      return { ...accum, [key]: testnetTokens[key] || mainnetTokens[key] }\n    }, {})\n  }\n\n  return mainnetTokens\n}\n\nexport const serializeTokens = (): SerializedTokenList => {\n  const unserializedTokens = tokens()\n  const serializedTokens = Object.keys(unserializedTokens).reduce((accum, key) => {\n    return { ...accum, [key]: serializeToken(unserializedTokens[key]) }\n  }, {})\n\n  return serializedTokens\n}\n\nexport default tokens()\n","import { ChainId, JSBI, Percent, Token } from '@wagyu-swap/sdk'\nimport { mainnetTokens, testnetTokens } from './tokens'\nimport addresses from './addresses.json'\n\n// export const ROUTER_ADDRESS = addresses[process.env.REACT_APP_CHAIN_ID].ZolaRouter\nexport const ROUTER_ADDRESS = addresses[137].ZolaRouter\n\n// a list of tokens by chain\ntype ChainTokenList = {\n  readonly [chainId in ChainId]: Token[]\n}\n\n// used to construct intermediary pairs for trading\nexport const BASES_TO_CHECK_TRADES_AGAINST: ChainTokenList = {\n  [ChainId.MAINNET]: [\n    mainnetTokens.wmatic,\n    mainnetTokens.cake,\n    mainnetTokens.usdc,\n    mainnetTokens.usdt,\n    mainnetTokens.aave,\n    mainnetTokens.shib,\n    mainnetTokens.kom,\n  ],\n  [ChainId.TESTNET]: [testnetTokens.wmatic, testnetTokens.cake],\n}\n\n/**\n * Addittional bases for specific tokens\n * @example { [WBTC.address]: [renBTC], [renBTC.address]: [WBTC] }\n */\nexport const ADDITIONAL_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n/**\n * Some tokens can only be swapped via certain pairs, so we override the list of bases that are considered for these\n * tokens.\n * @example [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n */\nexport const CUSTOM_BASES: { [chainId in ChainId]?: { [tokenAddress: string]: Token[] } } = {\n  [ChainId.MAINNET]: {},\n}\n\n// used for display in the default list when adding liquidity\nexport const SUGGESTED_BASES: ChainTokenList = {\n  [ChainId.MAINNET]: [\n    mainnetTokens.wmatic,\n    mainnetTokens.lazermoon,\n    mainnetTokens.usdc,\n    mainnetTokens.matic,\n    mainnetTokens.cake,\n  ],\n  [ChainId.TESTNET]: [testnetTokens.wmatic, testnetTokens.cake],\n}\n\n// used to construct the list of all pairs we consider by default in the frontend\nexport const BASES_TO_TRACK_LIQUIDITY_FOR: ChainTokenList = {\n  [ChainId.MAINNET]: [\n    mainnetTokens.wmatic,\n    mainnetTokens.usdc,\n    mainnetTokens.cake,\n    mainnetTokens.wmatic,\n    mainnetTokens.quick,\n    mainnetTokens.lazermoon,\n    mainnetTokens.shib,\n    mainnetTokens.kom,\n    mainnetTokens.banana,\n    mainnetTokens.aave,\n    mainnetTokens.usdt,\n  ],\n  [ChainId.TESTNET]: [testnetTokens.wmatic, testnetTokens.cake],\n}\n\nexport const PINNED_PAIRS: { readonly [chainId in ChainId]?: [Token, Token][] } = {\n  [ChainId.MAINNET]: [[mainnetTokens.cake, mainnetTokens.wmatic]],\n}\n\nexport const NetworkContextName = 'NETWORK'\n\n// default allowed slippage, in bips\nexport const INITIAL_ALLOWED_SLIPPAGE = 50\n// 20 minutes, denominated in seconds\nexport const DEFAULT_DEADLINE_FROM_NOW = 60 * 20\n\nexport const BIG_INT_ZERO = JSBI.BigInt(0)\n\n// one basis point\nexport const ONE_BIPS = new Percent(JSBI.BigInt(1), JSBI.BigInt(10000))\nexport const BIPS_BASE = JSBI.BigInt(10000)\n// used for warning states\nexport const ALLOWED_PRICE_IMPACT_LOW: Percent = new Percent(JSBI.BigInt(100), BIPS_BASE) // 1%\nexport const ALLOWED_PRICE_IMPACT_MEDIUM: Percent = new Percent(JSBI.BigInt(300), BIPS_BASE) // 3%\nexport const ALLOWED_PRICE_IMPACT_HIGH: Percent = new Percent(JSBI.BigInt(500), BIPS_BASE) // 5%\n// if the price slippage exceeds this number, force the user to type 'confirm' to execute\nexport const PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN: Percent = new Percent(JSBI.BigInt(1000), BIPS_BASE) // 10%\n// for non expert mode disable swaps above this\nexport const BLOCKED_PRICE_IMPACT_NON_EXPERT: Percent = new Percent(JSBI.BigInt(1500), BIPS_BASE) // 15%\n\n// used to ensure the user doesn't send so much BNB so they end up with <.01\nexport const MIN_BNB: JSBI = JSBI.exponentiate(JSBI.BigInt(10), JSBI.BigInt(16)) // .01 BNB\nexport const BETTER_TRADE_LESS_HOPS_THRESHOLD = new Percent(JSBI.BigInt(50), JSBI.BigInt(10000))\n\nexport const ZERO_PERCENT = new Percent('0')\nexport const ONE_HUNDRED_PERCENT = new Percent('1')\n\n// SDN OFAC addresses\nexport const BLOCKED_ADDRESSES: string[] = [\n  // '0x7F367cC41522cE07553e823bf3be79A889DEbe1B',\n  // '0xd882cFc20F52f2599D84b8e8D58C7FB62cfE344b',\n  // '0x901bb9583b24D97e995513C6778dc6888AB6870e',\n  // '0xA7e5d5A720f06526557c513402f2e6B5fA20b008',\n  // '0x8576aCC5C05D6Ce88f4e49bf65BdF0C62F91353C',\n]\n\nexport { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n\nexport const ZOLA_LP_SYMBOL = 'ZolaSwap-LP'\nexport const ZOLA_LP_DECIMALS = 18\n","import { Contract } from '@ethersproject/contracts'\nimport { getAddress } from '@ethersproject/address'\nimport { AddressZero } from '@ethersproject/constants'\nimport { JsonRpcSigner, Web3Provider } from '@ethersproject/providers'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { abi as IUniswapV2Router02ABI } from '@uniswap/v2-periphery/build/IUniswapV2Router02.json'\nimport { ChainId, JSBI, Percent, Token, CurrencyAmount, Currency, ETHER } from '@wagyu-swap/sdk'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport { BASE_VELAS_SCAN_URLS } from '../config'\nimport { TokenAddressMap } from '../state/lists/hooks'\n\n// returns the checksummed address if the address is valid, otherwise returns false\nexport function isAddress(value: any): string | false {\n  try {\n    return getAddress(value)\n  } catch {\n    return false\n  }\n}\n\nexport function getVelasScanLink(\n  data: string | number,\n  type: 'transaction' | 'token' | 'address' | 'block' | 'countdown',\n  chainId: ChainId = ChainId.MAINNET,\n): string {\n  switch (type) {\n    case 'transaction': {\n      return `${BASE_VELAS_SCAN_URLS[chainId]}/tx/${data}`\n    }\n    case 'token': {\n      return `${BASE_VELAS_SCAN_URLS[chainId]}/token/${data}`\n    }\n    case 'block': {\n      return `${BASE_VELAS_SCAN_URLS[chainId]}/block/${data}`\n    }\n    case 'countdown': {\n      return `${BASE_VELAS_SCAN_URLS[chainId]}/block/countdown/${data}`\n    }\n    default: {\n      return `${BASE_VELAS_SCAN_URLS[chainId]}/address/${data}`\n    }\n  }\n}\n\n// add 10%\nexport function calculateGasMargin(value: BigNumber): BigNumber {\n  return value.mul(BigNumber.from(10000).add(BigNumber.from(1000))).div(BigNumber.from(10000))\n}\n\n// converts a basis points value to a sdk percent\nexport function basisPointsToPercent(num: number): Percent {\n  return new Percent(JSBI.BigInt(num), JSBI.BigInt(10000))\n}\n\nexport function calculateSlippageAmount(value: CurrencyAmount, slippage: number): [JSBI, JSBI] {\n  if (slippage < 0 || slippage > 10000) {\n    throw Error(`Unexpected slippage value: ${slippage}`)\n  }\n  return [\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 - slippage)), JSBI.BigInt(10000)),\n    JSBI.divide(JSBI.multiply(value.raw, JSBI.BigInt(10000 + slippage)), JSBI.BigInt(10000)),\n  ]\n}\n\n// account is not optional\nexport function getSigner(library: Web3Provider, account: string): JsonRpcSigner {\n  return library.getSigner(account).connectUnchecked()\n}\n\n// account is optional\nexport function getProviderOrSigner(library: Web3Provider, account?: string): Web3Provider | JsonRpcSigner {\n  return account ? getSigner(library, account) : library\n}\n\n// account is optional\nexport function getContract(address: string, ABI: any, library: Web3Provider, account?: string): Contract {\n  if (!isAddress(address) || address === AddressZero) {\n    throw Error(`Invalid 'address' parameter '${address}'.`)\n  }\n\n  return new Contract(address, ABI, getProviderOrSigner(library, account) as any)\n}\n\n// account is optional\nexport function getRouterContract(_: number, library: Web3Provider, account?: string): Contract {\n  return getContract(ROUTER_ADDRESS, IUniswapV2Router02ABI, library, account)\n}\n\nexport function escapeRegExp(string: string): string {\n  return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n}\n\nexport function isTokenOnList(defaultTokens: TokenAddressMap, currency?: Currency): boolean {\n  if (currency === ETHER) return true\n  return Boolean(currency instanceof Token && defaultTokens[currency.chainId]?.[currency.address])\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { SerializedToken } from 'config/constants/types'\n\nexport interface SerializedPair {\n  token0: SerializedToken\n  token1: SerializedToken\n}\n\nexport enum FarmStakedOnly {\n  ON_FINISHED = 'onFinished',\n  TRUE = 'true',\n  FALSE = 'false',\n}\n\nexport enum ViewMode {\n  TABLE = 'TABLE',\n  CARD = 'CARD',\n}\n\nexport const updateUserExpertMode = createAction<{ userExpertMode: boolean }>('user/updateUserExpertMode')\nexport const updateUserSingleHopOnly = createAction<{ userSingleHopOnly: boolean }>('user/updateUserSingleHopOnly')\nexport const updateUserSlippageTolerance = createAction<{ userSlippageTolerance: number }>(\n  'user/updateUserSlippageTolerance',\n)\nexport const updateUserDeadline = createAction<{ userDeadline: number }>('user/updateUserDeadline')\nexport const addSerializedToken = createAction<{ serializedToken: SerializedToken }>('user/addSerializedToken')\nexport const removeSerializedToken = createAction<{ chainId: number; address: string }>('user/removeSerializedToken')\nexport const addSerializedPair = createAction<{ serializedPair: SerializedPair }>('user/addSerializedPair')\nexport const removeSerializedPair =\n  createAction<{ chainId: number; tokenAAddress: string; tokenBAddress: string }>('user/removeSerializedPair')\n\nexport const muteAudio = createAction<void>('user/muteAudio')\nexport const unmuteAudio = createAction<void>('user/unmuteAudio')\nexport const toggleTheme = createAction<void>('user/toggleTheme')\nexport const updateUserFarmStakedOnly = createAction<{ userFarmStakedOnly: FarmStakedOnly }>(\n  'user/updateUserFarmStakedOnly',\n)\nexport const updateUserPoolStakedOnly = createAction<{ userPoolStakedOnly: boolean }>('user/updateUserPoolStakedOnly')\nexport const updateUserPoolsViewMode = createAction<{ userPoolsViewMode: ViewMode }>('user/updateUserPoolsViewMode')\nexport const updateUserFarmsViewMode = createAction<{ userFarmsViewMode: ViewMode }>('user/updateUserFarmsViewMode')\nexport const updateUserPredictionAcceptedRisk = createAction<{ userAcceptedRisk: boolean }>(\n  'user/updateUserPredictionAcceptedRisk',\n)\nexport const updateUserPredictionChartDisclaimerShow = createAction<{ userShowDisclaimer: boolean }>(\n  'user/updateUserPredictionChartDisclaimerShow',\n)\nexport const updateUserExpertModeAcknowledgementShow = createAction<{ userExpertModeAcknowledgementShow: boolean }>(\n  'user/updateUserExpertModeAcknowledgementShow',\n)\nexport const updateUserUsernameVisibility = createAction<{ userUsernameVisibility: boolean }>(\n  'user/updateUserUsernameVisibility',\n)\nexport const updateGasPrice = createAction<{ gasPrice: string }>('user/updateGasPrice')\n\nexport const addWatchlistToken = createAction<{ address: string }>('user/addWatchlistToken')\nexport const addWatchlistPool = createAction<{ address: string }>('user/addWatchlistPool')\n","import { ethers } from 'ethers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\nimport tokens from 'config/constants/tokens'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getLotteryV2Address,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n  getMulticallAddress,\n  getBunnySpecialCakeVaultAddress,\n  getBunnySpecialPredictionAddress,\n  getBunnySpecialLotteryAddress,\n  getFarmAuctionAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport masterChef from 'config/abi/ZOLAFarm.json'\nimport sousChef from 'config/abi/ZOLAStakingPool.json'\nimport sousChefV2 from 'config/abi/ZOLAStakingPoolInitializable.json'\nimport sousChefBnb from 'config/abi/VLXStaking.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/WagyuVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport bunnySpecialCakeVaultAbi from 'config/abi/bunnySpecialCakeVault.json'\nimport bunnySpecialPredictionAbi from 'config/abi/bunnySpecialPrediction.json'\nimport bunnySpecialLotteryAbi from 'config/abi/bunnySpecialLottery.json'\nimport farmAuctionAbi from 'config/abi/farmAuction.json'\nimport { ChainLinkOracleContract, FarmAuctionContract, PancakeProfileContract, PredictionsContract } from './types'\n\nconst getContract = (abi: any, address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const signerOrProvider = signer ?? simpleRpcProvider\n  return new ethers.Contract(address, abi, signerOrProvider)\n}\n\nexport const getBep20Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bep20Abi, address, signer)\n}\nexport const getErc721Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(erc721Abi, address, signer)\n}\nexport const getLpContract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lpTokenAbi, address, signer)\n}\nexport const getIfoV1Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV1Abi, address, signer)\n}\nexport const getIfoV2Contract = (address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(ifoV2Abi, address, signer)\n}\nexport const getSouschefContract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), signer)\n}\nexport const getSouschefV2Contract = (id: number, signer?: ethers.Signer | ethers.providers.Provider) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), signer)\n}\nexport const getPointCenterIfoContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), signer)\n}\nexport const getCakeContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeAbi, tokens.cake.address, signer)\n}\nexport const getProfileContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(profileABI, getPancakeProfileAddress(), signer) as PancakeProfileContract\n}\nexport const getPancakeRabbitContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), signer)\n}\nexport const getBunnyFactoryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), signer)\n}\nexport const getBunnySpecialContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), signer)\n}\nexport const getLotteryV2Contract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(lotteryV2Abi, getLotteryV2Address(), signer)\n}\nexport const getMasterchefContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(masterChef, getMasterChefAddress(), signer)\n}\nexport const getClaimRefundContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), signer)\n}\nexport const getTradingCompetitionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), signer)\n}\nexport const getEasterNftContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), signer)\n}\nexport const getCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), signer)\n}\n\nexport const getPredictionsContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), signer) as PredictionsContract\n}\n\nexport const getChainlinkOracleContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), signer) as ChainLinkOracleContract\n}\nexport const getMulticallContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(MultiCallAbi, getMulticallAddress(), signer)\n}\nexport const getBunnySpecialCakeVaultContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialCakeVaultAbi, getBunnySpecialCakeVaultAddress(), signer)\n}\nexport const getBunnySpecialPredictionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialPredictionAbi, getBunnySpecialPredictionAddress(), signer)\n}\nexport const getBunnySpecialLotteryContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(bunnySpecialLotteryAbi, getBunnySpecialLotteryAddress(), signer)\n}\nexport const getFarmAuctionContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\n  return getContract(farmAuctionAbi, getFarmAuctionAddress(), signer) as FarmAuctionContract\n}\n","import { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n  getLotteryV2Contract,\n  getBunnySpecialCakeVaultContract,\n  getBunnySpecialPredictionContract,\n  getFarmAuctionContract,\n  getBunnySpecialLotteryContract,\n} from 'utils/contractHelpers'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\n// Imports below migrated from Exchange useContract.ts\nimport { Contract } from '@ethersproject/contracts'\nimport { ChainId, WETH } from '@wagyu-swap/sdk'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport ENS_PUBLIC_RESOLVER_ABI from '../config/abi/ens-public-resolver.json'\nimport ENS_ABI from '../config/abi/ens-registrar.json'\nimport { ERC20_BYTES32_ABI } from '../config/abi/erc20'\nimport ERC20_ABI from '../config/abi/erc20.json'\nimport WETH_ABI from '../config/abi/weth.json'\nimport multiCallAbi from '../config/abi/Multicall.json'\nimport { getContract } from '../utils'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV1Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getIfoV2Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useERC20 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBep20Contract(address, library.getSigner()), [address, library])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getErc721Contract(address, library.getSigner()), [address, library])\n}\n\nexport const useCake = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeContract(library.getSigner()), [library])\n}\n\nexport const useBunnyFactory = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnyFactoryContract(library.getSigner()), [library])\n}\n\nexport const usePancakeRabbits = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPancakeRabbitContract(library.getSigner()), [library])\n}\n\nexport const useProfile = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getProfileContract(library.getSigner()), [library])\n}\n\nexport const useLotteryV2Contract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getLotteryV2Contract(library.getSigner()), [library])\n}\n\nexport const useMasterchef = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getMasterchefContract(library.getSigner()), [library])\n}\n\nexport const useSousChef = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefContract(id, library.getSigner()), [id, library])\n}\n\nexport const useSousChefV2 = (id) => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getSouschefV2Contract(id, library.getSigner()), [id, library])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPointCenterIfoContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialContract(library.getSigner()), [library])\n}\n\nexport const useClaimRefundContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getClaimRefundContract(library.getSigner()), [library])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getTradingCompetitionContract(library.getSigner()), [library])\n}\n\nexport const useEasterNftContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getEasterNftContract(library.getSigner()), [library])\n}\n\nexport const useCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const usePredictionsContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getPredictionsContract(library.getSigner()), [library])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getChainlinkOracleContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyCakeVaultContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialCakeVaultContract(library.getSigner()), [library])\n}\n\nexport const useSpecialBunnyPredictionContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialPredictionContract(library.getSigner()), [library])\n}\n\nexport const useBunnySpecialLotteryContract = () => {\n  const { library } = useActiveWeb3React()\n  return useMemo(() => getBunnySpecialLotteryContract(library.getSigner()), [library])\n}\n\nexport const useFarmAuctionContract = () => {\n  const { account, library } = useActiveWeb3React()\n  // This hook is slightly different from others\n  // Calls were failing if unconnected user goes to farm auction page\n  // Using library instead of library.getSigner() fixes the problem for unconnected users\n  // However, this fix is not ideal, it currently has following behavior:\n  // - If you visit Farm Auction page coming from some other page there are no errors in console (unconnected or connected)\n  // - If you go directly to Farm Auction page\n  //   - as unconnected user you don't see any console errors\n  //   - as connected user you see `unknown account #0 (operation=\"getAddress\", code=UNSUPPORTED_OPERATION, ...` errors\n  //     the functionality of the page is not affected, data is loading fine and you can interact with the contract\n  //\n  // Similar behavior was also noticed on Trading Competition page.\n  return useMemo(() => getFarmAuctionContract(account ? library.getSigner() : library), [library, account])\n}\n\n// Code below migrated from Exchange useContract.ts\n\n// returns null on errors\nfunction useContract(address: string | undefined, ABI: any, withSignerIfPossible = true): Contract | null {\n  const { library, account } = useActiveWeb3React()\n\n  return useMemo(() => {\n    if (!address || !ABI || !library) return null\n    try {\n      return getContract(address, ABI, library, withSignerIfPossible && account ? account : undefined)\n    } catch (error) {\n      console.error('Failed to get contract', error)\n      return null\n    }\n  }, [address, ABI, library, withSignerIfPossible, account])\n}\n\nexport function useTokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_ABI, withSignerIfPossible)\n}\n\nexport function useWETHContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  return useContract(chainId ? WETH[chainId].address : undefined, WETH_ABI, withSignerIfPossible)\n}\n\nexport function useENSRegistrarContract(withSignerIfPossible?: boolean): Contract | null {\n  const { chainId } = useActiveWeb3React()\n  let address: string | undefined\n  if (chainId) {\n    // eslint-disable-next-line default-case\n    switch (chainId) {\n      case ChainId.MAINNET:\n      case ChainId.TESTNET:\n        address = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n        break\n    }\n  }\n  return useContract(address, ENS_ABI, withSignerIfPossible)\n}\n\nexport function useENSResolverContract(address: string | undefined, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(address, ENS_PUBLIC_RESOLVER_ABI, withSignerIfPossible)\n}\n\nexport function useBytes32TokenContract(tokenAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(tokenAddress, ERC20_BYTES32_ABI, withSignerIfPossible)\n}\n\nexport function usePairContract(pairAddress?: string, withSignerIfPossible?: boolean): Contract | null {\n  return useContract(pairAddress, IUniswapV2PairABI, withSignerIfPossible)\n}\n\nexport function useMulticallContract(): Contract | null {\n  return useContract(getMulticallAddress(), multiCallAbi, false)\n}\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from 'packages/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      <CountUp\n        start={previousValue.current}\n        end={value}\n        prefix={prefix}\n        suffix={unit}\n        decimals={decimals}\n        duration={1}\n        separator=\",\"\n      />\n    </Text>\n  )\n}\n\nexport default Balance\n","import { ChainId, Pair, Token } from '@wagyu-swap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BASES_TO_TRACK_LIQUIDITY_FOR, PINNED_PAIRS } from 'config/constants'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { AppDispatch, AppState } from '../../index'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  FarmStakedOnly,\n  muteAudio,\n  removeSerializedToken,\n  SerializedPair,\n  toggleTheme as toggleThemeAction,\n  unmuteAudio,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n  updateGasPrice,\n  addWatchlistToken,\n  addWatchlistPool,\n  updateUserPoolStakedOnly,\n  updateUserPoolsViewMode,\n  ViewMode,\n  updateUserFarmsViewMode,\n  updateUserPredictionChartDisclaimerShow,\n  updateUserPredictionAcceptedRisk,\n  updateUserUsernameVisibility,\n  updateUserExpertModeAcknowledgementShow,\n} from '../actions'\nimport { deserializeToken, GAS_PRICE_GWEI, serializeToken } from './helpers'\n\nexport function useAudioModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const audioPlay = useSelector<AppState, AppState['user']['audioPlay']>((state) => state.user.audioPlay)\n\n  const toggleSetAudioMode = useCallback(() => {\n    if (audioPlay) {\n      dispatch(muteAudio())\n    } else {\n      dispatch(unmuteAudio())\n    }\n  }, [audioPlay, dispatch])\n\n  return [audioPlay, toggleSetAudioMode]\n}\n\nexport function useIsExpertMode(): boolean {\n  return useSelector<AppState, AppState['user']['userExpertMode']>((state) => state.user.userExpertMode)\n}\n\nexport function useExpertModeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const expertMode = useIsExpertMode()\n\n  const toggleSetExpertMode = useCallback(() => {\n    dispatch(updateUserExpertMode({ userExpertMode: !expertMode }))\n  }, [expertMode, dispatch])\n\n  return [expertMode, toggleSetExpertMode]\n}\n\nexport function useThemeManager(): [boolean, () => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const isDark = useSelector<AppState, AppState['user']['isDark']>((state) => state.user.isDark)\n\n  const toggleTheme = useCallback(() => {\n    dispatch(toggleThemeAction())\n  }, [dispatch])\n\n  return [isDark, toggleTheme]\n}\n\nexport function useUserSingleHopOnly(): [boolean, (newSingleHopOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const singleHopOnly = useSelector<AppState, AppState['user']['userSingleHopOnly']>(\n    (state) => state.user.userSingleHopOnly,\n  )\n\n  const setSingleHopOnly = useCallback(\n    (newSingleHopOnly: boolean) => {\n      dispatch(updateUserSingleHopOnly({ userSingleHopOnly: newSingleHopOnly }))\n    },\n    [dispatch],\n  )\n\n  return [singleHopOnly, setSingleHopOnly]\n}\n\nexport function useUserSlippageTolerance(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userSlippageTolerance = useSelector<AppState, AppState['user']['userSlippageTolerance']>((state) => {\n    return state.user.userSlippageTolerance\n  })\n\n  const setUserSlippageTolerance = useCallback(\n    (slippage: number) => {\n      dispatch(updateUserSlippageTolerance({ userSlippageTolerance: slippage }))\n    },\n    [dispatch],\n  )\n\n  return [userSlippageTolerance, setUserSlippageTolerance]\n}\n\nexport function useUserFarmStakedOnly(isActive: boolean): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmStakedOnly = useSelector<AppState, AppState['user']['userFarmStakedOnly']>((state) => {\n    return state.user.userFarmStakedOnly\n  })\n\n  const setUserFarmStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      const farmStakedOnly = stakedOnly ? FarmStakedOnly.TRUE : FarmStakedOnly.FALSE\n      dispatch(updateUserFarmStakedOnly({ userFarmStakedOnly: farmStakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [\n    userFarmStakedOnly === FarmStakedOnly.ON_FINISHED ? !isActive : userFarmStakedOnly === FarmStakedOnly.TRUE,\n    setUserFarmStakedOnly,\n  ]\n}\n\nexport function useUserPoolStakedOnly(): [boolean, (stakedOnly: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPoolStakedOnly = useSelector<AppState, AppState['user']['userPoolStakedOnly']>((state) => {\n    return state.user.userPoolStakedOnly\n  })\n\n  const setUserPoolStakedOnly = useCallback(\n    (stakedOnly: boolean) => {\n      dispatch(updateUserPoolStakedOnly({ userPoolStakedOnly: stakedOnly }))\n    },\n    [dispatch],\n  )\n\n  return [userPoolStakedOnly, setUserPoolStakedOnly]\n}\n\nexport function useUserPoolsViewMode(): [ViewMode, (viewMode: ViewMode) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPoolsViewMode = useSelector<AppState, AppState['user']['userPoolsViewMode']>((state) => {\n    return state.user.userPoolsViewMode\n  })\n\n  const setUserPoolsViewMode = useCallback(\n    (viewMode: ViewMode) => {\n      dispatch(updateUserPoolsViewMode({ userPoolsViewMode: viewMode }))\n    },\n    [dispatch],\n  )\n\n  return [userPoolsViewMode, setUserPoolsViewMode]\n}\n\nexport function useUserFarmsViewMode(): [ViewMode, (viewMode: ViewMode) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userFarmsViewMode = useSelector<AppState, AppState['user']['userFarmsViewMode']>((state) => {\n    return state.user.userFarmsViewMode\n  })\n\n  const setUserFarmsViewMode = useCallback(\n    (viewMode: ViewMode) => {\n      dispatch(updateUserFarmsViewMode({ userFarmsViewMode: viewMode }))\n    },\n    [dispatch],\n  )\n\n  return [userFarmsViewMode, setUserFarmsViewMode]\n}\n\nexport function useUserPredictionAcceptedRisk(): [boolean, (acceptedRisk: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPredictionAcceptedRisk = useSelector<AppState, AppState['user']['userPredictionAcceptedRisk']>((state) => {\n    return state.user.userPredictionAcceptedRisk\n  })\n\n  const setUserPredictionAcceptedRisk = useCallback(\n    (acceptedRisk: boolean) => {\n      dispatch(updateUserPredictionAcceptedRisk({ userAcceptedRisk: acceptedRisk }))\n    },\n    [dispatch],\n  )\n\n  return [userPredictionAcceptedRisk, setUserPredictionAcceptedRisk]\n}\n\nexport function useUserPredictionChartDisclaimerShow(): [boolean, (showDisclaimer: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userPredictionChartDisclaimerShow = useSelector<\n    AppState,\n    AppState['user']['userPredictionChartDisclaimerShow']\n  >((state) => {\n    return state.user.userPredictionChartDisclaimerShow\n  })\n\n  const setPredictionUserChartDisclaimerShow = useCallback(\n    (showDisclaimer: boolean) => {\n      dispatch(updateUserPredictionChartDisclaimerShow({ userShowDisclaimer: showDisclaimer }))\n    },\n    [dispatch],\n  )\n\n  return [userPredictionChartDisclaimerShow, setPredictionUserChartDisclaimerShow]\n}\n\nexport function useUserExpertModeAcknowledgementShow(): [boolean, (showAcknowledgement: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userExpertModeAcknowledgementShow = useSelector<\n    AppState,\n    AppState['user']['userExpertModeAcknowledgementShow']\n  >((state) => {\n    return state.user.userExpertModeAcknowledgementShow\n  })\n\n  const setUserExpertModeAcknowledgementShow = useCallback(\n    (showAcknowledgement: boolean) => {\n      dispatch(updateUserExpertModeAcknowledgementShow({ userExpertModeAcknowledgementShow: showAcknowledgement }))\n    },\n    [dispatch],\n  )\n\n  return [userExpertModeAcknowledgementShow, setUserExpertModeAcknowledgementShow]\n}\n\nexport function useUserUsernameVisibility(): [boolean, (usernameVisibility: boolean) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userUsernameVisibility = useSelector<AppState, AppState['user']['userUsernameVisibility']>((state) => {\n    return state.user.userUsernameVisibility\n  })\n\n  const setUserUsernameVisibility = useCallback(\n    (usernameVisibility: boolean) => {\n      dispatch(updateUserUsernameVisibility({ userUsernameVisibility: usernameVisibility }))\n    },\n    [dispatch],\n  )\n\n  return [userUsernameVisibility, setUserUsernameVisibility]\n}\n\nexport function useUserTransactionTTL(): [number, (slippage: number) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userDeadline = useSelector<AppState, AppState['user']['userDeadline']>((state) => {\n    return state.user.userDeadline\n  })\n\n  const setUserDeadline = useCallback(\n    (deadline: number) => {\n      dispatch(updateUserDeadline({ userDeadline: deadline }))\n    },\n    [dispatch],\n  )\n\n  return [userDeadline, setUserDeadline]\n}\n\nexport function useAddUserToken(): (token: Token) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (token: Token) => {\n      dispatch(addSerializedToken({ serializedToken: serializeToken(token) }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useRemoveUserAddedToken(): (chainId: number, address: string) => void {\n  const dispatch = useDispatch<AppDispatch>()\n  return useCallback(\n    (chainId: number, address: string) => {\n      dispatch(removeSerializedToken({ chainId, address }))\n    },\n    [dispatch],\n  )\n}\n\nexport function useGasPrice(): string {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const userGas = useSelector<AppState, AppState['user']['gasPrice']>((state) => state.user.gasPrice)\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\n}\n\nexport function useGasPriceManager(): [string, (userGasPrice: string) => void] {\n  const dispatch = useDispatch<AppDispatch>()\n  const userGasPrice = useGasPrice()\n\n  const setGasPrice = useCallback(\n    (gasPrice: string) => {\n      dispatch(updateGasPrice({ gasPrice }))\n    },\n    [dispatch],\n  )\n\n  return [userGasPrice, setGasPrice]\n}\n\nfunction serializePair(pair: Pair): SerializedPair {\n  return {\n    token0: serializeToken(pair.token0),\n    token1: serializeToken(pair.token1),\n  }\n}\n\nexport function usePairAdder(): (pair: Pair) => void {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (pair: Pair) => {\n      dispatch(addSerializedPair({ serializedPair: serializePair(pair) }))\n    },\n    [dispatch],\n  )\n}\n\n/**\n * Given two tokens return the liquidity token that represents its liquidity shares\n * @param tokenA one of the two tokens\n * @param tokenB the other token\n */\nexport function toV2LiquidityToken([tokenA, tokenB]: [Token, Token]): Token {\n  return new Token(tokenA.chainId, Pair.getAddress(tokenA, tokenB), 18, 'Wag-LP', 'Wagyuswap LPs')\n}\n\n/**\n * Returns all the pairs of tokens that are tracked by the user for the current chain ID.\n */\nexport function useTrackedTokenPairs(): [Token, Token][] {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  // pinned pairs\n  const pinnedPairs = useMemo(() => (chainId ? PINNED_PAIRS[chainId] ?? [] : []), [chainId])\n\n  // pairs for every token against every base\n  const generatedPairs: [Token, Token][] = useMemo(\n    () =>\n      chainId\n        ? flatMap(Object.keys(tokens), (tokenAddress) => {\n            const token = tokens[tokenAddress]\n            // for each token on the current chain,\n            return (\n              // loop though all bases on the current chain\n              (BASES_TO_TRACK_LIQUIDITY_FOR[chainId] ?? [])\n                // to construct pairs of the given token with each base\n                .map((base) => {\n                  if (base.address === token.address) {\n                    return null\n                  }\n                  return [base, token]\n                })\n                .filter((p): p is [Token, Token] => p !== null)\n            )\n          })\n        : [],\n    [tokens, chainId],\n  )\n\n  // pairs saved by users\n  const savedSerializedPairs = useSelector<AppState, AppState['user']['pairs']>(({ user: { pairs } }) => pairs)\n\n  const userPairs: [Token, Token][] = useMemo(() => {\n    if (!chainId || !savedSerializedPairs) return []\n    const forChain = savedSerializedPairs[chainId]\n    if (!forChain) return []\n\n    return Object.keys(forChain).map((pairId) => {\n      return [deserializeToken(forChain[pairId].token0), deserializeToken(forChain[pairId].token1)]\n    })\n  }, [savedSerializedPairs, chainId])\n\n  const combinedList = useMemo(\n    () => userPairs.concat(generatedPairs).concat(pinnedPairs),\n    [generatedPairs, pinnedPairs, userPairs],\n  )\n\n  return useMemo(() => {\n    // dedupes pairs of tokens in the combined list\n    const keyed = combinedList.reduce<{ [key: string]: [Token, Token] }>((memo, [tokenA, tokenB]) => {\n      const sorted = tokenA.sortsBefore(tokenB)\n      const key = sorted ? `${tokenA.address}:${tokenB.address}` : `${tokenB.address}:${tokenA.address}`\n      if (memo[key]) return memo\n      memo[key] = sorted ? [tokenA, tokenB] : [tokenB, tokenA]\n      return memo\n    }, {})\n\n    return Object.keys(keyed).map((key) => keyed[key])\n  }, [combinedList])\n}\n\nexport const useWatchlistTokens = (): [string[], (address: string) => void] => {\n  const dispatch = useDispatch<AppDispatch>()\n  const savedTokens = useSelector((state: AppState) => state.user.watchlistTokens) ?? []\n  const updatedSavedTokens = useCallback(\n    (address: string) => {\n      dispatch(addWatchlistToken({ address }))\n    },\n    [dispatch],\n  )\n  return [savedTokens, updatedSavedTokens]\n}\n\nexport const useWatchlistPools = (): [string[], (address: string) => void] => {\n  const dispatch = useDispatch<AppDispatch>()\n  const savedPools = useSelector((state: AppState) => state.user.watchlistPools) ?? []\n  const updateSavedPools = useCallback(\n    (address: string) => {\n      dispatch(addWatchlistPool({ address }))\n    },\n    [dispatch],\n  )\n  return [savedPools, updateSavedPools]\n}\n","import BigNumber from 'bignumber.js'\nimport { Token } from '@wagyu-swap/sdk'\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\nexport interface Address {\n  80001?: string\n  137: string\n}\n\nexport interface SerializedToken {\n  chainId: number\n  address: string\n  decimals: number\n  symbol?: string\n  name?: string\n  projectLink?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\ninterface FarmConfigBaseProps {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface SerializedFarmConfig extends FarmConfigBaseProps {\n  token: SerializedToken\n  quoteToken: SerializedToken\n}\n\nexport interface DeserializedFarmConfig extends FarmConfigBaseProps {\n  token: Token\n  quoteToken: Token\n}\n\ninterface PoolConfigBaseProps {\n  sousId: number\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport interface SerializedPoolConfig extends PoolConfigBaseProps {\n  earningToken: SerializedToken\n  stakingToken: SerializedToken\n}\n\nexport interface DeserializedPoolConfig extends PoolConfigBaseProps {\n  earningToken: Token\n  stakingToken: Token\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle' | 'participation'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n\nexport enum LotteryStatus {\n  PENDING = 'pending',\n  OPEN = 'open',\n  CLOSE = 'close',\n  CLAIMABLE = 'claimable',\n}\n\nexport interface LotteryTicket {\n  id: string\n  number: string\n  status: boolean\n  rewardBracket?: number\n  roundId?: string\n  cakeReward?: string\n}\n\nexport interface LotteryTicketClaimData {\n  ticketsWithUnclaimedRewards: LotteryTicket[]\n  allWinningTickets: LotteryTicket[]\n  cakeTotal: BigNumber\n  roundId: string\n}\n\n// Farm Auction\nexport interface FarmAuctionBidderConfig {\n  account: string\n  farmName: string\n  tokenAddress: string\n  quoteToken: Token\n  tokenName: string\n  projectSite?: string\n  lpAddress?: string\n}\n\n// Note: this status is slightly different compared to 'status' comfing\n// from Farm Auction smart contract\nexport enum AuctionStatus {\n  ToBeAnnounced, // No specific dates/blocks to display\n  Pending, // Auction is scheduled but not live yet (i.e. waiting for startBlock)\n  Open, // Auction is open for bids\n  Finished, // Auction end block is reached, bidding is not possible\n  Closed, // Auction was closed in smart contract\n}\n\nexport interface Auction {\n  id: number\n  status: AuctionStatus\n  startBlock: number\n  startDate: Date\n  endBlock: number\n  endDate: Date\n  auctionDuration: number\n  initialBidAmount: number\n  topLeaderboard: number\n  leaderboardThreshold: BigNumber\n}\n\nexport interface BidderAuction {\n  id: number\n  amount: BigNumber\n  claimed: boolean\n}\n\nexport interface Bidder extends FarmAuctionBidderConfig {\n  position?: number\n  isTopPosition: boolean\n  samePositionAsAbove: boolean\n  amount: BigNumber\n}\n\nexport interface ConnectedBidder {\n  account: string\n  isWhitelisted: boolean\n  bidderData?: Bidder\n}\n","import { ethers } from 'ethers'\nimport { getMulticallContract } from 'utils/contractHelpers'\nimport { MultiCallResponse } from './types'\n\nexport interface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\ninterface MulticallOptions {\n  requireSuccess?: boolean\n}\n\nconst multicall = async <T = any>(abi: any[], calls: Call[]): Promise<T> => {\n  const multi = getMulticallContract()\n  const itf = new ethers.utils.Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  try {\n    const { returnData } = await multi.aggregate(calldata)\n\n    const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n    return res\n  } catch (error) {\n    console.error('multicall error', calls, calldata, error)\n    throw new Error(error)\n  }\n}\n\n/**\n * Multicall V2 uses the new \"tryAggregate\" function. It is different in 2 ways\n *\n * 1. If \"requireSuccess\" is false multicall will not bail out if one of the calls fails\n * 2. The return includes a boolean whether the call was successful e.g. [wasSuccessful, callResult]\n */\nexport const multicallv2 = async <T = any>(\n  abi: any[],\n  calls: Call[],\n  options: MulticallOptions = { requireSuccess: true },\n): Promise<MultiCallResponse<T>> => {\n  const { requireSuccess } = options\n  const multi = getMulticallContract()\n  const itf = new ethers.utils.Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const returnData = await multi.tryAggregate(requireSuccess, calldata)\n  const res = returnData.map((call, i) => {\n    const [result, data] = call\n    return result ? itf.decodeFunctionResult(calls[i].name, data) : null\n  })\n\n  return res\n}\n\nexport default multicall\n","import { ChainId, Currency, CurrencyAmount, ETHER, Token, TokenAmount, WETH } from '@wagyu-swap/sdk'\n\nexport function wrappedCurrency(currency: Currency | undefined, chainId: ChainId | undefined): Token | undefined {\n  return chainId && currency === ETHER ? WETH[chainId] : currency instanceof Token ? currency : undefined\n}\n\nexport function wrappedCurrencyAmount(\n  currencyAmount: CurrencyAmount | undefined,\n  chainId: ChainId | undefined,\n): TokenAmount | undefined {\n  const token = currencyAmount && chainId ? wrappedCurrency(currencyAmount.currency, chainId) : undefined\n  return token && currencyAmount ? new TokenAmount(token, currencyAmount.raw) : undefined\n}\n\nexport function unwrappedToken(token: Token): Currency {\n  if (token.equals(WETH[token.chainId])) return ETHER\n  return token\n}\n","import BigNumber from 'bignumber.js'\nimport { DeserializedPool } from 'state/types'\nimport { getApy } from 'utils/compoundApyHelpers'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n\nconst AUTO_VAULT_COMPOUND_FREQUENCY = 5000\nconst MANUAL_POOL_AUTO_COMPOUND_FREQUENCY = 0\n\nexport const getAprData = (pool: DeserializedPool, performanceFee: number) => {\n  const { isAutoVault, apr } = pool\n\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const autoCompoundFrequency = isAutoVault ? AUTO_VAULT_COMPOUND_FREQUENCY : MANUAL_POOL_AUTO_COMPOUND_FREQUENCY\n\n  if (isAutoVault) {\n    const autoApr = getApy(apr, AUTO_VAULT_COMPOUND_FREQUENCY, 365, performanceFee) * 100\n    return { apr: autoApr, autoCompoundFrequency }\n  }\n  return { apr, autoCompoundFrequency }\n}\n\nexport const getCakeVaultEarnings = (\n  account: string,\n  cakeAtLastUserAction: BigNumber,\n  userShares: BigNumber,\n  pricePerFullShare: BigNumber,\n  earningTokenPrice: number,\n) => {\n  const hasAutoEarnings =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const autoCakeProfit = cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const autoCakeToDisplay = autoCakeProfit.gte(0) ? getBalanceNumber(autoCakeProfit, 18) : 0\n\n  const autoUsdProfit = autoCakeProfit.times(earningTokenPrice)\n  const autoUsdToDisplay = autoUsdProfit.gte(0) ? getBalanceNumber(autoUsdProfit, 18) : 0\n  return { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay }\n}\n\nexport const getPoolBlockInfo = (pool: DeserializedPool, currentBlock: number) => {\n  const { startBlock, endBlock, isFinished } = pool\n  const currentTimeSeconds = Math.floor(Date.now() / 1000)\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentTimeSeconds, 0)\n  const blocksRemaining = Math.max(endBlock - currentTimeSeconds, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n  const blocksToDisplay = hasPoolStarted ? blocksRemaining : blocksUntilStart\n  return { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay }\n}\n","import { Currency } from '@wagyu-swap/sdk'\nimport React from 'react'\nimport styled from 'styled-components'\nimport CurrencyLogo from './CurrencyLogo'\n\nconst Wrapper = styled.div<{ margin: boolean }>`\n  display: flex;\n  flex-direction: row;\n  margin-right: ${({ margin }) => margin && '4px'};\n`\n\ninterface DoubleCurrencyLogoProps {\n  margin?: boolean\n  size?: number\n  currency0?: Currency\n  currency1?: Currency\n}\n\nexport default function DoubleCurrencyLogo({\n  currency0,\n  currency1,\n  size = 20,\n  margin = false,\n}: DoubleCurrencyLogoProps) {\n  return (\n    <Wrapper margin={margin}>\n      {currency0 && <CurrencyLogo currency={currency0} size={`${size.toString()}px`} style={{ marginRight: '4px' }} />}\n      {currency1 && <CurrencyLogo currency={currency1} size={`${size.toString()}px`} />}\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport Logo from './Logo'\n\nconst StyledListLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function ListLogo({\n  logoURI,\n  style,\n  size = '24px',\n  alt,\n}: {\n  logoURI: string\n  size?: string\n  style?: React.CSSProperties\n  alt?: string\n}) {\n  const srcs: string[] = useHttpLocations(logoURI)\n\n  return <StyledListLogo alt={alt} size={size} srcs={srcs} style={style} />\n}\n","/* eslint-disable no-param-reassign */\nimport { parseBytes32String } from '@ethersproject/strings'\nimport { Currency, ETHER, Token, currencyEquals } from '@wagyu-swap/sdk'\nimport { useMemo } from 'react'\nimport { arrayify } from 'ethers/lib/utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport {\n  TokenAddressMap,\n  useDefaultTokenList,\n  useUnsupportedTokenList,\n  useCombinedActiveList,\n  useCombinedInactiveList,\n} from '../state/lists/hooks'\n\nimport { NEVER_RELOAD, useSingleCallResult } from '../state/multicall/hooks'\nimport useUserAddedTokens from '../state/user/hooks/useUserAddedTokens'\nimport { isAddress } from '../utils'\n\nimport { useBytes32TokenContract, useTokenContract } from './useContract'\nimport { filterTokens } from '../components/SearchModal/filtering'\n\n// reduce token map into standard address <-> Token mapping, optionally include user added tokens\nfunction useTokensFromMap(tokenMap: TokenAddressMap, includeUserAdded: boolean): { [address: string]: Token } {\n  const { chainId } = useActiveWeb3React()\n  const userAddedTokens = useUserAddedTokens()\n\n  return useMemo(() => {\n    if (!chainId) return {}\n\n    // reduce to just tokens\n    const mapWithoutUrls = Object.keys(tokenMap[chainId]).reduce<{ [address: string]: Token }>((newMap, address) => {\n      newMap[address] = tokenMap[chainId][address].token\n      return newMap\n    }, {})\n\n    if (includeUserAdded) {\n      return (\n        userAddedTokens\n          // reduce into all ALL_TOKENS filtered by the current chain\n          .reduce<{ [address: string]: Token }>(\n            (tokenMap_, token) => {\n              tokenMap_[token.address] = token\n              return tokenMap_\n            },\n            // must make a copy because reduce modifies the map, and we do not\n            // want to make a copy in every iteration\n            { ...mapWithoutUrls },\n          )\n      )\n    }\n\n    return mapWithoutUrls\n  }, [chainId, userAddedTokens, tokenMap, includeUserAdded])\n}\n\nexport function useDefaultTokens(): { [address: string]: Token } {\n  const defaultList = useDefaultTokenList()\n  return useTokensFromMap(defaultList, false)\n}\n\nexport function useAllTokens(): { [address: string]: Token } {\n  const allTokens = useCombinedActiveList()\n  return useTokensFromMap(allTokens, true)\n}\n\nexport function useAllInactiveTokens(): { [address: string]: Token } {\n  // get inactive tokens\n  const inactiveTokensMap = useCombinedInactiveList()\n  const inactiveTokens = useTokensFromMap(inactiveTokensMap, false)\n\n  // filter out any token that are on active list\n  const activeTokensAddresses = Object.keys(useAllTokens())\n  const filteredInactive = activeTokensAddresses\n    ? Object.keys(inactiveTokens).reduce<{ [address: string]: Token }>((newMap, address) => {\n        if (!activeTokensAddresses.includes(address)) {\n          newMap[address] = inactiveTokens[address]\n        }\n        return newMap\n      }, {})\n    : inactiveTokens\n\n  return filteredInactive\n}\n\nexport function useUnsupportedTokens(): { [address: string]: Token } {\n  const unsupportedTokensMap = useUnsupportedTokenList()\n  return useTokensFromMap(unsupportedTokensMap, false)\n}\n\nexport function useIsTokenActive(token: Token | undefined | null): boolean {\n  const activeTokens = useAllTokens()\n\n  if (!activeTokens || !token) {\n    return false\n  }\n\n  return !!activeTokens[token.address]\n}\n\n// used to detect extra search results\nexport function useFoundOnInactiveList(searchQuery: string): Token[] | undefined {\n  const { chainId } = useActiveWeb3React()\n  const inactiveTokens = useAllInactiveTokens()\n\n  return useMemo(() => {\n    if (!chainId || searchQuery === '') {\n      return undefined\n    }\n    const tokens = filterTokens(Object.values(inactiveTokens), searchQuery)\n    return tokens\n  }, [chainId, inactiveTokens, searchQuery])\n}\n\n// Check if currency is included in custom list from user storage\nexport function useIsUserAddedToken(currency: Currency | undefined | null): boolean {\n  const userAddedTokens = useUserAddedTokens()\n\n  if (!currency) {\n    return false\n  }\n\n  return !!userAddedTokens.find((token) => currencyEquals(currency, token))\n}\n\n// parse a name or symbol from a token response\nconst BYTES32_REGEX = /^0x[a-fA-F0-9]{64}$/\n\nfunction parseStringOrBytes32(str: string | undefined, bytes32: string | undefined, defaultValue: string): string {\n  return str && str.length > 0\n    ? str\n    : // need to check for proper bytes string and valid terminator\n    bytes32 && BYTES32_REGEX.test(bytes32) && arrayify(bytes32)[31] === 0\n    ? parseBytes32String(bytes32)\n    : defaultValue\n}\n\n// undefined if invalid or does not exist\n// null if loading\n// otherwise returns the token\nexport function useToken(tokenAddress?: string): Token | undefined | null {\n  const { chainId } = useActiveWeb3React()\n  const tokens = useAllTokens()\n\n  const address = isAddress(tokenAddress)\n\n  const tokenContract = useTokenContract(address || undefined, false)\n  const tokenContractBytes32 = useBytes32TokenContract(address || undefined, false)\n  const token: Token | undefined = address ? tokens[address] : undefined\n\n  const tokenName = useSingleCallResult(token ? undefined : tokenContract, 'name', undefined, NEVER_RELOAD)\n  const tokenNameBytes32 = useSingleCallResult(\n    token ? undefined : tokenContractBytes32,\n    'name',\n    undefined,\n    NEVER_RELOAD,\n  )\n  const symbol = useSingleCallResult(token ? undefined : tokenContract, 'symbol', undefined, NEVER_RELOAD)\n  const symbolBytes32 = useSingleCallResult(token ? undefined : tokenContractBytes32, 'symbol', undefined, NEVER_RELOAD)\n  const decimals = useSingleCallResult(token ? undefined : tokenContract, 'decimals', undefined, NEVER_RELOAD)\n\n  return useMemo(() => {\n    if (token) return token\n    if (!chainId || !address) return undefined\n    if (decimals.loading || symbol.loading || tokenName.loading) return null\n    if (decimals.result) {\n      return new Token(\n        chainId,\n        address,\n        decimals.result[0],\n        parseStringOrBytes32(symbol.result?.[0], symbolBytes32.result?.[0], 'UNKNOWN'),\n        parseStringOrBytes32(tokenName.result?.[0], tokenNameBytes32.result?.[0], 'Unknown Token'),\n      )\n    }\n    return undefined\n  }, [\n    address,\n    chainId,\n    decimals.loading,\n    decimals.result,\n    symbol.loading,\n    symbol.result,\n    symbolBytes32.result,\n    token,\n    tokenName.loading,\n    tokenName.result,\n    tokenNameBytes32.result,\n  ])\n}\n\nexport function useCurrency(currencyId: string | undefined): Currency | null | undefined {\n  const isBNB = currencyId?.toUpperCase() === 'MATIC'\n  const token = useToken(isBNB ? undefined : currencyId)\n  return isBNB ? ETHER : token\n}\n","import { Interface, FunctionFragment } from '@ethersproject/abi'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useBlock } from 'state/block/hooks'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  addMulticallListeners,\n  Call,\n  removeMulticallListeners,\n  parseCallKey,\n  toCallKey,\n  ListenerOptions,\n} from './actions'\n\nexport interface Result extends ReadonlyArray<any> {\n  readonly [key: string]: any\n}\n\ntype MethodArg = string | number | BigNumber\ntype MethodArgs = Array<MethodArg | MethodArg[]>\n\ntype OptionalMethodInputs = Array<MethodArg | MethodArg[] | undefined> | undefined\n\nfunction isMethodArg(x: unknown): x is MethodArg {\n  return ['string', 'number'].indexOf(typeof x) !== -1\n}\n\nfunction isValidMethodArgs(x: unknown): x is MethodArgs | undefined {\n  return (\n    x === undefined ||\n    (Array.isArray(x) && x.every((xi) => isMethodArg(xi) || (Array.isArray(xi) && xi.every(isMethodArg))))\n  )\n}\n\ninterface CallResult {\n  readonly valid: boolean\n  readonly data: string | undefined\n  readonly blockNumber: number | undefined\n}\n\nconst INVALID_RESULT: CallResult = { valid: false, blockNumber: undefined, data: undefined }\n\n// use this options object\nexport const NEVER_RELOAD: ListenerOptions = {\n  blocksPerFetch: Infinity,\n}\n\n// the lowest level call for subscribing to contract data\nfunction useCallsData(calls: (Call | undefined)[], options?: ListenerOptions): CallResult[] {\n  const { chainId } = useActiveWeb3React()\n  const callResults = useSelector<AppState, AppState['multicall']['callResults']>(\n    (state) => state.multicall.callResults,\n  )\n  const dispatch = useDispatch<AppDispatch>()\n\n  const serializedCallKeys: string = useMemo(\n    () =>\n      JSON.stringify(\n        calls\n          ?.filter((c): c is Call => Boolean(c))\n          ?.map(toCallKey)\n          ?.sort() ?? [],\n      ),\n    [calls],\n  )\n\n  // update listeners when there is an actual change that persists for at least 100ms\n  useEffect(() => {\n    const callKeys: string[] = JSON.parse(serializedCallKeys)\n    if (!chainId || callKeys.length === 0) return undefined\n    // eslint-disable-next-line @typescript-eslint/no-shadow\n    const calls = callKeys.map((key) => parseCallKey(key))\n    dispatch(\n      addMulticallListeners({\n        chainId,\n        calls,\n        options,\n      }),\n    )\n\n    return () => {\n      dispatch(\n        removeMulticallListeners({\n          chainId,\n          calls,\n          options,\n        }),\n      )\n    }\n  }, [chainId, dispatch, options, serializedCallKeys])\n\n  return useMemo(\n    () =>\n      calls.map<CallResult>((call) => {\n        if (!chainId || !call) return INVALID_RESULT\n\n        const result = callResults[chainId]?.[toCallKey(call)]\n        let data\n        if (result?.data && result?.data !== '0x') {\n          // eslint-disable-next-line prefer-destructuring\n          data = result.data\n        }\n\n        return { valid: true, data, blockNumber: result?.blockNumber }\n      }),\n    [callResults, calls, chainId],\n  )\n}\n\ninterface CallState {\n  readonly valid: boolean\n  // the result, or undefined if loading or errored/no data\n  readonly result: Result | undefined\n  // true if the result has never been fetched\n  readonly loading: boolean\n  // true if the result is not for the latest block\n  readonly syncing: boolean\n  // true if the call was made and is synced, but the return data is invalid\n  readonly error: boolean\n}\n\nconst INVALID_CALL_STATE: CallState = { valid: false, result: undefined, loading: false, syncing: false, error: false }\nconst LOADING_CALL_STATE: CallState = { valid: true, result: undefined, loading: true, syncing: true, error: false }\n\nfunction toCallState(\n  callResult: CallResult | undefined,\n  contractInterface: Interface | undefined,\n  fragment: FunctionFragment | undefined,\n  latestBlockNumber: number | undefined,\n): CallState {\n  if (!callResult) return INVALID_CALL_STATE\n  const { valid, data, blockNumber } = callResult\n  if (!valid) return INVALID_CALL_STATE\n  if (valid && !blockNumber) return LOADING_CALL_STATE\n  if (!contractInterface || !fragment || !latestBlockNumber) return LOADING_CALL_STATE\n  const success = data && data.length > 2\n  const syncing = (blockNumber ?? 0) < latestBlockNumber\n  let result: Result | undefined\n  if (success && data) {\n    try {\n      result = contractInterface.decodeFunctionResult(fragment, data)\n    } catch (error) {\n      console.debug('Result data parsing failed', fragment, data)\n      return {\n        valid: true,\n        loading: false,\n        error: true,\n        syncing,\n        result,\n      }\n    }\n  }\n  return {\n    valid: true,\n    loading: false,\n    syncing,\n    result,\n    error: !success,\n  }\n}\n\nexport function useSingleContractMultipleData(\n  contract: Contract | null | undefined,\n  methodName: string,\n  callInputs: OptionalMethodInputs[],\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo(\n    () =>\n      contract && fragment && callInputs && callInputs.length > 0\n        ? callInputs.map<Call>((inputs) => {\n            return {\n              address: contract.address,\n              callData: contract.interface.encodeFunctionData(fragment, inputs),\n            }\n          })\n        : [],\n    [callInputs, contract, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contract?.interface, fragment, currentBlock))\n  }, [fragment, contract, results, currentBlock])\n}\n\nexport function useMultipleContractSingleData(\n  addresses: (string | undefined)[],\n  contractInterface: Interface,\n  methodName: string,\n  callInputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState[] {\n  const fragment = useMemo(() => contractInterface.getFunction(methodName), [contractInterface, methodName])\n  const callData: string | undefined = useMemo(\n    () =>\n      fragment && isValidMethodArgs(callInputs)\n        ? contractInterface.encodeFunctionData(fragment, callInputs)\n        : undefined,\n    [callInputs, contractInterface, fragment],\n  )\n\n  const calls = useMemo(\n    () =>\n      fragment && addresses && addresses.length > 0 && callData\n        ? addresses.map<Call | undefined>((address) => {\n            return address && callData\n              ? {\n                  address,\n                  callData,\n                }\n              : undefined\n          })\n        : [],\n    [addresses, callData, fragment],\n  )\n\n  const results = useCallsData(calls, options)\n\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return results.map((result) => toCallState(result, contractInterface, fragment, currentBlock))\n  }, [fragment, results, contractInterface, currentBlock])\n}\n\nexport function useSingleCallResult(\n  contract: Contract | null | undefined,\n  methodName: string,\n  inputs?: OptionalMethodInputs,\n  options?: ListenerOptions,\n): CallState {\n  const fragment = useMemo(() => contract?.interface?.getFunction(methodName), [contract, methodName])\n\n  const calls = useMemo<Call[]>(() => {\n    return contract && fragment && isValidMethodArgs(inputs)\n      ? [\n          {\n            address: contract.address,\n            callData: contract.interface.encodeFunctionData(fragment, inputs),\n          },\n        ]\n      : []\n  }, [contract, fragment, inputs])\n\n  const result = useCallsData(calls, options)[0]\n  const { currentBlock } = useBlock()\n\n  return useMemo(() => {\n    return toCallState(result, contract?.interface, fragment, currentBlock)\n  }, [result, contract, fragment, currentBlock])\n}\n","import { ChainId } from '@wagyu-swap/sdk'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const VELAS_BLOCK_TIME = 0.4\n\nexport const BASE_VELAS_SCAN_URLS = {\n  [ChainId.MAINNET]: 'https://polygonscan.com',\n  [ChainId.TESTNET]: 'https://mumbai.polygonscan.com',\n}\n\n// ZOLA_PER_SECOND details\n// 40 ZOLA is minted per block\n// 20 ZOLA per block is sent to Burn pool (A farm just for burning cake)\n// 10 ZOLA per block goes to ZOLA syrup pool\n// 9 ZOLA per block goes to Yield farms and lottery\n// ZOLA_PER_SECOND in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// ZOLA/Block in src/views/Home/components/CakeDataRow.tsx = 15 (40 - Amount sent to burn pool)\nexport const ZOLA_PER_SECOND = new BigNumber(13)\nexport const SECONDS_PER_YEAR = new BigNumber(60 * 60 * 24 * 365) // 10512000\nexport const ZOLA_PER_YEAR = ZOLA_PER_SECOND.times(SECONDS_PER_YEAR)\n// export const BASE_URL = 'https://pancakeswap.finance'\nexport const BASE_URL = `${window.location.protocol}//${window.location.host}`\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_URL}/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_URL}/pool`\nexport const BASE_BSC_SCAN_URL = BASE_VELAS_SCAN_URLS[ChainId.MAINNET]\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS_LIMIT = 400000\nexport const AUCTION_BIDDERS_TO_FETCH = 500\nexport const RECLAIM_AUCTIONS_TO_FETCH = 500\nexport const AUCTION_WHITELISTED_BIDDERS_TO_FETCH = 500\nexport const IPFS_GATEWAY = 'https://ipfs.io/ipfs'\n","import { ThunkAction } from 'redux-thunk'\nimport { AnyAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport {\n  CampaignType,\n  SerializedFarmConfig,\n  LotteryStatus,\n  LotteryTicket,\n  DeserializedPoolConfig,\n  SerializedPoolConfig,\n  Team,\n  TranslatableText,\n  DeserializedFarmConfig,\n} from 'config/constants/types'\nimport { Nft } from 'config/constants/nfts/types'\n\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, State, unknown, AnyAction>\n\nexport interface BigNumberToJson {\n  type: 'BigNumber'\n  hex: string\n}\n\nexport type SerializedBigNumber = string\n\ninterface SerializedFarmUserData {\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport interface DeserializedFarmUserData {\n  allowance: BigNumber\n  tokenBalance: BigNumber\n  stakedBalance: BigNumber\n  earnings: BigNumber\n}\n\nexport interface SerializedFarm extends SerializedFarmConfig {\n  tokenPriceUsdt?: string\n  quoteTokenPriceUsdt?: string\n  tokenAmountTotal?: SerializedBigNumber\n  lpTotalInQuoteToken?: SerializedBigNumber\n  lpTotalSupply?: SerializedBigNumber\n  tokenPriceVsQuote?: SerializedBigNumber\n  poolWeight?: SerializedBigNumber\n  userData?: SerializedFarmUserData\n}\n\nexport interface DeserializedFarm extends DeserializedFarmConfig {\n  tokenPriceUsdt?: string\n  quoteTokenPriceUsdt?: string\n  tokenAmountTotal?: BigNumber\n  lpTotalInQuoteToken?: BigNumber\n  lpTotalSupply?: BigNumber\n  tokenPriceVsQuote?: BigNumber\n  poolWeight?: BigNumber\n  userData?: DeserializedFarmUserData\n}\n\ninterface CorePoolProps {\n  startBlock?: number\n  endBlock?: number\n  apr?: number\n  stakingTokenPrice?: number\n  earningTokenPrice?: number\n  isAutoVault?: boolean\n}\n\nexport interface DeserializedPool extends DeserializedPoolConfig, CorePoolProps {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface SerializedPool extends SerializedPoolConfig, CorePoolProps {\n  totalStaked?: SerializedBigNumber\n  stakingLimit?: SerializedBigNumber\n  userData?: {\n    allowance: SerializedBigNumber\n    stakingTokenBalance: SerializedBigNumber\n    stakedBalance: SerializedBigNumber\n    pendingReward: SerializedBigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  nftAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: Nft\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface SerializedFarmsState {\n  data: SerializedFarm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface DeserializedFarmsState {\n  data: DeserializedFarm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface VaultFees {\n  performanceFee: number\n  callFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface VaultUser {\n  isLoading: boolean\n  userShares: string\n  cakeAtLastUserAction: string\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\nexport interface CakeVault {\n  totalShares?: string\n  pricePerFullShare?: string\n  totalCakeInVault?: string\n  estimatedCakeBountyReward?: string\n  totalPendingCakeHarvest?: string\n  fees?: VaultFees\n  userData?: VaultUser\n  amountInFarm?: string\n}\n\nexport interface PoolsState {\n  data: SerializedPool[]\n  cakeVault: CakeVault\n  userDataLoaded: boolean\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n  profileAvatars: {\n    [key: string]: {\n      username: string\n      nft: Nft\n    }\n  }\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport interface AchievementState {\n  data: Achievement[]\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Collectibles\n\nexport interface CollectiblesState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: {\n    [key: string]: number[]\n  }\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  position: BetPosition\n  failed: boolean\n  startAt: number\n  startBlock: number\n  startHash: string\n  lockAt: number\n  lockBlock: number\n  lockHash: string\n  lockPrice: number\n  lockRoundId: string\n  closeAt: number\n  closeBlock: number\n  closeHash: string\n  closePrice: number\n  closeRoundId: string\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bullAmount: number\n  bearBets: number\n  bearAmount: number\n  bets?: Bet[]\n}\n\nexport interface Market {\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  claimedAt: number\n  claimedBlock: number\n  claimedHash: string\n  claimedBNB: number\n  claimedNetBNB: number\n  createdAt: number\n  updatedAt: number\n  user?: PredictionUser\n  round?: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  createdAt: number\n  updatedAt: number\n  block: number\n  totalBets: number\n  totalBetsBull: number\n  totalBetsBear: number\n  totalBNB: number\n  totalBNBBull: number\n  totalBNBBear: number\n  totalBetsClaimed: number\n  totalBNBClaimed: number\n  winRate: number\n  averageBNB: number\n  netBNB: number\n  bets?: Bet[]\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface LedgerData {\n  [key: string]: {\n    [key: string]: ReduxNodeLedger\n  }\n}\n\nexport interface RoundData {\n  [key: string]: ReduxNodeRound\n}\n\nexport interface ReduxNodeLedger {\n  position: BetPosition\n  amount: BigNumberToJson\n  claimed: boolean\n}\n\nexport interface NodeLedger {\n  position: BetPosition\n  amount: ethers.BigNumber\n  claimed: boolean\n}\n\nexport interface ReduxNodeRound {\n  epoch: number\n  startTimestamp: number | null\n  lockTimestamp: number | null\n  closeTimestamp: number | null\n  lockPrice: BigNumberToJson | null\n  closePrice: BigNumberToJson | null\n  totalAmount: BigNumberToJson\n  bullAmount: BigNumberToJson\n  bearAmount: BigNumberToJson\n  rewardBaseCalAmount: BigNumberToJson\n  rewardAmount: BigNumberToJson\n  oracleCalled: boolean\n  lockOracleId: string\n  closeOracleId: string\n}\n\nexport interface NodeRound {\n  epoch: number\n  startTimestamp: number | null\n  lockTimestamp: number | null\n  closeTimestamp: number | null\n  lockPrice: ethers.BigNumber | null\n  closePrice: ethers.BigNumber | null\n  totalAmount: ethers.BigNumber\n  bullAmount: ethers.BigNumber\n  bearAmount: ethers.BigNumber\n  rewardBaseCalAmount: ethers.BigNumber\n  rewardAmount: ethers.BigNumber\n  oracleCalled: boolean\n  closeOracleId: string\n  lockOracleId: string\n}\n\nexport enum LeaderboardLoadingState {\n  INITIAL,\n  LOADING,\n  IDLE,\n}\n\nexport type LeaderboardFilterTimePeriod = '1d' | '7d' | '1m' | 'all'\n\nexport interface LeaderboardFilter {\n  address?: string\n  orderBy?: string\n  timePeriod?: LeaderboardFilterTimePeriod\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  intervalSeconds: number\n  minBetAmount: string\n  bufferSeconds: number\n  lastOraclePrice: string\n  history: Bet[]\n  totalHistory: number\n  currentHistoryPage: number\n  hasHistoryLoaded: boolean\n  rounds?: RoundData\n  ledgers?: LedgerData\n  claimableStatuses: {\n    [key: string]: boolean\n  }\n  leaderboard: {\n    loadingState: LeaderboardLoadingState\n    filters: LeaderboardFilter\n    skip: number\n    hasMoreResults: boolean\n    addressResults: {\n      [key: string]: PredictionUser\n    }\n    results: PredictionUser[]\n  }\n}\n\n// Voting\n\n/* eslint-disable camelcase */\n/**\n * @see https://hub.snapshot.page/graphql\n */\nexport interface VoteWhere {\n  id?: string\n  id_in?: string[]\n  voter?: string\n  voter_in?: string[]\n  proposal?: string\n  proposal_in?: string[]\n}\n\nexport enum SnapshotCommand {\n  PROPOSAL = 'proposal',\n  VOTE = 'vote',\n}\n\nexport enum ProposalType {\n  ALL = 'all',\n  CORE = 'core',\n  COMMUNITY = 'community',\n}\n\nexport enum ProposalState {\n  ACTIVE = 'active',\n  PENDING = 'pending',\n  CLOSED = 'closed',\n}\n\nexport interface Space {\n  id: string\n  name: string\n}\n\nexport interface Proposal {\n  author: string\n  body: string\n  choices: string[]\n  end: number\n  id: string\n  snapshot: string\n  space: Space\n  start: number\n  state: ProposalState\n  title: string\n}\n\nexport interface Vote {\n  id: string\n  voter: string\n  created: number\n  space: Space\n  proposal: {\n    choices: Proposal['choices']\n  }\n  choice: number\n  metadata?: {\n    votingPower: string\n    verificationHash: string\n  }\n  _inValid?: boolean\n}\n\nexport enum VotingStateLoadingStatus {\n  INITIAL = 'initial',\n  IDLE = 'idle',\n  LOADING = 'loading',\n  ERROR = 'error',\n}\n\nexport interface VotingState {\n  proposalLoadingStatus: VotingStateLoadingStatus\n  proposals: {\n    [key: string]: Proposal\n  }\n  voteLoadingStatus: VotingStateLoadingStatus\n  votes: {\n    [key: string]: Vote[]\n  }\n}\n\nexport interface LotteryRoundUserTickets {\n  isLoading?: boolean\n  tickets?: LotteryTicket[]\n}\n\ninterface LotteryRoundGenerics {\n  isLoading?: boolean\n  lotteryId: string\n  status: LotteryStatus\n  startTime: string\n  endTime: string\n  treasuryFee: string\n  firstTicketId: string\n  lastTicketId: string\n  finalNumber: number\n}\n\nexport interface LotteryRound extends LotteryRoundGenerics {\n  userTickets?: LotteryRoundUserTickets\n  priceTicketInCake: BigNumber\n  discountDivisor: BigNumber\n  amountCollectedInCake: BigNumber\n  cakePerBracket: string[]\n  countWinnersPerBracket: string[]\n  rewardsBreakdown: string[]\n}\n\nexport interface LotteryResponse extends LotteryRoundGenerics {\n  priceTicketInCake: SerializedBigNumber\n  discountDivisor: SerializedBigNumber\n  amountCollectedInCake: SerializedBigNumber\n  cakePerBracket: SerializedBigNumber[]\n  countWinnersPerBracket: SerializedBigNumber[]\n  rewardsBreakdown: SerializedBigNumber[]\n}\n\nexport interface LotteryState {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n  isTransitioning: boolean\n  currentRound: LotteryResponse & { userTickets?: LotteryRoundUserTickets }\n  lotteriesData?: LotteryRoundGraphEntity[]\n  userLotteryData?: LotteryUserGraphEntity\n}\n\nexport interface LotteryRoundGraphEntity {\n  id: string\n  totalUsers: string\n  totalTickets: string\n  winningTickets: string\n  status: LotteryStatus\n  finalNumber: string\n  startTime: string\n  endTime: string\n  ticketPrice: SerializedBigNumber\n}\n\nexport interface LotteryUserGraphEntity {\n  account: string\n  totalCake: string\n  totalTickets: string\n  rounds: UserRound[]\n}\n\nexport interface UserRound {\n  claimed: boolean\n  lotteryId: string\n  status: LotteryStatus\n  endTime: string\n  totalTickets: string\n  tickets?: LotteryTicket[]\n}\n\nexport type UserTicketsResponse = [ethers.BigNumber[], number[], boolean[]]\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: SerializedFarmsState\n  pools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  collectibles: CollectiblesState\n  voting: VotingState\n  lottery: LotteryState\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { ethers } from 'ethers'\nimport {\n  Bet,\n  LedgerData,\n  BetPosition,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeLedger,\n  ReduxNodeRound,\n  Round,\n  RoundData,\n  PredictionUser,\n  HistoryFilter,\n} from 'state/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport { getPredictionsAddress } from 'utils/addressHelpers'\nimport { PredictionsClaimableResponse, PredictionsLedgerResponse, PredictionsRoundsResponse } from 'utils/types'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  TotalWonMarketResponse,\n  UserResponse,\n} from './queries'\nimport { ROUNDS_PER_PAGE } from './config'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nconst getRoundPosition = (positionResponse: string) => {\n  if (positionResponse === 'Bull') {\n    return BetPosition.BULL\n  }\n\n  if (positionResponse === 'Bear') {\n    return BetPosition.BEAR\n  }\n\n  if (positionResponse === 'House') {\n    return BetPosition.HOUSE\n  }\n\n  return null\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    block: numberOrNull(betResponse.block),\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    claimedAt: numberOrNull(betResponse.claimedAt),\n    claimedBlock: numberOrNull(betResponse.claimedBlock),\n    claimedHash: betResponse.claimedHash,\n    claimedBNB: betResponse.claimedBNB ? parseFloat(betResponse.claimedBNB) : 0,\n    claimedNetBNB: betResponse.claimedNetBNB ? parseFloat(betResponse.claimedNetBNB) : 0,\n    createdAt: numberOrNull(betResponse.createdAt),\n    updatedAt: numberOrNull(betResponse.updatedAt),\n  } as Bet\n\n  if (betResponse.user) {\n    bet.user = transformUserResponse(betResponse.user)\n  }\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformUserResponse = (userResponse: UserResponse): PredictionUser => {\n  const {\n    id,\n    createdAt,\n    updatedAt,\n    block,\n    totalBets,\n    totalBetsBull,\n    totalBetsBear,\n    totalBNB,\n    totalBNBBull,\n    totalBNBBear,\n    totalBetsClaimed,\n    totalBNBClaimed,\n    winRate,\n    averageBNB,\n    netBNB,\n  } = userResponse\n\n  return {\n    id,\n    createdAt: numberOrNull(createdAt),\n    updatedAt: numberOrNull(updatedAt),\n    block: numberOrNull(block),\n    totalBets: numberOrNull(totalBets),\n    totalBetsBull: numberOrNull(totalBetsBull),\n    totalBetsBear: numberOrNull(totalBetsBear),\n    totalBNB: totalBNB ? parseFloat(totalBNB) : 0,\n    totalBNBBull: totalBNBBull ? parseFloat(totalBNBBull) : 0,\n    totalBNBBear: totalBNBBear ? parseFloat(totalBNBBear) : 0,\n    totalBetsClaimed: numberOrNull(totalBetsClaimed),\n    totalBNBClaimed: totalBNBClaimed ? parseFloat(totalBNBClaimed) : 0,\n    winRate: winRate ? parseFloat(winRate) : 0,\n    averageBNB: averageBNB ? parseFloat(averageBNB) : 0,\n    netBNB: netBNB ? parseFloat(netBNB) : 0,\n  }\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    position,\n    startAt,\n    startBlock,\n    startHash,\n    lockAt,\n    lockBlock,\n    lockHash,\n    lockPrice,\n    lockRoundId,\n    closeAt,\n    closeBlock,\n    closeHash,\n    closePrice,\n    closeRoundId,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bullAmount,\n    bearBets,\n    bearAmount,\n    bets = [],\n  } = roundResponse\n\n  return {\n    id,\n    failed,\n    startHash,\n    lockHash,\n    lockRoundId,\n    closeRoundId,\n    closeHash,\n    position: getRoundPosition(position),\n    epoch: numberOrNull(epoch),\n    startAt: numberOrNull(startAt),\n    startBlock: numberOrNull(startBlock),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : 0,\n    closeAt: numberOrNull(closeAt),\n    closeBlock: numberOrNull(closeBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : 0,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bullAmount: bullAmount ? parseFloat(bullAmount) : 0,\n    bearBets: numberOrNull(bearBets),\n    bearAmount: bearAmount ? parseFloat(bearAmount) : 0,\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\nexport const getFilteredBets = (bets: Bet[], filter: HistoryFilter) => {\n  switch (filter) {\n    case HistoryFilter.COLLECTED:\n      return bets.filter((bet) => bet.claimed === true)\n    case HistoryFilter.UNCOLLECTED:\n      return bets.filter((bet) => {\n        return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n      })\n    case HistoryFilter.ALL:\n    default:\n      return bets\n  }\n}\n\nexport const getTotalWon = async (): Promise<number> => {\n  const { market } = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getTotalWonData {\n        market(id: 1) {\n          totalBNB\n          totalBNBTreasury\n        }\n      }\n    `,\n  )) as { market: TotalWonMarketResponse }\n\n  const totalBNB = market.totalBNB ? parseFloat(market.totalBNB) : 0\n  const totalBNBTreasury = market.totalBNBTreasury ? parseFloat(market.totalBNBTreasury) : 0\n\n  return Math.max(totalBNB - totalBNBTreasury, 0)\n}\n\ntype WhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (where: WhereClause = {}, first = 1000, skip = 0): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where, order: createdAt, orderDirection: desc) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n\nexport const getLedgerData = async (account: string, epochs: number[]) => {\n  const address = getPredictionsAddress()\n  const ledgerCalls = epochs.map((epoch) => ({\n    address,\n    name: 'ledger',\n    params: [epoch, account],\n  }))\n  const response = await multicallv2<PredictionsLedgerResponse[]>(predictionsAbi, ledgerCalls)\n  return response\n}\n\nexport const LEADERBOARD_RESULTS_PER_PAGE = 20\n\ninterface GetPredictionUsersOptions {\n  skip?: number\n  first?: number\n  orderBy?: string\n  orderDir?: string\n  where?: WhereClause\n}\n\nconst defaultPredictionUserOptions = {\n  skip: 0,\n  first: LEADERBOARD_RESULTS_PER_PAGE,\n  orderBy: 'createdAt',\n  orderDir: 'desc',\n}\n\nexport const getPredictionUsers = async (options: GetPredictionUsersOptions = {}): Promise<UserResponse[]> => {\n  const { first, skip, where, orderBy, orderDir } = { ...defaultPredictionUserOptions, ...options }\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getUsers($first: Int!, $skip: Int!, $where: User_filter, $orderBy: User_orderBy, $orderDir: OrderDirection) {\n        users(first: $first, skip: $skip, where: $where, orderBy: $orderBy, orderDirection: $orderDir) {\n          ${getUserBaseFields()} \n        }\n      }\n    `,\n    { first, skip, where, orderBy, orderDir },\n  )\n  return response.users\n}\n\nexport const getPredictionUser = async (account: string): Promise<UserResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getUser($id: ID!) {\n        user(id: $id) {\n          ${getUserBaseFields()}\n        }\n      }\n  `,\n    {\n      id: account.toLowerCase(),\n    },\n  )\n  return response.user\n}\n\nexport const getClaimStatuses = async (\n  account: string,\n  epochs: number[],\n): Promise<PredictionsState['claimableStatuses']> => {\n  const address = getPredictionsAddress()\n  const claimableCalls = epochs.map((epoch) => ({\n    address,\n    name: 'claimable',\n    params: [epoch, account],\n  }))\n  const claimableResponses = await multicallv2<[PredictionsClaimableResponse][]>(predictionsAbi, claimableCalls)\n\n  return claimableResponses.reduce((accum, claimableResponse, index) => {\n    const epoch = epochs[index]\n    const [claimable] = claimableResponse\n\n    return {\n      ...accum,\n      [epoch]: claimable,\n    }\n  }, {})\n}\n\nexport type MarketData = Pick<\n  PredictionsState,\n  'status' | 'currentEpoch' | 'intervalSeconds' | 'minBetAmount' | 'bufferSeconds'\n>\nexport const getPredictionData = async (): Promise<MarketData> => {\n  const address = getPredictionsAddress()\n  const staticCalls = ['currentEpoch', 'intervalSeconds', 'minBetAmount', 'paused', 'bufferSeconds'].map((method) => ({\n    address,\n    name: method,\n  }))\n  const [[currentEpoch], [intervalSeconds], [minBetAmount], [paused], [bufferSeconds]] = await multicallv2(\n    predictionsAbi,\n    staticCalls,\n  )\n\n  return {\n    status: paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: currentEpoch.toNumber(),\n    intervalSeconds: intervalSeconds.toNumber(),\n    minBetAmount: minBetAmount.toString(),\n    bufferSeconds: bufferSeconds.toNumber(),\n  }\n}\n\nexport const getRoundsData = async (epochs: number[]): Promise<PredictionsRoundsResponse[]> => {\n  const address = getPredictionsAddress()\n  const calls = epochs.map((epoch) => ({\n    address,\n    name: 'rounds',\n    params: [epoch],\n  }))\n  const response = await multicallv2<PredictionsRoundsResponse[]>(predictionsAbi, calls)\n  return response\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startTimestamp: number): ReduxNodeRound => {\n  return {\n    epoch,\n    startTimestamp,\n    lockTimestamp: null,\n    closeTimestamp: null,\n    lockPrice: null,\n    closePrice: null,\n    totalAmount: ethers.BigNumber.from(0).toJSON(),\n    bullAmount: ethers.BigNumber.from(0).toJSON(),\n    bearAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardBaseCalAmount: ethers.BigNumber.from(0).toJSON(),\n    rewardAmount: ethers.BigNumber.from(0).toJSON(),\n    oracleCalled: false,\n    lockOracleId: null,\n    closeOracleId: null,\n  }\n}\n\nexport const makeRoundData = (rounds: ReduxNodeRound[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.epoch.toString()]: round,\n    }\n  }, {})\n}\n\nexport const serializePredictionsLedgerResponse = (ledgerResponse: PredictionsLedgerResponse): ReduxNodeLedger => ({\n  position: ledgerResponse.position === 0 ? BetPosition.BULL : BetPosition.BEAR,\n  amount: ledgerResponse.amount.toJSON(),\n  claimed: ledgerResponse.claimed,\n})\n\nexport const makeLedgerData = (account: string, ledgers: PredictionsLedgerResponse[], epochs: number[]): LedgerData => {\n  return ledgers.reduce((accum, ledgerResponse, index) => {\n    if (!ledgerResponse) {\n      return accum\n    }\n\n    // If the amount is zero that means the user did not bet\n    if (ledgerResponse.amount.eq(0)) {\n      return accum\n    }\n\n    const epoch = epochs[index].toString()\n\n    return {\n      ...accum,\n      [account]: {\n        ...accum[account],\n        [epoch]: serializePredictionsLedgerResponse(ledgerResponse),\n      },\n    }\n  }, {})\n}\n\n/**\n * Serializes the return from the \"rounds\" call for redux\n */\nexport const serializePredictionsRoundsResponse = (response: PredictionsRoundsResponse): ReduxNodeRound => {\n  const {\n    epoch,\n    startTimestamp,\n    lockTimestamp,\n    closeTimestamp,\n    lockPrice,\n    closePrice,\n    totalAmount,\n    bullAmount,\n    bearAmount,\n    rewardBaseCalAmount,\n    rewardAmount,\n    oracleCalled,\n    lockOracleId,\n    closeOracleId,\n  } = response\n\n  return {\n    oracleCalled,\n    epoch: epoch.toNumber(),\n    startTimestamp: startTimestamp.eq(0) ? null : startTimestamp.toNumber(),\n    lockTimestamp: lockTimestamp.eq(0) ? null : lockTimestamp.toNumber(),\n    closeTimestamp: closeTimestamp.eq(0) ? null : closeTimestamp.toNumber(),\n    lockPrice: lockPrice.eq(0) ? null : lockPrice.toJSON(),\n    closePrice: closePrice.eq(0) ? null : closePrice.toJSON(),\n    totalAmount: totalAmount.toJSON(),\n    bullAmount: bullAmount.toJSON(),\n    bearAmount: bearAmount.toJSON(),\n    rewardBaseCalAmount: rewardBaseCalAmount.toJSON(),\n    rewardAmount: rewardAmount.toJSON(),\n    lockOracleId: lockOracleId.toString(),\n    closeOracleId: closeOracleId.toString(),\n  }\n}\n\n/**\n * Parse serialized values back into ethers.BigNumber\n * ethers.BigNumber values are stored with the \"toJSON()\" method, e.g  { type: \"BigNumber\", hex: string }\n */\nexport const parseBigNumberObj = <T = Record<string, any>, K = Record<string, any>>(data: T): K => {\n  return Object.keys(data).reduce((accum, key) => {\n    const value = data[key]\n\n    if (value && value?.type === 'BigNumber') {\n      return {\n        ...accum,\n        [key]: ethers.BigNumber.from(value),\n      }\n    }\n\n    return {\n      ...accum,\n      [key]: value,\n    }\n  }, {}) as K\n}\n\nexport const fetchUsersRoundsLength = async (account: string) => {\n  try {\n    const contract = getPredictionsContract()\n    const length = await contract.getUserRoundsLength(account)\n    return length\n  } catch {\n    return ethers.BigNumber.from(0)\n  }\n}\n\n/**\n * Fetches rounds a user has participated in\n */\nexport const fetchUserRounds = async (\n  account: string,\n  cursor = 0,\n  size = ROUNDS_PER_PAGE,\n): Promise<{ [key: string]: ReduxNodeLedger }> => {\n  const contract = getPredictionsContract()\n\n  try {\n    const [rounds, ledgers] = await contract.getUserRounds(account, cursor, size)\n\n    return rounds.reduce((accum, round, index) => {\n      return {\n        ...accum,\n        [round.toString()]: serializePredictionsLedgerResponse(ledgers[index]),\n      }\n    }, {})\n  } catch {\n    // When the results run out the contract throws an error.\n    return null\n  }\n}\n","export const REWARD_RATE = 0.97\n\n// Estimated number of seconds it takes to submit a transaction (3 blocks) in seconds\nexport const ROUND_BUFFER = 9\n\nexport const PAST_ROUND_COUNT = 5\nexport const FUTURE_ROUND_COUNT = 2\n\nexport const ROUNDS_PER_PAGE = 1000\nexport const LEADERBOARD_MIN_ROUNDS_PLAYED = 10\n","export interface UserResponse {\n  id: string\n  createdAt: string\n  updatedAt: string\n  block: string\n  totalBets: string\n  totalBetsBull: string\n  totalBetsBear: string\n  totalBNB: string\n  totalBNBBull: string\n  totalBNBBear: string\n  totalBetsClaimed: string\n  totalBNBClaimed: string\n  winRate: string\n  averageBNB: string\n  netBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  claimedAt: string\n  claimedBlock: string\n  claimedHash: string\n  claimedBNB: string\n  claimedNetBNB: string\n  createdAt: string\n  updatedAt: string\n  block: string\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  position: string\n  failed: boolean\n  startAt: string\n  startBlock: string\n  startHash: string\n  lockAt: string\n  lockBlock: string\n  lockHash: string\n  lockPrice: string\n  lockRoundId: string\n  closeAt: string\n  closeBlock: string\n  closeHash: string\n  closePrice: string\n  closeRoundId: string\n  totalBets: string\n  totalAmount: string\n  bullBets: string\n  bullAmount: string\n  bearBets: string\n  bearAmount: string\n  bets?: BetResponse[]\n}\n\nexport interface TotalWonMarketResponse {\n  totalBNB: string\n  totalBNBTreasury: string\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  position\n  failed\n  startAt\n  startBlock\n  startHash\n  lockAt\n  lockBlock\n  lockHash\n  lockPrice\n  lockRoundId\n  closeAt\n  closeBlock\n  closeHash\n  closePrice\n  closeRoundId\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n`\n\nexport const getBetBaseFields = () => `\n id\n hash  \n amount\n position\n claimed\n claimedAt\n claimedHash\n claimedBlock\n claimedBNB\n claimedNetBNB\n createdAt\n updatedAt\n`\n\nexport const getUserBaseFields = () => `\n  id\n  createdAt\n  updatedAt\n  block\n  totalBets\n  totalBetsBull\n  totalBetsBear\n  totalBNB\n  totalBNBBull\n  totalBNBBear\n  totalBetsClaimed\n  totalBNBClaimed\n  winRate\n  averageBNB\n  netBNB\n`\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport range from 'lodash/range'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport {\n  Bet,\n  LedgerData,\n  HistoryFilter,\n  PredictionsState,\n  PredictionStatus,\n  ReduxNodeRound,\n  BetPosition,\n  LeaderboardLoadingState,\n  PredictionUser,\n  LeaderboardFilter,\n  State,\n} from 'state/types'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport {\n  FUTURE_ROUND_COUNT,\n  LEADERBOARD_MIN_ROUNDS_PLAYED,\n  PAST_ROUND_COUNT,\n  ROUNDS_PER_PAGE,\n  ROUND_BUFFER,\n} from './config'\nimport {\n  getBetHistory,\n  transformBetResponse,\n  makeFutureRoundResponse,\n  makeRoundData,\n  getRoundsData,\n  getPredictionData,\n  MarketData,\n  getLedgerData,\n  makeLedgerData,\n  serializePredictionsRoundsResponse,\n  getClaimStatuses,\n  fetchUsersRoundsLength,\n  fetchUserRounds,\n  getPredictionUsers,\n  transformUserResponse,\n  LEADERBOARD_RESULTS_PER_PAGE,\n  getPredictionUser,\n} from './helpers'\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  intervalSeconds: 300,\n  minBetAmount: '10000000000000',\n  bufferSeconds: 60,\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: [],\n  totalHistory: 0,\n  currentHistoryPage: 1,\n  hasHistoryLoaded: false,\n  ledgers: {},\n  claimableStatuses: {},\n  leaderboard: {\n    loadingState: LeaderboardLoadingState.INITIAL,\n    filters: {\n      address: null,\n      orderBy: 'netBNB',\n      timePeriod: 'all',\n    },\n    skip: 0,\n    hasMoreResults: true,\n    addressResults: {},\n    results: [],\n  },\n}\n\n// Thunks\ntype PredictionInitialization = Pick<\n  PredictionsState,\n  | 'status'\n  | 'currentEpoch'\n  | 'intervalSeconds'\n  | 'minBetAmount'\n  | 'rounds'\n  | 'ledgers'\n  | 'claimableStatuses'\n  | 'bufferSeconds'\n>\nexport const initializePredictions = createAsyncThunk<PredictionInitialization, string>(\n  'predictions/intialize',\n  async (account = null) => {\n    // Static values\n    const marketData = await getPredictionData()\n    const epochs =\n      marketData.currentEpoch > PAST_ROUND_COUNT\n        ? range(marketData.currentEpoch, marketData.currentEpoch - PAST_ROUND_COUNT)\n        : [marketData.currentEpoch]\n\n    // Round data\n    const roundsResponse = await getRoundsData(epochs)\n    const initialRoundData: { [key: string]: ReduxNodeRound } = roundsResponse.reduce((accum, roundResponse) => {\n      const reduxNodeRound = serializePredictionsRoundsResponse(roundResponse)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n\n    const initializedData = {\n      ...marketData,\n      rounds: initialRoundData,\n      ledgers: {},\n      claimableStatuses: {},\n    }\n\n    if (!account) {\n      return initializedData\n    }\n\n    // Bet data\n    const ledgerResponses = await getLedgerData(account, epochs)\n\n    // Claim statuses\n    const claimableStatuses = await getClaimStatuses(account, epochs)\n\n    return merge({}, initializedData, {\n      ledgers: makeLedgerData(account, ledgerResponses, epochs),\n      claimableStatuses,\n    })\n  },\n)\n\nexport const fetchRound = createAsyncThunk<ReduxNodeRound, number>('predictions/fetchRound', async (epoch) => {\n  const predictionContract = getPredictionsContract()\n  const response = await predictionContract.rounds(epoch)\n  return serializePredictionsRoundsResponse(response)\n})\n\nexport const fetchRounds = createAsyncThunk<{ [key: string]: ReduxNodeRound }, number[]>(\n  'predictions/fetchRounds',\n  async (epochs) => {\n    const rounds = await getRoundsData(epochs)\n    return rounds.reduce((accum, round) => {\n      if (!round) {\n        return accum\n      }\n\n      const reduxNodeRound = serializePredictionsRoundsResponse(round)\n\n      return {\n        ...accum,\n        [reduxNodeRound.epoch.toString()]: reduxNodeRound,\n      }\n    }, {})\n  },\n)\n\nexport const fetchMarketData = createAsyncThunk<MarketData>('predictions/fetchMarketData', async () => {\n  const marketData = await getPredictionData()\n  return marketData\n})\n\nexport const fetchLedgerData = createAsyncThunk<LedgerData, { account: string; epochs: number[] }>(\n  'predictions/fetchLedgerData',\n  async ({ account, epochs }) => {\n    const ledgers = await getLedgerData(account, epochs)\n    return makeLedgerData(account, ledgers, epochs)\n  },\n)\n\nexport const fetchClaimableStatuses = createAsyncThunk<\n  PredictionsState['claimableStatuses'],\n  { account: string; epochs: number[] }\n>('predictions/fetchClaimableStatuses', async ({ account, epochs }) => {\n  const ledgers = await getClaimStatuses(account, epochs)\n  return ledgers\n})\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const fetchNodeHistory = createAsyncThunk<\n  { bets: Bet[]; claimableStatuses: PredictionsState['claimableStatuses']; page?: number; totalHistory: number },\n  { account: string; page?: number }\n>('predictions/fetchNodeHistory', async ({ account, page = 1 }) => {\n  const userRoundsLength = await fetchUsersRoundsLength(account)\n  const emptyResult = { bets: [], claimableStatuses: {}, totalHistory: userRoundsLength.toNumber() }\n  const maxPages = userRoundsLength.lte(ROUNDS_PER_PAGE) ? 1 : Math.ceil(userRoundsLength.toNumber() / ROUNDS_PER_PAGE)\n\n  if (userRoundsLength.eq(0)) {\n    return emptyResult\n  }\n\n  if (page > maxPages) {\n    return emptyResult\n  }\n\n  const cursor = userRoundsLength.sub(ROUNDS_PER_PAGE * page)\n\n  // If the page request is the final one we only want to retrieve the amount of rounds up to the next cursor.\n  const size =\n    maxPages === page\n      ? userRoundsLength\n          .sub(ROUNDS_PER_PAGE * (page - 1)) // Previous page's cursor\n          .toNumber()\n      : ROUNDS_PER_PAGE\n  const userRounds = await fetchUserRounds(account, cursor.lt(0) ? 0 : cursor.toNumber(), size)\n\n  if (!userRounds) {\n    return emptyResult\n  }\n\n  const epochs = Object.keys(userRounds).map((epochStr) => Number(epochStr))\n  const roundData = await getRoundsData(epochs)\n  const claimableStatuses = await getClaimStatuses(account, epochs)\n\n  // Turn the data from the node into an Bet object that comes from the graph\n  const bets: Bet[] = roundData.reduce((accum, round) => {\n    const reduxRound = serializePredictionsRoundsResponse(round)\n    const ledger = userRounds[reduxRound.epoch]\n    const ledgerAmount = ethers.BigNumber.from(ledger.amount)\n    const closePrice = round.closePrice ? parseFloat(formatUnits(round.closePrice, 8)) : null\n    const lockPrice = round.lockPrice ? parseFloat(formatUnits(round.lockPrice, 8)) : null\n\n    const getRoundPosition = () => {\n      if (!closePrice) {\n        return null\n      }\n\n      if (round.closePrice.eq(round.lockPrice)) {\n        return BetPosition.HOUSE\n      }\n\n      return round.closePrice.gt(round.lockPrice) ? BetPosition.BULL : BetPosition.BEAR\n    }\n\n    return [\n      ...accum,\n      {\n        id: null,\n        hash: null,\n        amount: parseFloat(formatUnits(ledgerAmount)),\n        position: ledger.position,\n        claimed: ledger.claimed,\n        claimedAt: null,\n        claimedHash: null,\n        claimedBNB: 0,\n        claimedNetBNB: 0,\n        createdAt: null,\n        updatedAt: null,\n        block: 0,\n        round: {\n          id: null,\n          epoch: round.epoch.toNumber(),\n          failed: false,\n          startBlock: null,\n          startAt: round.startTimestamp ? round.startTimestamp.toNumber() : null,\n          startHash: null,\n          lockAt: round.lockTimestamp ? round.lockTimestamp.toNumber() : null,\n          lockBlock: null,\n          lockPrice,\n          lockHash: null,\n          lockRoundId: round.lockOracleId ? round.lockOracleId.toString() : null,\n          closeRoundId: round.closeOracleId ? round.closeOracleId.toString() : null,\n          closeHash: null,\n          closeAt: null,\n          closePrice,\n          closeBlock: null,\n          totalBets: 0,\n          totalAmount: parseFloat(formatUnits(round.totalAmount)),\n          bullBets: 0,\n          bullAmount: parseFloat(formatUnits(round.bullAmount)),\n          bearBets: 0,\n          bearAmount: parseFloat(formatUnits(round.bearAmount)),\n          position: getRoundPosition(),\n        },\n      },\n    ]\n  }, [])\n\n  return { bets, claimableStatuses, page, totalHistory: userRoundsLength.toNumber() }\n})\n\n// Leaderboard\nexport const filterLeaderboard = createAsyncThunk<{ results: PredictionUser[] }, { filters: LeaderboardFilter }>(\n  'predictions/filterLeaderboard',\n  async ({ filters }) => {\n    const usersResponse = await getPredictionUsers({\n      skip: 0,\n      orderBy: filters.orderBy,\n      where: { totalBets_gte: LEADERBOARD_MIN_ROUNDS_PLAYED, [`${filters.orderBy}_gt`]: 0 },\n    })\n\n    return { results: usersResponse.map(transformUserResponse) }\n  },\n)\n\nexport const fetchAddressResult = createAsyncThunk<\n  { account: string; data: PredictionUser },\n  string,\n  { rejectValue: string }\n>('predictions/fetchAddressResult', async (account, { rejectWithValue }) => {\n  const userResponse = await getPredictionUser(account)\n\n  if (!userResponse) {\n    return rejectWithValue(account)\n  }\n\n  return { account, data: transformUserResponse(userResponse) }\n})\n\nexport const filterNextPageLeaderboard = createAsyncThunk<\n  { results: PredictionUser[]; skip: number },\n  number,\n  { state: State }\n>('predictions/filterNextPageLeaderboard', async (skip, { getState }) => {\n  const state = getState()\n  const usersResponse = await getPredictionUsers({\n    skip,\n    orderBy: state.predictions.leaderboard.filters.orderBy,\n    where: { totalBets_gte: LEADERBOARD_MIN_ROUNDS_PLAYED, [`${state.predictions.leaderboard.filters.orderBy}_gt`]: 0 },\n  })\n\n  return { results: usersResponse.map(transformUserResponse), skip }\n})\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setLeaderboardFilter: (state, action: PayloadAction<Partial<LeaderboardFilter>>) => {\n      state.leaderboard.filters = {\n        ...state.leaderboard.filters,\n        ...action.payload,\n      }\n\n      // Anytime we filters change we need to reset back to page 1\n      state.leaderboard.skip = 0\n      state.leaderboard.hasMoreResults = true\n    },\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\n      state.status = action.payload\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\n      state.currentEpoch = action.payload\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n    markAsCollected: (state, action: PayloadAction<{ [key: string]: boolean }>) => {\n      state.claimableStatuses = { ...state.claimableStatuses, ...action.payload }\n    },\n  },\n  extraReducers: (builder) => {\n    // Leaderboard filter\n    builder.addCase(filterLeaderboard.pending, (state) => {\n      // Only mark as loading if we come from IDLE. This allows initialization.\n      if (state.leaderboard.loadingState === LeaderboardLoadingState.IDLE) {\n        state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\n      }\n    })\n    builder.addCase(filterLeaderboard.fulfilled, (state, action) => {\n      const { results } = action.payload\n\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.results = results\n\n      if (results.length < LEADERBOARD_RESULTS_PER_PAGE) {\n        state.leaderboard.hasMoreResults = false\n      }\n\n      // Populate address results to reduce calls\n      state.leaderboard.addressResults = {\n        ...state.leaderboard.addressResults,\n        ...results.reduce((accum, result) => {\n          return {\n            ...accum,\n            [result.id]: result,\n          }\n        }, {}),\n      }\n    })\n\n    // Leaderboard account result\n    builder.addCase(fetchAddressResult.pending, (state) => {\n      state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\n    })\n    builder.addCase(fetchAddressResult.fulfilled, (state, action) => {\n      const { account, data } = action.payload\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.addressResults[account] = data\n    })\n    builder.addCase(fetchAddressResult.rejected, (state, action) => {\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.addressResults[action.payload] = null\n    })\n\n    // Leaderboard next page\n    builder.addCase(filterNextPageLeaderboard.pending, (state) => {\n      state.leaderboard.loadingState = LeaderboardLoadingState.LOADING\n    })\n    builder.addCase(filterNextPageLeaderboard.fulfilled, (state, action) => {\n      const { results, skip } = action.payload\n\n      state.leaderboard.loadingState = LeaderboardLoadingState.IDLE\n      state.leaderboard.results = [...state.leaderboard.results, ...results]\n      state.leaderboard.skip = skip\n\n      if (results.length < LEADERBOARD_RESULTS_PER_PAGE) {\n        state.leaderboard.hasMoreResults = false\n      }\n    })\n\n    // Claimable statuses\n    builder.addCase(fetchClaimableStatuses.fulfilled, (state, action) => {\n      state.claimableStatuses = merge({}, state.claimableStatuses, action.payload)\n    })\n\n    // Ledger (bet) records\n    builder.addCase(fetchLedgerData.fulfilled, (state, action) => {\n      state.ledgers = merge({}, state.ledgers, action.payload)\n    })\n\n    // Get static market data\n    builder.addCase(fetchMarketData.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalSeconds, minBetAmount } = action.payload\n\n      // If the round has change add a new future round\n      if (state.currentEpoch !== currentEpoch) {\n        const newestRound = maxBy(Object.values(state.rounds), 'epoch')\n        const futureRound = makeFutureRoundResponse(\n          newestRound.epoch + 1,\n          newestRound.startTimestamp + intervalSeconds + ROUND_BUFFER,\n        )\n\n        state.rounds[futureRound.epoch] = futureRound\n      }\n\n      state.status = status\n      state.currentEpoch = currentEpoch\n      state.intervalSeconds = intervalSeconds\n      state.minBetAmount = minBetAmount\n    })\n\n    // Initialize predictions\n    builder.addCase(initializePredictions.fulfilled, (state, action) => {\n      const { status, currentEpoch, intervalSeconds, bufferSeconds, rounds, claimableStatuses, ledgers } =\n        action.payload\n      const futureRounds: ReduxNodeRound[] = []\n      const currentRound = rounds[currentEpoch]\n\n      for (let i = 1; i <= FUTURE_ROUND_COUNT; i++) {\n        futureRounds.push(makeFutureRoundResponse(currentEpoch + i, currentRound.startTimestamp + intervalSeconds * i))\n      }\n\n      return {\n        ...state,\n        status,\n        currentEpoch,\n        intervalSeconds,\n        bufferSeconds,\n        claimableStatuses,\n        ledgers,\n        rounds: merge({}, rounds, makeRoundData(futureRounds)),\n      }\n    })\n\n    // Get single round\n    builder.addCase(fetchRound.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, {\n        [action.payload.epoch.toString()]: action.payload,\n      })\n    })\n\n    // Get multiple rounds\n    builder.addCase(fetchRounds.fulfilled, (state, action) => {\n      state.rounds = merge({}, state.rounds, action.payload)\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.history[account] = merge([], state.history[account] ?? [], bets)\n    })\n\n    // History from the node\n    builder.addCase(fetchNodeHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchNodeHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n    })\n    builder.addCase(fetchNodeHistory.fulfilled, (state, action) => {\n      const { bets, claimableStatuses, page, totalHistory } = action.payload\n\n      state.isFetchingHistory = false\n      state.history = page === 1 ? bets : [...state.history, ...bets]\n      state.claimableStatuses = { ...state.claimableStatuses, ...claimableStatuses }\n      state.hasHistoryLoaded = state.history.length === totalHistory || bets.length === 0\n      state.totalHistory = totalHistory\n      state.currentHistoryPage = page\n    })\n  },\n})\n\n// Actions\nexport const {\n  setChartPaneState,\n  setCurrentEpoch,\n  setHistoryFilter,\n  setHistoryPaneState,\n  setPredictionStatus,\n  setLastOraclePrice,\n  markAsCollected,\n  setLeaderboardFilter,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511110000',\n    type: 'ifo',\n    title: 'Kalmar',\n    badge: 'ifo-kalm.svg',\n  },\n  {\n    id: '511100000',\n    type: 'ifo',\n    title: 'Hotcross',\n    badge: 'ifo-hotcross.svg',\n  },\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n  {\n    id: '513010001',\n    type: 'participation',\n    title: 'Syrup Soaker',\n    description: 'Took a dip in the early days of the Auto ZOLA Pool',\n    badge: 'syrup-soaker.svg',\n  },\n  {\n    id: '514010001',\n    type: 'participation',\n    title: 'Clairvoyant',\n    description: 'Played a round of Prediction before round 12,120',\n    badge: 'clairvoyant.svg',\n  },\n  {\n    id: '515010001',\n    type: 'participation',\n    title: 'Lottie',\n    description: 'Joined a round in the early days of Lottery V2',\n    badge: 'lottie.svg',\n  },\n  {\n    id: '515020001',\n    type: 'participation',\n    title: 'Lucky',\n    description: 'Won a round in the early days of Lottery V2',\n    badge: 'lucky.svg',\n  },\n  {\n    id: '515030001',\n    type: 'participation',\n    title: 'Baller',\n    description: 'Top 100 ticket buyer in the early days of Lottery V2',\n    badge: 'baller.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default achievementSlice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { CollectiblesState } from 'state/types'\nimport collections from 'config/constants/nfts/collections'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { ethers } from 'ethers'\n\nconst initialState: CollectiblesState = {\n  isInitialized: false,\n  isLoading: true,\n  data: {},\n}\n\ntype NftSourceItem = [number, string]\n\n// Thunks\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\n  'collectibles/fetchWalletNfts',\n  async (account) => {\n    // For each nft source get nft data\n    const nftSourcePromises = Object.keys(collections).map(async (nftSourceType) => {\n      const { address: addressObj } = collections[nftSourceType]\n      const address = getAddress(addressObj)\n      const contract = getErc721Contract(address)\n\n      const getTokenIdAndData = async (index: number) => {\n        try {\n          const tokenIdBn: ethers.BigNumber = await contract.tokenOfOwnerByIndex(account, index)\n          const tokenId = tokenIdBn.toNumber()\n\n          const walletNft = await getNftByTokenId(address, tokenId)\n          return [tokenId, walletNft.identifier]\n        } catch (error) {\n          console.error('getTokenIdAndData', error)\n          return null\n        }\n      }\n\n      const balanceOfResponse = await contract.balanceOf(account)\n      const balanceOf = balanceOfResponse.toNumber()\n\n      if (balanceOf === 0) {\n        return []\n      }\n\n      const nftDataFetchPromises = []\n\n      // For each index get the tokenId and data associated with it\n      for (let i = 0; i < balanceOf; i++) {\n        nftDataFetchPromises.push(getTokenIdAndData(i))\n      }\n\n      const nftData = await Promise.all(nftDataFetchPromises)\n      return nftData\n    })\n\n    const nftSourceData = await Promise.all(nftSourcePromises)\n\n    return nftSourceData.flat()\n  },\n)\n\nexport const collectiblesSlice = createSlice({\n  name: 'collectibles',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWalletNfts.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\n      state.isLoading = false\n      state.isInitialized = true\n      state.data = action.payload.reduce((accum, association) => {\n        if (!association) {\n          return accum\n        }\n\n        const [tokenId, identifier] = association as NftSourceItem\n\n        return {\n          ...accum,\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\n        }\n      }, {})\n    })\n  },\n})\n\nexport default collectiblesSlice.reducer\n","import request, { gql } from 'graphql-request'\nimport { SNAPSHOT_API, SNAPSHOT_VOTING_API } from 'config/constants/endpoints'\nimport { Proposal, ProposalState, Vote, VoteWhere } from 'state/types'\nimport { simpleRpcProvider } from 'utils/providers'\n\nexport const getProposals = async (first = 5, skip = 0, state = ProposalState.ACTIVE): Promise<Proposal[]> => {\n  const response: { proposals: Proposal[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposals($first: Int!, $skip: Int!, $state: String!) {\n        proposals(\n          first: $first\n          skip: $skip\n          orderBy: \"end\"\n          orderDirection: desc\n          where: { space_in: \"cake.eth\", state: $state }\n        ) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { first, skip, state },\n  )\n  return response.proposals\n}\n\nexport const getProposal = async (id: string): Promise<Proposal> => {\n  const response: { proposal: Proposal } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getProposal($id: String) {\n        proposal(id: $id) {\n          id\n          title\n          body\n          choices\n          start\n          end\n          snapshot\n          state\n          author\n          space {\n            id\n            name\n          }\n        }\n      }\n    `,\n    { id },\n  )\n  return response.proposal\n}\n\nexport const getVotes = async (first: number, skip: number, where: VoteWhere): Promise<Vote[]> => {\n  const response: { votes: Vote[] } = await request(\n    SNAPSHOT_API,\n    gql`\n      query getVotes($first: Int, $skip: Int, $where: VoteWhere) {\n        votes(first: $first, skip: $skip, where: $where) {\n          id\n          voter\n          created\n          choice\n          space {\n            id\n            name\n          }\n          proposal {\n            choices\n          }\n          metadata\n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.votes\n}\n\nexport const getVoteVerificationStatuses = async (\n  votes: Vote[],\n  block?: number,\n): Promise<{ [key: string]: boolean }> => {\n  const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n\n  const votesToVerify = votes.map((vote) => ({\n    address: vote.voter,\n    verificationHash: vote.metadata?.verificationHash,\n    total: vote.metadata?.votingPower,\n  }))\n  const response = await fetch(`${SNAPSHOT_VOTING_API}/verify`, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      block: blockNumber,\n      votes: votesToVerify,\n    }),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n  return votes.reduce((accum, vote) => {\n    return {\n      ...accum,\n      [vote.id]: data.data[vote.voter.toLowerCase()]?.isValid === true,\n    }\n  }, {})\n}\n\nexport const getAllVotes = async (proposalId: string, block?: number, votesPerChunk = 1000): Promise<Vote[]> => {\n  // const blockNumber = block || (await simpleRpcProvider.getBlockNumber())\n  return new Promise((resolve, reject) => {\n    let votes: Vote[] = []\n\n    const fetchVoteChunk = async (newSkip: number) => {\n      try {\n        const voteChunk = await getVotes(votesPerChunk, newSkip, { proposal: proposalId })\n\n        if (voteChunk.length === 0) {\n          resolve(votes)\n        } else {\n          votes = [...votes, ...voteChunk]\n          fetchVoteChunk(newSkip + votesPerChunk)\n        }\n      } catch (error) {\n        reject(error)\n      }\n    }\n\n    fetchVoteChunk(0)\n  })\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { merge } from 'lodash'\nimport { Proposal, ProposalState, VotingStateLoadingStatus, VotingState, Vote, State } from 'state/types'\nimport { getAllVotes, getProposal, getProposals, getVoteVerificationStatuses } from './helpers'\n\nconst initialState: VotingState = {\n  proposalLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  proposals: {},\n  voteLoadingStatus: VotingStateLoadingStatus.INITIAL,\n  votes: {},\n}\n\n// Thunks\nexport const fetchProposals = createAsyncThunk<Proposal[], { first?: number; skip?: number; state?: ProposalState }>(\n  'voting/fetchProposals',\n  async ({ first, skip = 0, state = ProposalState.ACTIVE }) => {\n    const response = await getProposals(first, skip, state)\n    return response\n  },\n)\n\nexport const fetchProposal = createAsyncThunk<Proposal, string>('voting/fetchProposal', async (proposalId) => {\n  const response = await getProposal(proposalId)\n  return response\n})\n\nexport const fetchVotes = createAsyncThunk<\n  { votes: Vote[]; proposalId: string },\n  { proposalId: string; block?: number }\n>('voting/fetchVotes', async ({ proposalId, block }) => {\n  const response = await getAllVotes(proposalId, block)\n  return { votes: response, proposalId }\n})\n\nexport const verifyVotes = createAsyncThunk<\n  { results: { [key: string]: boolean }; proposalId: string },\n  { proposalId: string; snapshot?: string },\n  { state: State }\n>('voting/verifyVotes', async ({ proposalId, snapshot }, { getState }) => {\n  const state = getState()\n  const proposalVotes = state.voting.votes[proposalId]\n  const response = await getVoteVerificationStatuses(proposalVotes, Number(snapshot))\n  return { results: response, proposalId }\n})\n\nexport const votingSlice = createSlice({\n  name: 'voting',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    // Verify Votes\n    builder.addCase(verifyVotes.fulfilled, (state, action) => {\n      const { proposalId, results } = action.payload\n\n      if (state.votes[proposalId]) {\n        state.votes[proposalId] = state.votes[proposalId].map((vote) => {\n          return {\n            ...vote,\n            _inValid: results[vote.id] === false,\n          }\n        })\n      }\n    })\n\n    // Fetch Proposals\n    builder.addCase(fetchProposals.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposals.fulfilled, (state, action) => {\n      const proposals = action.payload.reduce((accum, proposal) => {\n        return {\n          ...accum,\n          [proposal.id]: proposal,\n        }\n      }, {})\n\n      state.proposals = merge({}, state.proposals, proposals)\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Proposal\n    builder.addCase(fetchProposal.pending, (state) => {\n      state.proposalLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchProposal.fulfilled, (state, action) => {\n      state.proposals[action.payload.id] = action.payload\n      state.proposalLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n\n    // Fetch Votes\n    builder.addCase(fetchVotes.pending, (state) => {\n      state.voteLoadingStatus = VotingStateLoadingStatus.LOADING\n    })\n    builder.addCase(fetchVotes.fulfilled, (state, action) => {\n      const { votes, proposalId } = action.payload\n\n      state.votes = {\n        ...state.votes,\n        [proposalId]: votes,\n      }\n      state.voteLoadingStatus = VotingStateLoadingStatus.IDLE\n    })\n  },\n})\n\nexport default votingSlice.reducer\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport { InfoState } from './types'\nimport {\n  updateProtocolData,\n  updateProtocolChartData,\n  updateProtocolTransactions,\n  updatePoolData,\n  addPoolKeys,\n  updatePoolChartData,\n  updatePoolTransactions,\n  updateTokenData,\n  addTokenKeys,\n  addTokenPoolAddresses,\n  updateTokenChartData,\n  updateTokenPriceData,\n  updateTokenTransactions,\n} from './actions'\n\nconst initialState: InfoState = {\n  protocol: {\n    overview: undefined,\n    chartData: undefined,\n    transactions: undefined,\n  },\n  pools: { byAddress: {} },\n  tokens: { byAddress: {} },\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    // Protocol actions\n    .addCase(updateProtocolData, (state, { payload: { protocolData } }) => {\n      state.protocol.overview = protocolData\n    })\n    .addCase(updateProtocolChartData, (state, { payload: { chartData } }) => {\n      state.protocol.chartData = chartData\n    })\n    .addCase(updateProtocolTransactions, (state, { payload: { transactions } }) => {\n      state.protocol.transactions = transactions\n    })\n    // Pools actions\n    .addCase(updatePoolData, (state, { payload: { pools } }) => {\n      pools.forEach((poolData) => {\n        state.pools.byAddress[poolData.address] = {\n          ...state.pools.byAddress[poolData.address],\n          data: poolData,\n        }\n      })\n    })\n    .addCase(addPoolKeys, (state, { payload: { poolAddresses } }) => {\n      poolAddresses.forEach((address) => {\n        if (!state.pools.byAddress[address]) {\n          state.pools.byAddress[address] = {\n            data: undefined,\n            chartData: undefined,\n            transactions: undefined,\n          }\n        }\n      })\n    })\n    .addCase(updatePoolChartData, (state, { payload: { poolAddress, chartData } }) => {\n      state.pools.byAddress[poolAddress] = { ...state.pools.byAddress[poolAddress], chartData }\n    })\n    .addCase(updatePoolTransactions, (state, { payload: { poolAddress, transactions } }) => {\n      state.pools.byAddress[poolAddress] = { ...state.pools.byAddress[poolAddress], transactions }\n    })\n    // Tokens actions\n    .addCase(updateTokenData, (state, { payload: { tokens } }) => {\n      tokens.forEach((tokenData) => {\n        state.tokens.byAddress[tokenData.address] = {\n          ...state.tokens.byAddress[tokenData.address],\n          data: tokenData,\n        }\n      })\n    })\n    .addCase(addTokenKeys, (state, { payload: { tokenAddresses } }) => {\n      tokenAddresses.forEach((address) => {\n        if (!state.tokens.byAddress[address]) {\n          state.tokens.byAddress[address] = {\n            poolAddresses: undefined,\n            data: undefined,\n            chartData: undefined,\n            priceData: {},\n            transactions: undefined,\n          }\n        }\n      })\n    })\n    .addCase(addTokenPoolAddresses, (state, { payload: { tokenAddress, poolAddresses } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], poolAddresses }\n    })\n    .addCase(updateTokenChartData, (state, { payload: { tokenAddress, chartData } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], chartData }\n    })\n    .addCase(updateTokenTransactions, (state, { payload: { tokenAddress, transactions } }) => {\n      state.tokens.byAddress[tokenAddress] = { ...state.tokens.byAddress[tokenAddress], transactions }\n    })\n    .addCase(\n      updateTokenPriceData,\n      (state, { payload: { tokenAddress, secondsInterval, priceData, oldestFetchedTimestamp } }) => {\n        state.tokens.byAddress[tokenAddress] = {\n          ...state.tokens.byAddress[tokenAddress],\n          priceData: {\n            ...state.tokens.byAddress[tokenAddress].priceData,\n            [secondsInterval]: priceData,\n            oldestFetchedTimestamp,\n          },\n        }\n      },\n    ),\n)\n","import { createAction } from '@reduxjs/toolkit'\n\n// fired once when the app reloads but before the app renders\n// allows any updates to be applied to store data loaded from localStorage\nexport const updateVersion = createAction<void>('global/updateVersion')\n\nexport default updateVersion\n","import { createReducer } from '@reduxjs/toolkit'\nimport { SerializedToken } from 'config/constants/types'\nimport { DEFAULT_DEADLINE_FROM_NOW, INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\nimport { updateVersion } from '../global/actions'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  addWatchlistPool,\n  addWatchlistToken,\n  FarmStakedOnly,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  muteAudio,\n  toggleTheme,\n  unmuteAudio,\n  updateGasPrice,\n  updateUserDeadline,\n  updateUserExpertMode,\n  updateUserFarmStakedOnly,\n  updateUserFarmsViewMode,\n  updateUserPoolStakedOnly,\n  updateUserPoolsViewMode,\n  updateUserSingleHopOnly,\n  updateUserSlippageTolerance,\n  ViewMode,\n  updateUserPredictionAcceptedRisk,\n  updateUserPredictionChartDisclaimerShow,\n  updateUserUsernameVisibility,\n  updateUserExpertModeAcknowledgementShow,\n} from './actions'\nimport { GAS_PRICE_GWEI } from './hooks/helpers'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userExpertMode: boolean\n\n  // only allow swaps on direct pairs\n  userSingleHopOnly: boolean\n\n  // user defined slippage tolerance in bips, used in all txns\n  userSlippageTolerance: number\n\n  // deadline set by user in minutes, used in all txns\n  userDeadline: number\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  timestamp: number\n  audioPlay: boolean\n  isDark: boolean\n  userFarmStakedOnly: FarmStakedOnly\n  userPoolStakedOnly: boolean\n  userPoolsViewMode: ViewMode\n  userFarmsViewMode: ViewMode\n  userPredictionAcceptedRisk: boolean\n  userPredictionChartDisclaimerShow: boolean\n  userExpertModeAcknowledgementShow: boolean\n  userUsernameVisibility: boolean\n  gasPrice: string\n  watchlistTokens: string[]\n  watchlistPools: string[]\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  userExpertMode: false,\n  userSingleHopOnly: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  audioPlay: true,\n  isDark: false,\n  userFarmStakedOnly: FarmStakedOnly.ON_FINISHED,\n  userPoolStakedOnly: false,\n  userPoolsViewMode: ViewMode.TABLE,\n  userFarmsViewMode: ViewMode.TABLE,\n  userPredictionAcceptedRisk: false,\n  userPredictionChartDisclaimerShow: true,\n  userExpertModeAcknowledgementShow: true,\n  userUsernameVisibility: false,\n  gasPrice: GAS_PRICE_GWEI.default,\n  watchlistTokens: [],\n  watchlistPools: [],\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(updateVersion, (state) => {\n      // slippage isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userSlippageTolerance !== 'number') {\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\n      }\n\n      // deadline isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userDeadline !== 'number') {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSingleHopOnly, (state, action) => {\n      state.userSingleHopOnly = action.payload.userSingleHopOnly\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      if (!state.tokens) {\n        state.tokens = {}\n      }\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const { chainId } = serializedPair.token0\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(muteAudio, (state) => {\n      state.audioPlay = false\n    })\n    .addCase(unmuteAudio, (state) => {\n      state.audioPlay = true\n    })\n    .addCase(toggleTheme, (state) => {\n      state.isDark = !state.isDark\n    })\n    .addCase(updateUserFarmStakedOnly, (state, { payload: { userFarmStakedOnly } }) => {\n      state.userFarmStakedOnly = userFarmStakedOnly\n    })\n    .addCase(updateUserPoolStakedOnly, (state, { payload: { userPoolStakedOnly } }) => {\n      state.userPoolStakedOnly = userPoolStakedOnly\n    })\n    .addCase(updateUserPoolsViewMode, (state, { payload: { userPoolsViewMode } }) => {\n      state.userPoolsViewMode = userPoolsViewMode\n    })\n    .addCase(updateUserFarmsViewMode, (state, { payload: { userFarmsViewMode } }) => {\n      state.userFarmsViewMode = userFarmsViewMode\n    })\n    .addCase(updateUserPredictionAcceptedRisk, (state, { payload: { userAcceptedRisk } }) => {\n      state.userPredictionAcceptedRisk = userAcceptedRisk\n    })\n    .addCase(updateUserPredictionChartDisclaimerShow, (state, { payload: { userShowDisclaimer } }) => {\n      state.userPredictionChartDisclaimerShow = userShowDisclaimer\n    })\n    .addCase(updateUserExpertModeAcknowledgementShow, (state, { payload: { userExpertModeAcknowledgementShow } }) => {\n      state.userExpertModeAcknowledgementShow = userExpertModeAcknowledgementShow\n    })\n    .addCase(updateUserUsernameVisibility, (state, { payload: { userUsernameVisibility } }) => {\n      state.userUsernameVisibility = userUsernameVisibility\n    })\n    .addCase(updateGasPrice, (state, action) => {\n      state.gasPrice = action.payload.gasPrice\n    })\n    .addCase(addWatchlistToken, (state, { payload: { address } }) => {\n      // state.watchlistTokens can be undefined for pre-loaded localstorage user state\n      const tokenWatchlist = state.watchlistTokens ?? []\n      if (!tokenWatchlist.includes(address)) {\n        state.watchlistTokens = [...tokenWatchlist, address]\n      } else {\n        // Remove token from watchlist\n        const newTokens = state.watchlistTokens.filter((x) => x !== address)\n        state.watchlistTokens = newTokens\n      }\n    })\n    .addCase(addWatchlistPool, (state, { payload: { address } }) => {\n      // state.watchlistPools can be undefined for pre-loaded localstorage user state\n      const poolsWatchlist = state.watchlistPools ?? []\n      if (!poolsWatchlist.includes(address)) {\n        state.watchlistPools = [...poolsWatchlist, address]\n      } else {\n        // Remove pool from watchlist\n        const newPools = state.watchlistPools.filter((x) => x !== address)\n        state.watchlistPools = newPools\n      }\n    }),\n)\n","/* eslint-disable no-param-reassign */\nimport { createReducer } from '@reduxjs/toolkit'\nimport {\n  addTransaction,\n  checkedTransaction,\n  clearAllTransactions,\n  finalizeTransaction,\n  SerializableTransactionReceipt,\n} from './actions'\n\nconst now = () => new Date().getTime()\n\nexport interface TransactionDetails {\n  hash: string\n  approval?: { tokenAddress: string; spender: string }\n  summary?: string\n  claim?: { recipient: string }\n  receipt?: SerializableTransactionReceipt\n  lastCheckedBlockNumber?: number\n  addedTime: number\n  confirmedTime?: number\n  from: string\n}\n\nexport interface TransactionState {\n  [chainId: number]: {\n    [txHash: string]: TransactionDetails\n  }\n}\n\nexport const initialState: TransactionState = {}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addTransaction, (transactions, { payload: { chainId, from, hash, approval, summary, claim } }) => {\n      if (transactions[chainId]?.[hash]) {\n        throw Error('Attempted to add existing transaction.')\n      }\n      const txs = transactions[chainId] ?? {}\n      txs[hash] = { hash, approval, summary, claim, from, addedTime: now() }\n      transactions[chainId] = txs\n    })\n    .addCase(clearAllTransactions, (transactions, { payload: { chainId } }) => {\n      if (!transactions[chainId]) return\n      transactions[chainId] = {}\n    })\n    .addCase(checkedTransaction, (transactions, { payload: { chainId, hash, blockNumber } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      if (!tx.lastCheckedBlockNumber) {\n        tx.lastCheckedBlockNumber = blockNumber\n      } else {\n        tx.lastCheckedBlockNumber = Math.max(blockNumber, tx.lastCheckedBlockNumber)\n      }\n    })\n    .addCase(finalizeTransaction, (transactions, { payload: { hash, chainId, receipt } }) => {\n      const tx = transactions[chainId]?.[hash]\n      if (!tx) {\n        return\n      }\n      tx.receipt = receipt\n      tx.confirmedTime = now()\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\n\nexport interface SwapState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly [Field.INPUT]: {\n    readonly currencyId: string | undefined\n  }\n  readonly [Field.OUTPUT]: {\n    readonly currencyId: string | undefined\n  }\n  // the typed recipient address or ENS name, or null if swap should go to sender\n  readonly recipient: string | null\n}\n\nconst initialState: SwapState = {\n  independentField: Field.INPUT,\n  typedValue: '',\n  [Field.INPUT]: {\n    currencyId: '',\n  },\n  [Field.OUTPUT]: {\n    currencyId: '',\n  },\n  recipient: null,\n}\n\nexport default createReducer<SwapState>(initialState, (builder) =>\n  builder\n    .addCase(\n      replaceSwapState,\n      (state, { payload: { typedValue, recipient, field, inputCurrencyId, outputCurrencyId } }) => {\n        return {\n          [Field.INPUT]: {\n            currencyId: inputCurrencyId,\n          },\n          [Field.OUTPUT]: {\n            currencyId: outputCurrencyId,\n          },\n          independentField: field,\n          typedValue,\n          recipient,\n        }\n      },\n    )\n    .addCase(selectCurrency, (state, { payload: { currencyId, field } }) => {\n      const otherField = field === Field.INPUT ? Field.OUTPUT : Field.INPUT\n      if (currencyId === state[otherField].currencyId) {\n        // the case where we have to swap the order\n        return {\n          ...state,\n          independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n          [field]: { currencyId },\n          [otherField]: { currencyId: state[field].currencyId },\n        }\n      }\n      // the normal case\n      return {\n        ...state,\n        [field]: { currencyId },\n      }\n    })\n    .addCase(switchCurrencies, (state) => {\n      return {\n        ...state,\n        independentField: state.independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT,\n        [Field.INPUT]: { currencyId: state[Field.OUTPUT].currencyId },\n        [Field.OUTPUT]: { currencyId: state[Field.INPUT].currencyId },\n      }\n    })\n    .addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n      }\n    })\n    .addCase(setRecipient, (state, { payload: { recipient } }) => {\n      state.recipient = recipient\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, resetMintState, typeInput } from './actions'\n\nexport interface MintState {\n  readonly independentField: Field\n  readonly typedValue: string\n  readonly otherTypedValue: string // for the case when there's no liquidity\n}\n\nconst initialState: MintState = {\n  independentField: Field.CURRENCY_A,\n  typedValue: '',\n  otherTypedValue: '',\n}\n\nexport default createReducer<MintState>(initialState, (builder) =>\n  builder\n    .addCase(resetMintState, () => initialState)\n    .addCase(typeInput, (state, { payload: { field, typedValue, noLiquidity } }) => {\n      if (noLiquidity) {\n        // they're typing into the field they've last typed in\n        if (field === state.independentField) {\n          return {\n            ...state,\n            independentField: field,\n            typedValue,\n          }\n        }\n        // they're typing into a new field, store the other value\n\n        return {\n          ...state,\n          independentField: field,\n          typedValue,\n          otherTypedValue: state.typedValue,\n        }\n      }\n      return {\n        ...state,\n        independentField: field,\n        typedValue,\n        otherTypedValue: '',\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\n// eslint-disable-next-line import/no-unresolved\nimport { TokenList } from '@uniswap/token-lists/dist/types'\nimport { DEFAULT_ACTIVE_LIST_URLS, UNSUPPORTED_LIST_URLS, DEFAULT_LIST_OF_LISTS } from '../../config/constants/lists'\n\nimport { updateVersion } from '../global/actions'\nimport { acceptListUpdate, addList, fetchTokenList, removeList, enableList, disableList } from './actions'\n\nexport interface ListsState {\n  readonly byUrl: {\n    readonly [url: string]: {\n      readonly current: TokenList | null\n      readonly pendingUpdate: TokenList | null\n      readonly loadingRequestId: string | null\n      readonly error: string | null\n    }\n  }\n  // this contains the default list of lists from the last time the updateVersion was called, i.e. the app was reloaded\n  readonly lastInitializedDefaultListOfLists?: string[]\n\n  // currently active lists\n  readonly activeListUrls: string[] | undefined\n}\n\ntype ListState = ListsState['byUrl'][string]\n\nconst NEW_LIST_STATE: ListState = {\n  error: null,\n  current: null,\n  loadingRequestId: null,\n  pendingUpdate: null,\n}\n\ntype Mutable<T> = { -readonly [P in keyof T]: T[P] extends ReadonlyArray<infer U> ? U[] : T[P] }\n\nconst initialState: ListsState = {\n  lastInitializedDefaultListOfLists: DEFAULT_LIST_OF_LISTS,\n  byUrl: {\n    ...DEFAULT_LIST_OF_LISTS.concat(...UNSUPPORTED_LIST_URLS).reduce<Mutable<ListsState['byUrl']>>((memo, listUrl) => {\n      memo[listUrl] = NEW_LIST_STATE\n      return memo\n    }, {}),\n  },\n  activeListUrls: DEFAULT_ACTIVE_LIST_URLS,\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(fetchTokenList.pending, (state, { payload: { requestId, url } }) => {\n      state.byUrl[url] = {\n        current: null,\n        pendingUpdate: null,\n        ...state.byUrl[url],\n        loadingRequestId: requestId,\n        error: null,\n      }\n    })\n    .addCase(fetchTokenList.fulfilled, (state, { payload: { requestId, tokenList, url } }) => {\n      const current = state.byUrl[url]?.current\n      const loadingRequestId = state.byUrl[url]?.loadingRequestId\n\n      // no-op if update does nothing\n      if (current) {\n        const upgradeType = getVersionUpgrade(current.version, tokenList.version)\n\n        if (upgradeType === VersionUpgrade.NONE) return\n        if (loadingRequestId === null || loadingRequestId === requestId) {\n          state.byUrl[url] = {\n            ...state.byUrl[url],\n            loadingRequestId: null,\n            error: null,\n            current,\n            pendingUpdate: tokenList,\n          }\n        }\n      } else {\n        // activate if on default active\n        if (DEFAULT_ACTIVE_LIST_URLS.includes(url)) {\n          state.activeListUrls?.push(url)\n        }\n\n        state.byUrl[url] = {\n          ...state.byUrl[url],\n          loadingRequestId: null,\n          error: null,\n          current: tokenList,\n          pendingUpdate: null,\n        }\n      }\n    })\n    .addCase(fetchTokenList.rejected, (state, { payload: { url, requestId, errorMessage } }) => {\n      if (state.byUrl[url]?.loadingRequestId !== requestId) {\n        // no-op since it's not the latest request\n        return\n      }\n\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        loadingRequestId: null,\n        error: errorMessage,\n        current: null,\n        pendingUpdate: null,\n      }\n    })\n    .addCase(addList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n    })\n    .addCase(removeList, (state, { payload: url }) => {\n      if (state.byUrl[url]) {\n        delete state.byUrl[url]\n      }\n      // remove list from active urls if needed\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(enableList, (state, { payload: url }) => {\n      if (!state.byUrl[url]) {\n        state.byUrl[url] = NEW_LIST_STATE\n      }\n\n      if (state.activeListUrls && !state.activeListUrls.includes(url)) {\n        state.activeListUrls.push(url)\n      }\n\n      if (!state.activeListUrls) {\n        state.activeListUrls = [url]\n      }\n    })\n    .addCase(disableList, (state, { payload: url }) => {\n      if (state.activeListUrls && state.activeListUrls.includes(url)) {\n        state.activeListUrls = state.activeListUrls.filter((u) => u !== url)\n      }\n    })\n    .addCase(acceptListUpdate, (state, { payload: url }) => {\n      if (!state.byUrl[url]?.pendingUpdate) {\n        throw new Error('accept list update called without pending update')\n      }\n      state.byUrl[url] = {\n        ...state.byUrl[url],\n        pendingUpdate: null,\n        current: state.byUrl[url].pendingUpdate,\n      }\n    })\n    .addCase(updateVersion, (state) => {\n      // state loaded from localStorage, but new lists have never been initialized\n      if (!state.lastInitializedDefaultListOfLists) {\n        state.byUrl = initialState.byUrl\n        state.activeListUrls = initialState.activeListUrls\n      } else if (state.lastInitializedDefaultListOfLists) {\n        const lastInitializedSet = state.lastInitializedDefaultListOfLists.reduce<Set<string>>(\n          (s, l) => s.add(l),\n          new Set(),\n        )\n        const newListOfListsSet = DEFAULT_LIST_OF_LISTS.reduce<Set<string>>((s, l) => s.add(l), new Set())\n\n        DEFAULT_LIST_OF_LISTS.forEach((listUrl) => {\n          if (!lastInitializedSet.has(listUrl)) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n        })\n\n        state.lastInitializedDefaultListOfLists.forEach((listUrl) => {\n          if (!newListOfListsSet.has(listUrl)) {\n            delete state.byUrl[listUrl]\n          }\n        })\n      }\n\n      state.lastInitializedDefaultListOfLists = DEFAULT_LIST_OF_LISTS\n\n      // if no active lists, activate defaults\n      if (!state.activeListUrls) {\n        state.activeListUrls = DEFAULT_ACTIVE_LIST_URLS\n\n        // for each list on default list, initialize if needed\n        DEFAULT_ACTIVE_LIST_URLS.map((listUrl: string) => {\n          if (!state.byUrl[listUrl]) {\n            state.byUrl[listUrl] = NEW_LIST_STATE\n          }\n          return true\n        })\n      }\n    }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport { Field, typeInput } from './actions'\n\nexport interface BurnState {\n  readonly independentField: Field\n  readonly typedValue: string\n}\n\nconst initialState: BurnState = {\n  independentField: Field.LIQUIDITY_PERCENT,\n  typedValue: '0',\n}\n\nexport default createReducer<BurnState>(initialState, (builder) =>\n  builder.addCase(typeInput, (state, { payload: { field, typedValue } }) => {\n    return {\n      ...state,\n      independentField: field,\n      typedValue,\n    }\n  }),\n)\n","import { createReducer } from '@reduxjs/toolkit'\nimport {\n  addMulticallListeners,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  removeMulticallListeners,\n  toCallKey,\n  updateMulticallResults,\n} from './actions'\n\nexport interface MulticallState {\n  callListeners?: {\n    // on a per-chain basis\n    [chainId: number]: {\n      // stores for each call key the listeners' preferences\n      [callKey: string]: {\n        // stores how many listeners there are per each blocks per fetch preference\n        [blocksPerFetch: number]: number\n      }\n    }\n  }\n\n  callResults: {\n    [chainId: number]: {\n      [callKey: string]: {\n        data?: string | null\n        blockNumber?: number\n        fetchingBlockNumber?: number\n      }\n    }\n  }\n}\n\nconst initialState: MulticallState = {\n  callResults: {},\n}\n\nexport default createReducer(initialState, (builder) =>\n  builder\n    .addCase(addMulticallListeners, (state, { payload: { calls, chainId, options: { blocksPerFetch = 1 } = {} } }) => {\n      const listeners: MulticallState['callListeners'] = state.callListeners\n        ? state.callListeners\n        : (state.callListeners = {})\n      listeners[chainId] = listeners[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        listeners[chainId][callKey] = listeners[chainId][callKey] ?? {}\n        listeners[chainId][callKey][blocksPerFetch] = (listeners[chainId][callKey][blocksPerFetch] ?? 0) + 1\n      })\n    })\n    .addCase(\n      removeMulticallListeners,\n      (state, { payload: { chainId, calls, options: { blocksPerFetch = 1 } = {} } }) => {\n        const listeners: MulticallState['callListeners'] = state.callListeners\n          ? state.callListeners\n          : (state.callListeners = {})\n\n        if (!listeners[chainId]) return\n        calls.forEach((call) => {\n          const callKey = toCallKey(call)\n          if (!listeners[chainId][callKey]) return\n          if (!listeners[chainId][callKey][blocksPerFetch]) return\n\n          if (listeners[chainId][callKey][blocksPerFetch] === 1) {\n            delete listeners[chainId][callKey][blocksPerFetch]\n          } else {\n            listeners[chainId][callKey][blocksPerFetch]--\n          }\n        })\n      },\n    )\n    .addCase(fetchingMulticallResults, (state, { payload: { chainId, fetchingBlockNumber, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) {\n          state.callResults[chainId][callKey] = {\n            fetchingBlockNumber,\n          }\n        } else {\n          if ((current.fetchingBlockNumber ?? 0) >= fetchingBlockNumber) return\n          state.callResults[chainId][callKey].fetchingBlockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(errorFetchingMulticallResults, (state, { payload: { fetchingBlockNumber, chainId, calls } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      calls.forEach((call) => {\n        const callKey = toCallKey(call)\n        const current = state.callResults[chainId][callKey]\n        if (!current) return // only should be dispatched if we are already fetching\n        if (current.fetchingBlockNumber === fetchingBlockNumber) {\n          delete current.fetchingBlockNumber\n          current.data = null\n          current.blockNumber = fetchingBlockNumber\n        }\n      })\n    })\n    .addCase(updateMulticallResults, (state, { payload: { chainId, results, blockNumber } }) => {\n      state.callResults[chainId] = state.callResults[chainId] ?? {}\n      Object.keys(results).forEach((callKey) => {\n        const current = state.callResults[chainId][callKey]\n        if ((current?.blockNumber ?? 0) > blockNumber) return\n        state.callResults[chainId][callKey] = {\n          data: results[callKey],\n          blockNumber,\n        }\n      })\n    }),\n)\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { save, load } from 'redux-localstorage-simple'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport collectiblesReducer from './collectibles'\nimport votingReducer from './voting'\nimport lotteryReducer from './lottery'\nimport infoReducer from './info'\nimport { updateVersion } from './global/actions'\nimport user from './user/reducer'\nimport transactions from './transactions/reducer'\nimport swap from './swap/reducer'\nimport mint from './mint/reducer'\nimport lists from './lists/reducer'\nimport burn from './burn/reducer'\nimport multicall from './multicall/reducer'\n\nconst PERSISTED_KEYS: string[] = ['user', 'transactions', 'lists', 'profile', 'collectibles']\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    collectibles: collectiblesReducer,\n    voting: votingReducer,\n    lottery: lotteryReducer,\n    info: infoReducer,\n\n    // Exchange\n    user,\n    transactions,\n    swap,\n    mint,\n    burn,\n    multicall,\n    lists,\n  },\n  middleware: [...getDefaultMiddleware({ thunk: true }), save({ states: PERSISTED_KEYS })],\n  preloadedState: load({ states: PERSISTED_KEYS }),\n})\n\nstore.dispatch(updateVersion())\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport type AppState = ReturnType<typeof store.getState>\nexport const useAppDispatch = () => useDispatch()\n\nexport default store\n","import { Token, TokenAmount } from '@wagyu-swap/sdk'\nimport { useMemo } from 'react'\n\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\nfunction useTokenAllowance(token?: Token, owner?: string, spender?: string): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const inputs = useMemo(() => [owner, spender], [owner, spender])\n  const allowance = useSingleCallResult(contract, 'allowance', inputs).result\n\n  return useMemo(\n    () => (token && allowance ? new TokenAmount(token, allowance.toString()) : undefined),\n    [token, allowance],\n  )\n}\n\nexport default useTokenAllowance\n","import { MaxUint256 } from '@ethersproject/constants'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Trade, TokenAmount, CurrencyAmount, ETHER } from '@wagyu-swap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { ROUTER_ADDRESS } from '../config/constants'\nimport useTokenAllowance from './useTokenAllowance'\nimport { Field } from '../state/swap/actions'\nimport { useTransactionAdder, useHasPendingApproval } from '../state/transactions/hooks'\nimport { computeSlippageAdjustedAmounts } from '../utils/prices'\nimport { calculateGasMargin } from '../utils'\nimport { useTokenContract } from './useContract'\nimport { useCallWithGasPrice } from './useCallWithGasPrice'\n\nexport enum ApprovalState {\n  UNKNOWN,\n  NOT_APPROVED,\n  PENDING,\n  APPROVED,\n}\n\n// returns a variable indicating the state of the approval and a function which approves if necessary or early returns\nexport function useApproveCallback(\n  amountToApprove?: CurrencyAmount,\n  spender?: string,\n): [ApprovalState, () => Promise<void>] {\n  const { account } = useActiveWeb3React()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const token = amountToApprove instanceof TokenAmount ? amountToApprove.token : undefined\n  const currentAllowance = useTokenAllowance(token, account ?? undefined, spender)\n  const pendingApproval = useHasPendingApproval(token?.address, spender)\n\n  // check the current approval status\n  const approvalState: ApprovalState = useMemo(() => {\n    if (!amountToApprove || !spender) return ApprovalState.UNKNOWN\n    if (amountToApprove.currency === ETHER) return ApprovalState.APPROVED\n    // we might not have enough data to know whether or not we need to approve\n    if (!currentAllowance) return ApprovalState.UNKNOWN\n\n    // amountToApprove will be defined if currentAllowance is\n    return currentAllowance.lessThan(amountToApprove)\n      ? pendingApproval\n        ? ApprovalState.PENDING\n        : ApprovalState.NOT_APPROVED\n      : ApprovalState.APPROVED\n  }, [amountToApprove, currentAllowance, pendingApproval, spender])\n\n  const tokenContract = useTokenContract(token?.address)\n  const addTransaction = useTransactionAdder()\n\n  const approve = useCallback(async (): Promise<void> => {\n    if (approvalState !== ApprovalState.NOT_APPROVED) {\n      console.error('approve was called unnecessarily')\n      return\n    }\n    if (!token) {\n      console.error('no token')\n      return\n    }\n\n    if (!tokenContract) {\n      console.error('tokenContract is null')\n      return\n    }\n\n    if (!amountToApprove) {\n      console.error('missing amount to approve')\n      return\n    }\n\n    if (!spender) {\n      console.error('no spender')\n      return\n    }\n\n    let useExact = false\n\n    const estimatedGas = await tokenContract.estimateGas.approve(spender, MaxUint256).catch(() => {\n      // general fallback for tokens who restrict approval amounts\n      useExact = true\n      return tokenContract.estimateGas.approve(spender, amountToApprove.raw.toString())\n    })\n\n    // eslint-disable-next-line consistent-return\n    return callWithGasPrice(\n      tokenContract,\n      'approve',\n      [spender, useExact ? amountToApprove.raw.toString() : MaxUint256],\n      {\n        gasLimit: calculateGasMargin(estimatedGas),\n      },\n    )\n      .then((response: TransactionResponse) => {\n        addTransaction(response, {\n          summary: `Approve ${amountToApprove.currency.symbol}`,\n          approval: { tokenAddress: token.address, spender },\n        })\n      })\n      .catch((error: Error) => {\n        console.error('Failed to approve token', error)\n        throw error\n      })\n  }, [approvalState, token, tokenContract, amountToApprove, spender, addTransaction, callWithGasPrice])\n\n  return [approvalState, approve]\n}\n\n// wraps useApproveCallback in the context of a swap\nexport function useApproveCallbackFromTrade(trade?: Trade, allowedSlippage = 0) {\n  const amountToApprove = useMemo(\n    () => (trade ? computeSlippageAdjustedAmounts(trade, allowedSlippage)[Field.INPUT] : undefined),\n    [trade, allowedSlippage],\n  )\n\n  return useApproveCallback(amountToApprove, ROUTER_ADDRESS)\n}\n","// const PANCAKE_EXTENDED = 'https://tokens.pancakeswap.finance/pancakeswap-extended.json'\n// const PANCAKE_TOP100 = 'https://tokens.pancakeswap.finance/pancakeswap-top-100.json'\n// const ZOLA_EXTENDED = 'https://unpkg.com/quickswap-default-token-list@1.2.38/build/quickswap-default.tokenlist.json'\nexport const UNSUPPORTED_LIST_URLS: string[] = []\n\n// lower index == higher priority for token import\nexport const DEFAULT_LIST_OF_LISTS: string[] = [\n  // PANCAKE_TOP100,\n  // PANCAKE_EXTENDED,\n  //  ZOLA_EXTENDED,\n  ...UNSUPPORTED_LIST_URLS, // need to load unsupported tokens as well\n]\n\n// default lists to be 'active' aka searched across\nexport const DEFAULT_ACTIVE_LIST_URLS: string[] = []\n","import { ChainId, Token } from '@wagyu-swap/sdk'\nimport { Tags, TokenInfo, TokenList } from '@uniswap/token-lists'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DEFAULT_LIST_OF_LISTS } from 'config/constants/lists'\nimport { AppState } from '../index'\nimport DEFAULT_TOKEN_LIST from '../../config/constants/tokenLists/pancake-default.tokenlist.json'\nimport { UNSUPPORTED_LIST_URLS } from '../../config/constants/lists'\nimport UNSUPPORTED_TOKEN_LIST from '../../config/constants/tokenLists/pancake-unsupported.tokenlist.json'\n\ntype TagDetails = Tags[keyof Tags]\nexport interface TagInfo extends TagDetails {\n  id: string\n}\n\n// use ordering of default list of lists to assign priority\nfunction sortByListPriority(urlA: string, urlB: string) {\n  const first = DEFAULT_LIST_OF_LISTS.includes(urlA) ? DEFAULT_LIST_OF_LISTS.indexOf(urlA) : Number.MAX_SAFE_INTEGER\n  const second = DEFAULT_LIST_OF_LISTS.includes(urlB) ? DEFAULT_LIST_OF_LISTS.indexOf(urlB) : Number.MAX_SAFE_INTEGER\n\n  // need reverse order to make sure mapping includes top priority last\n  if (first < second) return 1\n  if (first > second) return -1\n  return 0\n}\n\n/**\n * Token instances created from token info.\n */\nexport class WrappedTokenInfo extends Token {\n  public readonly tokenInfo: TokenInfo\n\n  public readonly tags: TagInfo[]\n\n  constructor(tokenInfo: TokenInfo, tags: TagInfo[]) {\n    super(tokenInfo.chainId, tokenInfo.address, tokenInfo.decimals, tokenInfo.symbol, tokenInfo.name)\n    this.tokenInfo = tokenInfo\n    this.tags = tags\n  }\n\n  public get logoURI(): string | undefined {\n    return this.tokenInfo.logoURI\n  }\n}\n\nexport type TokenAddressMap = Readonly<\n  { [chainId in ChainId]: Readonly<{ [tokenAddress: string]: { token: WrappedTokenInfo; list: TokenList } }> }\n>\n\n/**\n * An empty result, useful as a default.\n */\nconst EMPTY_LIST: TokenAddressMap = {\n  [ChainId.MAINNET]: {},\n  [ChainId.TESTNET]: {},\n}\n\nconst listCache: WeakMap<TokenList, TokenAddressMap> | null =\n  typeof WeakMap !== 'undefined' ? new WeakMap<TokenList, TokenAddressMap>() : null\n\nexport function listToTokenMap(list: TokenList): TokenAddressMap {\n  const result = listCache?.get(list)\n  if (result) return result\n\n  const map = list.tokens.reduce<TokenAddressMap>(\n    (tokenMap, tokenInfo) => {\n      const tags: TagInfo[] =\n        tokenInfo.tags\n          ?.map((tagId) => {\n            if (!list.tags?.[tagId]) return undefined\n            return { ...list.tags[tagId], id: tagId }\n          })\n          ?.filter((x): x is TagInfo => Boolean(x)) ?? []\n      const token = new WrappedTokenInfo(tokenInfo, tags)\n      if (tokenMap[token.chainId][token.address] !== undefined) throw Error('Duplicate tokens.')\n      return {\n        ...tokenMap,\n        [token.chainId]: {\n          ...tokenMap[token.chainId],\n          [token.address]: {\n            token,\n            list,\n          },\n        },\n      }\n    },\n    { ...EMPTY_LIST },\n  )\n  listCache?.set(list, map)\n  return map\n}\n\nexport function useAllLists(): {\n  readonly [url: string]: {\n    readonly current: TokenList | null\n    readonly pendingUpdate: TokenList | null\n    readonly loadingRequestId: string | null\n    readonly error: string | null\n  }\n} {\n  return useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n}\n\nfunction combineMaps(map1: TokenAddressMap, map2: TokenAddressMap): TokenAddressMap {\n  return {\n    [ChainId.MAINNET]: { ...map1[ChainId.MAINNET], ...map2[ChainId.MAINNET] },\n    [ChainId.TESTNET]: { ...map1[ChainId.TESTNET], ...map2[ChainId.TESTNET] },\n  }\n}\n\n// merge tokens contained within lists from urls\nfunction useCombinedTokenMapFromUrls(urls: string[] | undefined): TokenAddressMap {\n  const lists = useAllLists()\n\n  return useMemo(() => {\n    if (!urls) return EMPTY_LIST\n\n    return (\n      urls\n        .slice()\n        // sort by priority so top priority goes last\n        .sort(sortByListPriority)\n        .reduce((allTokens, currentUrl) => {\n          const current = lists[currentUrl]?.current\n          if (!current) return allTokens\n          try {\n            const newTokens = Object.assign(listToTokenMap(current))\n            return combineMaps(allTokens, newTokens)\n          } catch (error) {\n            console.error('Could not show token list due to error', error)\n            return allTokens\n          }\n        }, EMPTY_LIST)\n    )\n  }, [lists, urls])\n}\n\n// filter out unsupported lists\nexport function useActiveListUrls(): string[] | undefined {\n  return useSelector<AppState, AppState['lists']['activeListUrls']>((state) => state.lists.activeListUrls)?.filter(\n    (url) => !UNSUPPORTED_LIST_URLS.includes(url),\n  )\n}\n\nexport function useInactiveListUrls(): string[] {\n  const lists = useAllLists()\n  const allActiveListUrls = useActiveListUrls()\n  return Object.keys(lists).filter((url) => !allActiveListUrls?.includes(url) && !UNSUPPORTED_LIST_URLS.includes(url))\n}\n\n// get all the tokens from active lists, combine with local default tokens\nexport function useCombinedActiveList(): TokenAddressMap {\n  const activeListUrls = useActiveListUrls()\n  const activeTokens = useCombinedTokenMapFromUrls(activeListUrls)\n  const defaultTokenMap = listToTokenMap(DEFAULT_TOKEN_LIST)\n  return combineMaps(activeTokens, defaultTokenMap)\n}\n\n// all tokens from inactive lists\nexport function useCombinedInactiveList(): TokenAddressMap {\n  const allInactiveListUrls: string[] = useInactiveListUrls()\n  return useCombinedTokenMapFromUrls(allInactiveListUrls)\n}\n\n// used to hide warnings on import for default tokens\nexport function useDefaultTokenList(): TokenAddressMap {\n  return listToTokenMap(DEFAULT_TOKEN_LIST)\n}\n\n// list of tokens not supported on interface, used to show warnings and prevent swaps and adds\nexport function useUnsupportedTokenList(): TokenAddressMap {\n  // get hard coded unsupported tokens\n  const localUnsupportedListMap = listToTokenMap(UNSUPPORTED_TOKEN_LIST)\n\n  // get any loaded unsupported tokens\n  const loadedUnsupportedListMap = useCombinedTokenMapFromUrls(UNSUPPORTED_LIST_URLS)\n\n  // format into one token address map\n  return combineMaps(localUnsupportedListMap, loadedUnsupportedListMap)\n}\n\nexport function useIsListActive(url: string): boolean {\n  const activeListUrls = useActiveListUrls()\n  return Boolean(activeListUrls?.includes(url))\n}\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/ZOLAStakingPoolInitializable.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\nimport tokens from 'config/constants/tokens'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startTimestamp',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndTimestamp',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'MATIC')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'MATIC')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: poolConfig.stakingToken.address,\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: tokens.wmatic.address,\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.poolLimitPerUser()\n    return new BigNumber(stakingLimit.toString())\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'MATIC' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/ZOLAStakingPoolInitializable.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getMasterchefContract } from 'utils/contractHelpers'\nimport { getAddress } from 'utils/addressHelpers'\nimport { simpleRpcProvider } from 'utils/providers'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((pool) => pool.stakingToken.symbol !== 'MATIC')\nconst bnbPools = poolsConfig.filter((pool) => pool.stakingToken.symbol === 'MATIC')\nconst nonMasterPools = poolsConfig.filter((pool) => pool.sousId !== 0)\nconst masterChefContract = getMasterchefContract()\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((pool) => ({\n    address: pool.stakingToken.address,\n    name: 'allowance',\n    params: [account, getAddress(pool.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((pool) => ({\n    address: pool.stakingToken.address,\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await simpleRpcProvider.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance.toString()).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.userInfo('0', account)\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount.toString()).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.pendingCake('0', account)\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward.toString()).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport multicall, { multicallv2 } from 'utils/multicall'\nimport cakeVaultAbi from 'config/abi/ZOLAVault.json'\nimport masterChefAbi from 'config/abi/ZOLAFarm.json'\nimport { getCakeVaultAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getMulticallContract } from 'utils/contractHelpers'\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const calls = [\n      'getPricePerFullShare',\n      'totalShares',\n      'calculateHarvestCakeRewards',\n      'calculateTotalPendingCakeRewards',\n    ].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[sharePrice], [shares], [estimatedCakeBountyReward], [totalPendingCakeHarvest]] = await multicallv2(\n      cakeVaultAbi,\n      calls,\n    )\n\n    const farmCalls = [\n      {\n        address: getMasterChefAddress(),\n        name: 'userInfo',\n        params: [0, getCakeVaultAddress()],\n      },\n    ]\n\n    const [userInfo] = await multicall(masterChefAbi, farmCalls)\n\n    const totalSharesAsBigNumber = shares ? new BigNumber(shares.toString()) : BIG_ZERO\n    const sharePriceAsBigNumber = sharePrice ? new BigNumber(sharePrice.toString()) : BIG_ZERO\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward.toString()).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest.toString()).toJSON(),\n      amountInFarm: new BigNumber(userInfo[0].toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n      amountInFarm: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const calls = ['performanceFee', 'callFee', 'withdrawFee', 'withdrawFeePeriod'].map((method) => ({\n      address: getCakeVaultAddress(),\n      name: method,\n    }))\n\n    const [[performanceFee], [callFee], [withdrawalFee], [withdrawalFeePeriod]] = await multicallv2(cakeVaultAbi, calls)\n\n    return {\n      performanceFee: performanceFee.toNumber(),\n      callFee: callFee.toNumber(),\n      withdrawalFee: withdrawalFee.toNumber(),\n      withdrawalFeePeriod: withdrawalFeePeriod.toNumber(),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.userInfo(account)\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares.toString()).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime.toString(),\n      lastUserActionTime: userContractResponse.lastUserActionTime.toString(),\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction.toString()).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, SerializedPool, CakeVault, VaultFees, VaultUser, AppThunk } from 'state/types'\nimport { getPoolApr } from 'utils/apr'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport farmsConfig from 'config/constants/farms'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from 'state/farms/fetchFarms'\nimport fetchFarmsPrices from 'state/farms/fetchFarmsPrices'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\nimport { getTokenPricesFromFarm } from './helpers'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  userDataLoaded: false,\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch, getState) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const farmsWithPriceHelpers = farmsConfig.concat(priceHelperLpsConfig)\n\n  const farms = await fetchFarms(farmsWithPriceHelpers)\n\n  const farmsWithPrices = await fetchFarmsPrices(farms)\n\n  const prices = getTokenPricesFromFarm(farmsWithPrices)\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    const stakingTokenAddress = pool.stakingToken.address ? pool.stakingToken.address.toLowerCase() : null\n    const stakingTokenPrice = stakingTokenAddress ? prices[stakingTokenAddress] : 0\n\n    const earningTokenAddress = pool.earningToken.address ? pool.earningToken.address.toLowerCase() : null\n    const earningTokenPrice = earningTokenAddress ? prices[earningTokenAddress] : 0\n    const apr = !isPoolFinished\n      ? getPoolApr(\n          stakingTokenPrice,\n          earningTokenPrice,\n          getBalanceNumber(new BigNumber(totalStaking.totalStaked), pool.stakingToken.decimals),\n          parseFloat(pool.tokenPerBlock),\n        )\n      : 0\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      stakingTokenPrice,\n      earningTokenPrice,\n      apr,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync =\n  (account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    const stakingTokenBalances = await fetchUserBalances(account)\n    const stakedBalances = await fetchUserStakeBalances(account)\n    const pendingRewards = await fetchUserPendingRewards(account)\n\n    const userData = poolsConfig.map((pool) => ({\n      sousId: pool.sousId,\n      allowance: allowances[pool.sousId],\n      stakingTokenBalance: stakingTokenBalances[pool.sousId],\n      stakedBalance: stakedBalances[pool.sousId],\n      pendingReward: pendingRewards[pool.sousId],\n    }))\n\n    dispatch(setPoolsUserData(userData))\n  }\n\nexport const updateUserAllowance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const allowances = await fetchPoolsAllowance(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n  }\n\nexport const updateUserBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const tokenBalances = await fetchUserBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n  }\n\nexport const updateUserStakedBalance =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const stakedBalances = await fetchUserStakeBalances(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n  }\n\nexport const updateUserPendingReward =\n  (sousId: number, account: string): AppThunk =>\n  async (dispatch) => {\n    const pendingRewards = await fetchUserPendingRewards(account)\n    dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n  }\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: SerializedPool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n      state.userDataLoaded = true\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import { ActionCreatorWithPayload, createAction } from '@reduxjs/toolkit'\nimport { TokenList, Version } from '@uniswap/token-lists'\n\nexport const fetchTokenList: Readonly<{\n  pending: ActionCreatorWithPayload<{ url: string; requestId: string }>\n  fulfilled: ActionCreatorWithPayload<{ url: string; tokenList: TokenList; requestId: string }>\n  rejected: ActionCreatorWithPayload<{ url: string; errorMessage: string; requestId: string }>\n}> = {\n  pending: createAction('lists/fetchTokenList/pending'),\n  fulfilled: createAction('lists/fetchTokenList/fulfilled'),\n  rejected: createAction('lists/fetchTokenList/rejected'),\n}\n// add and remove from list options\nexport const addList = createAction<string>('lists/addList')\nexport const removeList = createAction<string>('lists/removeList')\n\n// select which lists to search across from loaded lists\nexport const enableList = createAction<string>('lists/enableList')\nexport const disableList = createAction<string>('lists/disableList')\n\n// versioning\nexport const acceptListUpdate = createAction<string>('lists/acceptListUpdate')\nexport const rejectVersionUpdate = createAction<Version>('lists/rejectVersionUpdate')\n","import { Token } from '@wagyu-swap/sdk'\nimport { SerializedToken } from 'config/constants/types'\nimport { parseUnits } from 'ethers/lib/utils'\n\nexport function serializeToken(token: Token): SerializedToken {\n  return {\n    chainId: token.chainId,\n    address: token.address,\n    decimals: token.decimals,\n    symbol: token.symbol,\n    name: token.name,\n    projectLink: token.projectLink,\n  }\n}\n\nexport function deserializeToken(serializedToken: SerializedToken): Token {\n  return new Token(\n    serializedToken.chainId,\n    serializedToken.address,\n    serializedToken.decimals,\n    serializedToken.symbol,\n    serializedToken.name,\n    serializedToken.projectLink,\n  )\n}\n\nexport enum GAS_PRICE {\n  default = '5',\n  fast = '6',\n  instant = '7',\n  testnet = '10',\n}\n\nexport const GAS_PRICE_GWEI = {\n  default: parseUnits(GAS_PRICE.default, 'gwei').toString(),\n  fast: parseUnits(GAS_PRICE.fast, 'gwei').toString(),\n  instant: parseUnits(GAS_PRICE.instant, 'gwei').toString(),\n  testnet: parseUnits(GAS_PRICE.testnet, 'gwei').toString(),\n}\n","import React from 'react'\nimport { HelpIcon, useTooltip, Box, BoxProps, Placement } from 'packages/uikit'\nimport styled from 'styled-components'\n\ninterface Props extends BoxProps {\n  text: string | React.ReactNode\n  placement?: Placement\n}\n\nconst QuestionWrapper = styled.div`\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`\n\nconst QuestionHelper: React.FC<Props> = ({ text, placement = 'right-end', ...props }) => {\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(text, { placement, trigger: 'hover' })\n\n  return (\n    <Box {...props}>\n      {tooltipVisible && tooltip}\n      <QuestionWrapper ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" width=\"16px\" />\n      </QuestionWrapper>\n    </Box>\n  )\n}\n\nexport default QuestionHelper\n","import { CurrencyAmount, Fraction, JSBI, Percent, Price, TokenAmount, Trade } from '@wagyu-swap/sdk'\nimport {\n  BLOCKED_PRICE_IMPACT_NON_EXPERT,\n  ALLOWED_PRICE_IMPACT_HIGH,\n  ALLOWED_PRICE_IMPACT_LOW,\n  ALLOWED_PRICE_IMPACT_MEDIUM,\n} from '../config/constants'\n\nimport { Field } from '../state/swap/actions'\nimport { basisPointsToPercent } from './index'\n\nconst BASE_FEE = new Percent(JSBI.BigInt(25), JSBI.BigInt(10000))\nconst ONE_HUNDRED_PERCENT = new Percent(JSBI.BigInt(10000), JSBI.BigInt(10000))\nconst INPUT_FRACTION_AFTER_FEE = ONE_HUNDRED_PERCENT.subtract(BASE_FEE)\n\n// computes price breakdown for the trade\nexport function computeTradePriceBreakdown(trade?: Trade | null): {\n  priceImpactWithoutFee: Percent | undefined\n  realizedLPFee: CurrencyAmount | undefined | null\n} {\n  // for each hop in our trade, take away the x*y=k price impact from 0.3% fees\n  // e.g. for 3 tokens/2 hops: 1 - ((1 - .03) * (1-.03))\n  const realizedLPFee = !trade\n    ? undefined\n    : ONE_HUNDRED_PERCENT.subtract(\n        trade.route.pairs.reduce<Fraction>(\n          (currentFee: Fraction): Fraction => currentFee.multiply(INPUT_FRACTION_AFTER_FEE),\n          ONE_HUNDRED_PERCENT,\n        ),\n      )\n\n  // remove lp fees from price impact\n  const priceImpactWithoutFeeFraction = trade && realizedLPFee ? trade.priceImpact.subtract(realizedLPFee) : undefined\n\n  // the x*y=k impact\n  const priceImpactWithoutFeePercent = priceImpactWithoutFeeFraction\n    ? new Percent(priceImpactWithoutFeeFraction?.numerator, priceImpactWithoutFeeFraction?.denominator)\n    : undefined\n\n  // the amount of the input that accrues to LPs\n  const realizedLPFeeAmount =\n    realizedLPFee &&\n    trade &&\n    (trade.inputAmount instanceof TokenAmount\n      ? new TokenAmount(trade.inputAmount.token, realizedLPFee.multiply(trade.inputAmount.raw).quotient)\n      : CurrencyAmount.ether(realizedLPFee.multiply(trade.inputAmount.raw).quotient))\n\n  return { priceImpactWithoutFee: priceImpactWithoutFeePercent, realizedLPFee: realizedLPFeeAmount }\n}\n\n// computes the minimum amount out and maximum amount in for a trade given a user specified allowed slippage in bips\nexport function computeSlippageAdjustedAmounts(\n  trade: Trade | undefined,\n  allowedSlippage: number,\n): { [field in Field]?: CurrencyAmount } {\n  const pct = basisPointsToPercent(allowedSlippage)\n  return {\n    [Field.INPUT]: trade?.maximumAmountIn(pct),\n    [Field.OUTPUT]: trade?.minimumAmountOut(pct),\n  }\n}\n\nexport function warningSeverity(priceImpact: Percent | undefined): 0 | 1 | 2 | 3 | 4 {\n  if (!priceImpact?.lessThan(BLOCKED_PRICE_IMPACT_NON_EXPERT)) return 4\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) return 3\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_MEDIUM)) return 2\n  if (!priceImpact?.lessThan(ALLOWED_PRICE_IMPACT_LOW)) return 1\n  return 0\n}\n\nexport function formatExecutionPrice(trade?: Trade, inverted?: boolean): string {\n  if (!trade) {\n    return ''\n  }\n  return inverted\n    ? `${trade.executionPrice.invert().toSignificant(6)} ${trade.inputAmount.currency.symbol} / ${\n        trade.outputAmount.currency.symbol\n      }`\n    : `${trade.executionPrice.toSignificant(6)} ${trade.outputAmount.currency.symbol} / ${\n        trade.inputAmount.currency.symbol\n      }`\n}\n\n/**\n * Helper to multiply a Price object by an arbitrary amount\n */\nexport const multiplyPriceByAmount = (price: Price, amount: number, significantDigits = 18) => {\n  if (!price) {\n    return 0\n  }\n\n  return parseFloat(price.toSignificant(significantDigits)) * amount\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport interface Call {\n  address: string\n  callData: string\n}\n\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nconst LOWER_HEX_REGEX = /^0x[a-f0-9]*$/\nexport function toCallKey(call: Call): string {\n  if (!ADDRESS_REGEX.test(call.address)) {\n    throw new Error(`Invalid address: ${call.address}`)\n  }\n  if (!LOWER_HEX_REGEX.test(call.callData)) {\n    throw new Error(`Invalid hex: ${call.callData}`)\n  }\n  return `${call.address}-${call.callData}`\n}\n\nexport function parseCallKey(callKey: string): Call {\n  const pcs = callKey.split('-')\n  if (pcs.length !== 2) {\n    throw new Error(`Invalid call key: ${callKey}`)\n  }\n  return {\n    address: pcs[0],\n    callData: pcs[1],\n  }\n}\n\nexport interface ListenerOptions {\n  // how often this data should be fetched, by default 1\n  readonly blocksPerFetch?: number\n}\n\nexport const addMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/addMulticallListeners',\n)\nexport const removeMulticallListeners = createAction<{ chainId: number; calls: Call[]; options?: ListenerOptions }>(\n  'multicall/removeMulticallListeners',\n)\nexport const fetchingMulticallResults = createAction<{ chainId: number; calls: Call[]; fetchingBlockNumber: number }>(\n  'multicall/fetchingMulticallResults',\n)\nexport const errorFetchingMulticallResults = createAction<{\n  chainId: number\n  calls: Call[]\n  fetchingBlockNumber: number\n}>('multicall/errorFetchingMulticallResults')\nexport const updateMulticallResults = createAction<{\n  chainId: number\n  blockNumber: number\n  results: {\n    [callKey: string]: string | null\n  }\n}>('multicall/updateMulticallResults')\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\n\nconst useTheme = () => {\n  const [isDark, toggleTheme] = useThemeManager()\n  const theme = useContext(StyledThemeContext)\n  return { isDark, theme, toggleTheme }\n}\n\nexport default useTheme\n","import { ChainId } from '@wagyu-swap/sdk'\nimport addresses from './addresses.json'\nimport { serializeTokens } from './tokens'\nimport { SerializedPoolConfig, PoolCategory } from './types'\n\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\nconst { MAINNET } = ChainId\n\nconst serializedTokens = serializeTokens()\n\nconst pools: SerializedPoolConfig[] =\n  chainId === MAINNET\n    ? [\n        {\n          sousId: 0,\n          stakingToken: serializedTokens.cake,\n          earningToken: serializedTokens.cake,\n          contractAddress: {\n            80001: '',\n            137: '0x8a226293bC6f697A681B0b29f825c149655fEC2d',\n          },\n          poolCategory: PoolCategory.CORE,\n          harvest: true,\n          tokenPerBlock: '1',\n          sortOrder: 1,\n          isFinished: false,\n        },\n        {\n          sousId: 1,\n          stakingToken: serializedTokens.matic,\n          earningToken: serializedTokens.usdc,\n          contractAddress: {\n            137: '0x0560829c353efcda2f2f15be15753340b48d44a1',\n            80001: '',\n          },\n          poolCategory: PoolCategory.CORE,\n          harvest: true,\n          tokenPerBlock: '1',\n          sortOrder: 2,\n          isFinished: false,\n        },\n        {\n          sousId: 2,\n          stakingToken: serializedTokens.shib,\n          earningToken: serializedTokens.lazermoon,\n          contractAddress: {\n            80001: '',\n            137: '0x0a73a763b1a897db8cc7d77a7db96b10d727487a',\n          },\n          poolCategory: PoolCategory.CORE,\n          harvest: true,\n          tokenPerBlock: '1',\n          sortOrder: 3,\n          isFinished: false,\n        },\n        {\n          sousId: 3,\n          stakingToken: serializedTokens.matic,\n          earningToken: serializedTokens.kom,\n          contractAddress: {\n            80001: '',\n            137: '0x176cf3b3161fab36fe6a8d18facda391745dcd34',\n          },\n          poolCategory: PoolCategory.CORE,\n          harvest: true,\n          tokenPerBlock: '1',\n          sortOrder: 4,\n          isFinished: false,\n        },\n        {\n          sousId: 4,\n          stakingToken: serializedTokens.matic,\n          earningToken: serializedTokens.grt,\n          contractAddress: {\n            80001: '',\n            137: '0x357926e88da8434e16e3a3b951dbef5cddbd7a7f',\n          },\n          poolCategory: PoolCategory.CORE,\n          harvest: true,\n          tokenPerBlock: '1',\n          sortOrder: 5,\n          isFinished: false,\n        },\n        {\n          sousId: 5,\n          stakingToken: serializedTokens.banana,\n          earningToken: serializedTokens.cake,\n          contractAddress: {\n            80001: '',\n            137: '0x481db2ad06539c8b378647e866679248ddb1b350',\n          },\n          poolCategory: PoolCategory.CORE,\n          harvest: true,\n          tokenPerBlock: '1',\n          sortOrder: 6,\n          isFinished: false,\n        },\n        {\n          sousId: 6,\n          stakingToken: serializedTokens.shib,\n          earningToken: serializedTokens.zolamo,\n          contractAddress: {\n            80001: '',\n            137: '0x5c0593b2fd62160ee0f1679bed172ea8c2748e7f',\n          },\n          poolCategory: PoolCategory.CORE,\n          harvest: true,\n          tokenPerBlock: '1',\n          sortOrder: 7,\n          isFinished: false,\n        },\n        {\n          sousId: 7,\n          stakingToken: serializedTokens.kom,\n          earningToken: serializedTokens.cake,\n          contractAddress: {\n            80001: '',\n            137: '0x64dcbe9ba04ffae0834133c2cf18163a159a34d0',\n          },\n          poolCategory: PoolCategory.CORE,\n          harvest: true,\n          tokenPerBlock: '1',\n          sortOrder: 8,\n          isFinished: false,\n        },\n        {\n          sousId: 8,\n          stakingToken: serializedTokens.shib,\n          earningToken: serializedTokens.elon,\n          contractAddress: {\n            80001: '',\n            137: '0x6ca5d03933d7c02ba0fe4d76f4579b9be3f74dc9',\n          },\n          poolCategory: PoolCategory.CORE,\n          harvest: true,\n          tokenPerBlock: '1',\n          sortOrder: 9,\n          isFinished: false,\n        },\n        {\n          sousId: 9,\n          stakingToken: serializedTokens.quick,\n          earningToken: serializedTokens.cake,\n          contractAddress: {\n            80001: '',\n            137: '0x747af9b21ff5ec6cbf562f77d18bbb08e5da13ee',\n          },\n          poolCategory: PoolCategory.CORE,\n          harvest: true,\n          tokenPerBlock: '1',\n          sortOrder: 10,\n          isFinished: false,\n        },\n        {\n          sousId: 10,\n          stakingToken: serializedTokens.usdc,\n          earningToken: serializedTokens.banana,\n          contractAddress: {\n            80001: '',\n            137: '0x7a74669059016a587d2fa5b3c377707a551a2b45',\n          },\n          poolCategory: PoolCategory.CORE,\n          harvest: true,\n          tokenPerBlock: '1',\n          sortOrder: 11,\n          isFinished: false,\n        },\n        {\n          sousId: 11,\n          stakingToken: serializedTokens.matic,\n          earningToken: serializedTokens.zolamo,\n          contractAddress: {\n            80001: '',\n            137: '0x8a2df6d7d3695d6e620b1e56890e70bdb25f0d95',\n          },\n          poolCategory: PoolCategory.CORE,\n          harvest: true,\n          tokenPerBlock: '1',\n          sortOrder: 12,\n          isFinished: false,\n        },\n        {\n          sousId: 12,\n          stakingToken: serializedTokens.mana,\n          earningToken: serializedTokens.cake,\n          contractAddress: {\n            80001: '',\n            137: '0x8d55dcd84a9bd2afde95848faf7a00a9bbea0b9b',\n          },\n          poolCategory: PoolCategory.CORE,\n          harvest: true,\n          tokenPerBlock: '1',\n          sortOrder: 13,\n          isFinished: false,\n        },\n        {\n          sousId: 13,\n          stakingToken: serializedTokens.cake,\n          earningToken: serializedTokens.lazermoon,\n          contractAddress: {\n            80001: '',\n            137: '0x9fd38c0ba9b6c69545db1e265f17a4464b00062d',\n          },\n          poolCategory: PoolCategory.CORE,\n          harvest: true,\n          tokenPerBlock: '1',\n          sortOrder: 14,\n          isFinished: false,\n        },\n        {\n          sousId: 14,\n          stakingToken: serializedTokens.cake,\n          earningToken: serializedTokens.shib,\n          contractAddress: {\n            80001: '',\n            137: '0xa65bc835a3087f3f646914f14cfdeb55b6dfcd58',\n          },\n          poolCategory: PoolCategory.CORE,\n          harvest: true,\n          tokenPerBlock: '1',\n          sortOrder: 15,\n          isFinished: false,\n        },\n        {\n          sousId: 15,\n          stakingToken: serializedTokens.cake,\n          earningToken: serializedTokens.dai,\n          contractAddress: {\n            80001: '',\n            137: '0xb4ee217f4b37ca079f654bcf3da1b6e76bfbe01e',\n          },\n          poolCategory: PoolCategory.CORE,\n          harvest: true,\n          tokenPerBlock: '1',\n          sortOrder: 16,\n          isFinished: false,\n        },\n        {\n          sousId: 16,\n          stakingToken: serializedTokens.luna,\n          earningToken: serializedTokens.cake,\n          contractAddress: {\n            80001: '',\n            137: '0xc44582cd763d8a38a8abdcdcb5c7aff77debcb22',\n          },\n          poolCategory: PoolCategory.CORE,\n          harvest: true,\n          tokenPerBlock: '1',\n          sortOrder: 17,\n          isFinished: false,\n        },\n        {\n          sousId: 18,\n          stakingToken: serializedTokens.matic,\n          earningToken: serializedTokens.mana,\n          contractAddress: {\n            80001: '',\n            137: '0xc7283b4dac72bbb7754cf61359ea9d253ef7b73b',\n          },\n          poolCategory: PoolCategory.CORE,\n          harvest: true,\n          tokenPerBlock: '1',\n          sortOrder: 18,\n          isFinished: false,\n        },\n        {\n          sousId: 19,\n          stakingToken: serializedTokens.wbtc,\n          earningToken: serializedTokens.matic,\n          contractAddress: {\n            80001: '',\n            137: '0xd324191782ba5e37afd262c08d67997fc6ffe70d',\n          },\n          poolCategory: PoolCategory.CORE,\n          harvest: true,\n          tokenPerBlock: '1',\n          sortOrder: 19,\n          isFinished: false,\n        },\n        {\n          sousId: 20,\n          stakingToken: serializedTokens.matic,\n          earningToken: serializedTokens.quick,\n          contractAddress: {\n            80001: '',\n            137: '0xe2ee5a6738ce4ac42c94433d4cbae764b6fc7d09',\n          },\n          poolCategory: PoolCategory.CORE,\n          harvest: true,\n          tokenPerBlock: '1',\n          sortOrder: 20,\n          isFinished: false,\n        },\n        {\n          sousId: 21,\n          stakingToken: serializedTokens.matic,\n          earningToken: serializedTokens.elon,\n          contractAddress: {\n            80001: '',\n            137: '0xf0ce4c5150c2bf1f36582f7375075e1ffae1245c',\n          },\n          poolCategory: PoolCategory.CORE,\n          harvest: true,\n          tokenPerBlock: '1',\n          sortOrder: 21,\n          isFinished: false,\n        },\n        {\n          sousId: 22,\n          stakingToken: serializedTokens.usdt,\n          earningToken: serializedTokens.cake,\n          contractAddress: {\n            80001: '',\n            137: '0xf72088149604e36a745f4d76fab03fd3ac39dcdc',\n          },\n          poolCategory: PoolCategory.CORE,\n          harvest: true,\n          tokenPerBlock: '1',\n          sortOrder: 22,\n          isFinished: false,\n        },\n        {\n          sousId: 23,\n          stakingToken: serializedTokens.matic,\n          earningToken: serializedTokens.lazermoon,\n          contractAddress: {\n            80001: '',\n            137: '0xffb233ca5c6afcfedb9292080e6a45ed1c997a75',\n          },\n          poolCategory: PoolCategory.CORE,\n          harvest: true,\n          tokenPerBlock: '1',\n          sortOrder: 23,\n          isFinished: false,\n        },\n        {\n          sousId: 24,\n          stakingToken: serializedTokens.matic,\n          earningToken: serializedTokens.skilyne,\n          contractAddress: {\n            80001: '',\n            137: '0x7ddC0E80eBA600DbF15B1e80a008d2Eb2053B024',\n          },\n          poolCategory: PoolCategory.CORE,\n          harvest: true,\n          tokenPerBlock: '1',\n          sortOrder: 24,\n          isFinished: false,\n       },\n      ]\n    : [\n        {\n          sousId: 0,\n          stakingToken: serializedTokens.cake,\n          earningToken: serializedTokens.cake,\n          contractAddress: {\n            80001: '',\n            137: '0xDA5B294F6a8Af4236F853D17d33ba584D7787f10',\n          },\n          poolCategory: PoolCategory.CORE,\n          harvest: true,\n          tokenPerBlock: '1',\n          sortOrder: 1,\n          isFinished: false,\n        },\n      ]\n\nexport default pools\n","import { ChainId } from '@wagyu-swap/sdk'\n\nexport const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\nexport const SNAPSHOT_VOTING_API = process.env.REACT_APP_SNAPSHOT_VOTING_API\nexport const SNAPSHOT_BASE_URL = process.env.REACT_APP_SNAPSHOT_BASE_URL\nexport const API_PROFILE = process.env.REACT_APP_API_PROFILE\nexport const SNAPSHOT_API = `${SNAPSHOT_BASE_URL}/graphql`\nexport const SNAPSHOT_HUB_API = `${SNAPSHOT_BASE_URL}/api/message`\nexport const BITQUERY_API = 'https://graphql.bitquery.io'\n\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\n/**\n * V1 will be deprecated but is still used to claim old rounds\n */\nexport const GRAPH_API_PREDICTION_V1 = 'https://api.thegraph.com/subgraphs/name/mrandall101/zolaswapii/prediction'\n\n// https://thegraph.testnet.zolaswap.app/subgraphs/name/wagyu/graphql\n// export const INFO_CLIENT = {\n//   [ChainId.TESTNET]: 'http://164.90.190.145/subgraphs/name/wagyu',\n//   [ChainId.MAINNET]: 'https://api.thegraph.com/subgraphs/name/mrandall101/zolaswaii',\n// }[chainId]\n\nexport const INFO_CLIENT = {\n  [ChainId.TESTNET]: 'https://thegraph.testnet.zolaswap.finance/subgraphs/name/zolaswap',\n  [ChainId.MAINNET]: ' https://api.thegraph.com/subgraphs/name/mrandall101/zolaswapexchange',\n}[chainId]\n\n// export const BLOCKS_CLIENT = {\n//   [ChainId.TESTNET]: 'http://164.90.190.145/subgraphs/name/blocks',\n//   [ChainId.MAINNET]: 'http://51.222.43.201:8000/subgraphs/name/wagyu',\n// }[chainId]\n\nexport const BLOCKS_CLIENT = {\n  [ChainId.TESTNET]: 'https://thegraph.testnet.zolaswap.finance/subgraphs/name/blocks',\n  [ChainId.MAINNET]: 'https://api.thegraph.com/subgraphs/name/mrandall101/zolaswapblocks',\n}[chainId]\n\nexport const GRAPH_API_LOTTERY = {\n  [ChainId.TESTNET]: 'https://thegraph.testnet.zolaswap.finance/subgraphs/name/lottery',\n  [ChainId.MAINNET]: 'https://api.thegraph.com/subgraphs/name/mrandall101/zolaswapii/lottery',\n}[chainId]\n\n// export const GRAPH_API_LOTTERY = {\n//   [ChainId.TESTNET]: 'http://164.90.190.145/subgraphs/name/lottery',\n//   [ChainId.MAINNET]: 'http://67.52.229.203/subgraphs/name/lottery',\n// }[chainId]\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import { ethers } from 'ethers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\n\n// export const simpleRpcProvider = new ethers.providers.JsonRpcProvider(\n//   RPC_URL,\n//   parseInt(process.env.REACT_APP_CHAIN_ID, 10),\n// )\n\nexport const simpleRpcProvider = new ethers.providers.StaticJsonRpcProvider(\n  RPC_URL,\n  parseInt(process.env.REACT_APP_CHAIN_ID, 10),\n)\n\nexport default null\n","import { useEffect, useRef } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { simpleRpcProvider } from 'utils/providers'\nimport { setBlock } from '.'\nimport { State } from '../types'\n\nexport const usePollBlockNumber = () => {\n  const timer = useRef(null)\n  const dispatch = useAppDispatch()\n  const isWindowVisible = useIsWindowVisible()\n\n  useEffect(() => {\n    if (isWindowVisible) {\n      timer.current = setInterval(async () => {\n        const blockNumber = await simpleRpcProvider.getBlockNumber()\n        dispatch(setBlock(blockNumber))\n      }, 6000)\n    } else {\n      clearInterval(timer.current)\n    }\n\n    return () => clearInterval(timer.current)\n  }, [dispatch, timer, isWindowVisible])\n}\n\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n","import { ReactNode } from 'react'\n\nexport const types = {\n  SUCCESS: 'success',\n  DANGER: 'danger',\n  WARNING: 'warning',\n  INFO: 'info',\n}\n\nexport type Types = typeof types[keyof typeof types]\n\nexport interface Toast {\n  id: string\n  type: Types\n  title: string\n  description?: ReactNode\n}\n\nexport interface ToastContainerProps {\n  toasts: Toast[]\n  stackSpacing?: number\n  ttl?: number\n  onRemove: (id: string) => void\n}\n\nexport interface ToastProps {\n  toast: Toast\n  onRemove: ToastContainerProps['onRemove']\n  ttl: number\n  style: Partial<CSSStyleDeclaration>\n}\n","import React, { useCallback, useEffect, useRef } from 'react'\nimport { CSSTransition } from 'react-transition-group'\nimport styled from 'styled-components'\nimport { Alert, alertVariants } from 'packages/uikit'\nimport { ToastProps, types } from './types'\n\nconst alertTypeMap = {\n  [types.INFO]: alertVariants.INFO,\n  [types.SUCCESS]: alertVariants.SUCCESS,\n  [types.DANGER]: alertVariants.DANGER,\n  [types.WARNING]: alertVariants.WARNING,\n}\n\nconst StyledToast = styled.div`\n  right: 16px;\n  position: fixed;\n  max-width: calc(100% - 32px);\n  transition: all 250ms ease-in;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: 400px;\n  }\n`\n\nconst Toast: React.FC<ToastProps> = ({ toast, onRemove, style, ttl, ...props }) => {\n  const timer = useRef<number>()\n  const ref = useRef(null)\n  const removeHandler = useRef(onRemove)\n  const { id, title, description, type } = toast\n\n  const handleRemove = useCallback(() => removeHandler.current(id), [id, removeHandler])\n\n  const handleMouseEnter = () => {\n    clearTimeout(timer.current)\n  }\n\n  const handleMouseLeave = () => {\n    if (timer.current) {\n      clearTimeout(timer.current)\n    }\n\n    timer.current = window.setTimeout(() => {\n      handleRemove()\n    }, ttl)\n  }\n\n  useEffect(() => {\n    if (timer.current) {\n      clearTimeout(timer.current)\n    }\n\n    timer.current = window.setTimeout(() => {\n      handleRemove()\n    }, ttl)\n\n    return () => {\n      clearTimeout(timer.current)\n    }\n  }, [timer, ttl, handleRemove])\n\n  return (\n    <CSSTransition nodeRef={ref} timeout={250} style={style} {...props}>\n      <StyledToast ref={ref} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\n        <Alert title={title} variant={alertTypeMap[type]} onClick={handleRemove}>\n          {description}\n        </Alert>\n      </StyledToast>\n    </CSSTransition>\n  )\n}\n\nexport default Toast\n","import React from 'react'\nimport { TransitionGroup } from 'react-transition-group'\nimport styled from 'styled-components'\nimport Toast from './Toast'\nimport { ToastContainerProps } from './types'\n\nconst ZINDEX = 1000\nconst TOP_POSITION = 80 // Initial position from the top\n\nconst StyledToastContainer = styled.div`\n  .enter,\n  .appear {\n    opacity: 0.01;\n  }\n\n  .enter.enter-active,\n  .appear.appear-active {\n    opacity: 1;\n    transition: opacity 250ms ease-in;\n  }\n\n  .exit {\n    opacity: 1;\n  }\n\n  .exit.exit-active {\n    opacity: 0.01;\n    transition: opacity 250ms ease-out;\n  }\n`\n\nconst ToastContainer: React.FC<ToastContainerProps> = ({ toasts, onRemove, ttl = 6000, stackSpacing = 24 }) => {\n  return (\n    <StyledToastContainer>\n      <TransitionGroup>\n        {toasts.map((toast, index) => {\n          const zIndex = (ZINDEX - index).toString()\n          const top = TOP_POSITION + index * stackSpacing\n\n          return (\n            <Toast key={toast.id} toast={toast} onRemove={onRemove} ttl={ttl} style={{ top: `${top}px`, zIndex }} />\n          )\n        })}\n      </TransitionGroup>\n    </StyledToastContainer>\n  )\n}\n\nexport default ToastContainer\n","import React from 'react'\nimport { Link, Text } from 'packages/uikit'\nimport { getVelasScanLink } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport truncateHash from 'utils/truncateHash'\n\ninterface DescriptionWithTxProps {\n  description?: string\n  txHash?: string\n}\n\nconst DescriptionWithTx: React.FC<DescriptionWithTxProps> = ({ txHash, children }) => {\n  const { chainId } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  return (\n    <>\n      {typeof children === 'string' ? <Text as=\"p\">{children}</Text> : children}\n      {txHash && (\n        <Link external href={getVelasScanLink(txHash, 'transaction', chainId)}>\n          {t('View on Polygon Explorer')}: {truncateHash(txHash, 8, 0)}\n        </Link>\n      )}\n    </>\n  )\n}\n\nexport default DescriptionWithTx\n","import { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount } from '@wagyu-swap/sdk'\nimport { useMemo } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport ERC20_INTERFACE from 'config/abi/erc20'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { useMulticallContract } from 'hooks/useContract'\nimport { isAddress } from 'utils'\nimport { useSingleContractMultipleData, useMultipleContractSingleData } from '../multicall/hooks'\n\n/**\n * Returns a map of the given addresses to their eventually consistent BNB balances.\n */\nexport function useBNBBalances(uncheckedAddresses?: (string | undefined)[]): {\n  [address: string]: CurrencyAmount | undefined\n} {\n  const multicallContract = useMulticallContract()\n\n  const addresses: string[] = useMemo(\n    () =>\n      uncheckedAddresses\n        ? uncheckedAddresses\n            .map(isAddress)\n            .filter((a): a is string => a !== false)\n            .sort()\n        : [],\n    [uncheckedAddresses],\n  )\n\n  const results = useSingleContractMultipleData(\n    multicallContract,\n    'getEthBalance',\n    addresses.map((address) => [address]),\n  )\n\n  return useMemo(\n    () =>\n      addresses.reduce<{ [address: string]: CurrencyAmount }>((memo, address, i) => {\n        const value = results?.[i]?.result?.[0]\n        if (value) memo[address] = CurrencyAmount.ether(JSBI.BigInt(value.toString()))\n        return memo\n      }, {}),\n    [addresses, results],\n  )\n}\n\n/**\n * Returns a map of token addresses to their eventually consistent token balances for a single account.\n */\nexport function useTokenBalancesWithLoadingIndicator(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): [{ [tokenAddress: string]: TokenAmount | undefined }, boolean] {\n  const validatedTokens: Token[] = useMemo(\n    () => tokens?.filter((t?: Token): t is Token => isAddress(t?.address) !== false) ?? [],\n    [tokens],\n  )\n\n  const validatedTokenAddresses = useMemo(() => validatedTokens.map((vt) => vt.address), [validatedTokens])\n\n  const balances = useMultipleContractSingleData(validatedTokenAddresses, ERC20_INTERFACE, 'balanceOf', [address])\n\n  const anyLoading: boolean = useMemo(() => balances.some((callState) => callState.loading), [balances])\n\n  return [\n    useMemo(\n      () =>\n        address && validatedTokens.length > 0\n          ? validatedTokens.reduce<{ [tokenAddress: string]: TokenAmount | undefined }>((memo, token, i) => {\n              const value = balances?.[i]?.result?.[0]\n              const amount = value ? JSBI.BigInt(value.toString()) : undefined\n              if (amount) {\n                memo[token.address] = new TokenAmount(token, amount)\n              }\n              return memo\n            }, {})\n          : {},\n      [address, validatedTokens, balances],\n    ),\n    anyLoading,\n  ]\n}\n\nexport function useTokenBalances(\n  address?: string,\n  tokens?: (Token | undefined)[],\n): { [tokenAddress: string]: TokenAmount | undefined } {\n  return useTokenBalancesWithLoadingIndicator(address, tokens)[0]\n}\n\n// get the balance for a single token/account combo\nexport function useTokenBalance(account?: string, token?: Token): TokenAmount | undefined {\n  const tokenBalances = useTokenBalances(account, [token])\n  if (!token) return undefined\n  return tokenBalances[token.address]\n}\n\nexport function useCurrencyBalances(\n  account?: string,\n  currencies?: (Currency | undefined)[],\n): (CurrencyAmount | undefined)[] {\n  const tokens = useMemo(\n    () => currencies?.filter((currency): currency is Token => currency instanceof Token) ?? [],\n    [currencies],\n  )\n\n  const tokenBalances = useTokenBalances(account, tokens)\n  const containsBNB: boolean = useMemo(() => currencies?.some((currency) => currency === ETHER) ?? false, [currencies])\n  const ethBalance = useBNBBalances(containsBNB ? [account] : [])\n\n  return useMemo(\n    () =>\n      currencies?.map((currency) => {\n        if (!account || !currency) return undefined\n        if (currency instanceof Token) return tokenBalances[currency.address]\n        if (currency === ETHER) return ethBalance[account]\n        return undefined\n      }) ?? [],\n    [account, currencies, ethBalance, tokenBalances],\n  )\n}\n\nexport function useCurrencyBalance(account?: string, currency?: Currency): CurrencyAmount | undefined {\n  return useCurrencyBalances(account, [currency])[0]\n}\n\n// mimics useAllBalances\nexport function useAllTokenBalances(): { [tokenAddress: string]: TokenAmount | undefined } {\n  const { account } = useWeb3React()\n  const allTokens = useAllTokens()\n  const allTokensArray = useMemo(() => Object.values(allTokens ?? {}), [allTokens])\n  const balances = useTokenBalances(account ?? undefined, allTokensArray)\n  return balances ?? {}\n}\n","import { TokenAmount, Pair, Currency } from '@wagyu-swap/sdk'\nimport { useMemo } from 'react'\nimport { abi as IUniswapV2PairABI } from '@uniswap/v2-core/build/IUniswapV2Pair.json'\nimport { Interface } from '@ethersproject/abi'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useMultipleContractSingleData } from '../state/multicall/hooks'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst PAIR_INTERFACE = new Interface(IUniswapV2PairABI)\n\nexport enum PairState {\n  LOADING,\n  NOT_EXISTS,\n  EXISTS,\n  INVALID,\n}\n\nexport function usePairs(currencies: [Currency | undefined, Currency | undefined][]): [PairState, Pair | null][] {\n  const { chainId } = useActiveWeb3React()\n\n  const tokens = useMemo(\n    () =>\n      currencies.map(([currencyA, currencyB]) => [\n        wrappedCurrency(currencyA, chainId),\n        wrappedCurrency(currencyB, chainId),\n      ]),\n    [chainId, currencies],\n  )\n\n  const pairAddresses = useMemo(\n    () =>\n      tokens.map(([tokenA, tokenB]) => {\n        return tokenA && tokenB && !tokenA.equals(tokenB) ? Pair.getAddress(tokenA, tokenB) : undefined\n      }),\n    [tokens],\n  )\n\n  const results = useMultipleContractSingleData(pairAddresses, PAIR_INTERFACE, 'getReserves')\n\n  return useMemo(() => {\n    return results.map((result, i) => {\n      const { result: reserves, loading } = result\n      const tokenA = tokens[i][0]\n      const tokenB = tokens[i][1]\n\n      if (loading) return [PairState.LOADING, null]\n      if (!tokenA || !tokenB || tokenA.equals(tokenB)) return [PairState.INVALID, null]\n      if (!reserves) return [PairState.NOT_EXISTS, null]\n      const { reserve0, reserve1 } = reserves\n      const [token0, token1] = tokenA.sortsBefore(tokenB) ? [tokenA, tokenB] : [tokenB, tokenA]\n      return [\n        PairState.EXISTS,\n        new Pair(new TokenAmount(token0, reserve0.toString()), new TokenAmount(token1, reserve1.toString())),\n      ]\n    })\n  }, [results, tokens])\n}\n\nexport function usePair(tokenA?: Currency, tokenB?: Currency): [PairState, Pair | null] {\n  return usePairs([[tokenA, tokenB]])[0]\n}\n","import { useEffect, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { farmsConfig } from 'config/constants'\nimport useRefresh from 'hooks/useRefresh'\nimport { deserializeToken } from 'state/user/hooks/helpers'\nimport { MATIC_USDC_LP_PID } from 'config/constants/farms'\nimport { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync, nonArchivedFarms } from '.'\nimport { State, SerializedFarm, DeserializedFarmUserData, DeserializedFarm, DeserializedFarmsState } from '../types'\n\nconst deserializeFarmUserData = (farm: SerializedFarm): DeserializedFarmUserData => {\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\nconst deserializeFarm = (farm: SerializedFarm): DeserializedFarm => {\n  const { lpAddresses, lpSymbol, pid, dual, multiplier, isCommunity, quoteTokenPriceUsdt, tokenPriceUsdt } = farm\n\n  return {\n    lpAddresses,\n    lpSymbol,\n    pid,\n    dual,\n    multiplier,\n    isCommunity,\n    quoteTokenPriceUsdt,\n    tokenPriceUsdt,\n    token: deserializeToken(farm.token),\n    quoteToken: deserializeToken(farm.quoteToken),\n    userData: deserializeFarmUserData(farm),\n    tokenAmountTotal: farm.tokenAmountTotal ? new BigNumber(farm.tokenAmountTotal) : BIG_ZERO,\n    lpTotalInQuoteToken: farm.lpTotalInQuoteToken ? new BigNumber(farm.lpTotalInQuoteToken) : BIG_ZERO,\n    lpTotalSupply: farm.lpTotalSupply ? new BigNumber(farm.lpTotalSupply) : BIG_ZERO,\n    tokenPriceVsQuote: farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO,\n    poolWeight: farm.poolWeight ? new BigNumber(farm.poolWeight) : BIG_ZERO,\n  }\n}\n\nexport const usePollFarmsPublicData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n  }, [includeArchive, dispatch, slowRefresh])\n}\n\nexport const usePollFarmsWithUserData = (includeArchive = false) => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const { account } = useWeb3React()\n\n  useEffect(() => {\n    const farmsToFetch = includeArchive ? farmsConfig : nonArchivedFarms\n    const pids = farmsToFetch.map((farmToFetch) => farmToFetch.pid)\n\n    dispatch(fetchFarmsPublicDataAsync(pids))\n\n    if (account) {\n      dispatch(fetchFarmUserDataAsync({ account, pids }))\n    }\n  }, [includeArchive, dispatch, slowRefresh, account])\n}\n\n/**\n * Fetches the \"core\" farm data used globally\n * 251 = MATIC-ZOLA LP\n * 252 = BUSD-BNB LP\n */\nexport const usePollCoreFarmData = () => {\n  const dispatch = useAppDispatch()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync([6, 9]))\n  }, [dispatch, fastRefresh])\n}\n\nexport const useFarms = (): DeserializedFarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  const deserializedFarmsData = farms.data.map(deserializeFarm)\n  const { loadArchivedFarmsData, userDataLoaded } = farms\n  return {\n    loadArchivedFarmsData,\n    userDataLoaded,\n    data: deserializedFarmsData,\n  }\n}\n\nexport const useFarmFromPid = (pid: number): DeserializedFarm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return deserializeFarm(farm)\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): DeserializedFarm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return deserializeFarm(farm)\n}\n\nexport const useFarmUser = (pid): DeserializedFarmUserData => {\n  const { userData } = useFarmFromPid(pid)\n  const { allowance, tokenBalance, stakedBalance, earnings } = userData\n  return {\n    allowance,\n    tokenBalance,\n    stakedBalance,\n    earnings,\n  }\n}\n\n// Return the base token price for a farm, from a given pid\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  return farm && new BigNumber(farm.tokenPriceUsdt)\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply.gt(0) && farm.lpTotalInQuoteToken.gt(0)) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(farm.lpTotalSupply)\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n// /!\\ Deprecated , use the BUSD hook in /hooks\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(MATIC_USDC_LP_PID)\n  const cakePriceBusdAsString = cakeBnbFarm.tokenPriceUsdt\n\n  const cakePriceBusd = useMemo(() => {\n    return new BigNumber(cakePriceBusdAsString)\n  }, [cakePriceBusdAsString])\n\n  return cakePriceBusd\n}\n","import React from 'react'\nimport { Button, useWalletModal } from 'packages/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ConnectWalletButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout, t)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {t('Connect Wallet')}\n    </Button>\n  )\n}\n\nexport default ConnectWalletButton\n","import { TransactionResponse } from '@ethersproject/providers'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch, AppState } from '../index'\nimport { addTransaction } from './actions'\nimport { TransactionDetails } from './reducer'\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: {\n    summary?: string\n    approval?: { tokenAddress: string; spender: string }\n    claim?: { recipient: string }\n  },\n) => void {\n  const { chainId, account } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      {\n        summary,\n        approval,\n        claim,\n      }: { summary?: string; claim?: { recipient: string }; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return\n      if (!chainId) return\n\n      const { hash } = response\n      if (!hash) {\n        throw Error('No transaction hash found.')\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary, claim }))\n    },\n    [dispatch, chainId, account],\n  )\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useActiveWeb3React()\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  return chainId ? state[chainId] ?? {} : {}\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions()\n\n  if (!transactionHash || !transactions[transactionHash]) return false\n\n  return !transactions[transactionHash].receipt\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions()\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash]\n        if (!tx) return false\n        if (tx.receipt) {\n          return false\n        }\n        const { approval } = tx\n        if (!approval) return false\n        return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx)\n      }),\n    [allTransactions, spender, tokenAddress],\n  )\n}\n","import { createAction } from '@reduxjs/toolkit'\nimport { ChainId } from '@wagyu-swap/sdk'\n\nexport interface SerializableTransactionReceipt {\n  to: string\n  from: string\n  contractAddress: string\n  transactionIndex: number\n  blockHash: string\n  transactionHash: string\n  blockNumber: number\n  status?: number\n}\n\nexport const addTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  from: string\n  approval?: { tokenAddress: string; spender: string }\n  claim?: { recipient: string }\n  summary?: string\n}>('transactions/addTransaction')\nexport const clearAllTransactions = createAction<{ chainId: ChainId }>('transactions/clearAllTransactions')\nexport const finalizeTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  receipt: SerializableTransactionReceipt\n}>('transactions/finalizeTransaction')\nexport const checkedTransaction = createAction<{\n  chainId: ChainId\n  hash: string\n  blockNumber: number\n}>('transactions/checkedTransaction')\n","import { createAction } from '@reduxjs/toolkit'\nimport { Transaction } from 'state/info/types'\nimport { ProtocolData, TokenData, PoolData, ChartEntry, PriceChartEntry } from './types'\n\nexport const updateProtocolData = createAction<{ protocolData: ProtocolData }>('info/protocol/updateProtocolData')\nexport const updateProtocolChartData = createAction<{ chartData: ChartEntry[] }>(\n  'info/protocol/updateProtocolChartData',\n)\nexport const updateProtocolTransactions = createAction<{ transactions: Transaction[] }>(\n  'info/protocol/updateProtocolTransactions',\n)\n\nexport const updatePoolData = createAction<{ pools: PoolData[] }>('info/pools/updatePoolData')\nexport const addPoolKeys = createAction<{ poolAddresses: string[] }>('info/pools/addPoolKeys')\nexport const updatePoolChartData = createAction<{ poolAddress: string; chartData: ChartEntry[] }>(\n  'info/pools/updatePoolChartData',\n)\nexport const updatePoolTransactions = createAction<{ poolAddress: string; transactions: Transaction[] }>(\n  'info/pools/updatePoolTransactions',\n)\n\nexport const updateTokenData = createAction<{ tokens: TokenData[] }>('info/tokens/updateTokenData')\nexport const addTokenKeys = createAction<{ tokenAddresses: string[] }>('info/tokens/addTokenKeys')\nexport const addTokenPoolAddresses = createAction<{ tokenAddress: string; poolAddresses: string[] }>(\n  'info/tokens/addTokenPoolAddresses',\n)\nexport const updateTokenChartData = createAction<{ tokenAddress: string; chartData: ChartEntry[] }>(\n  'info/tokens/updateTokenChartData',\n)\nexport const updateTokenTransactions = createAction<{ tokenAddress: string; transactions: Transaction[] }>(\n  'info/tokens/updateTokenTransactions',\n)\nexport const updateTokenPriceData = createAction<{\n  tokenAddress: string\n  secondsInterval: number\n  priceData?: PriceChartEntry[]\n  oldestFetchedTimestamp: number\n}>('info/tokens/updateTokenPriceData')\n","import styled from 'styled-components'\nimport { Box } from 'packages/uikit'\n\nconst Card = styled(Box)<{\n  width?: string\n  padding?: string\n  border?: string\n  borderRadius?: string\n}>`\n  width: ${({ width }) => width ?? '100%'};\n  border-radius: 16px;\n  padding: 1.25rem;\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n  background-color: ${({ theme }) => theme.colors.background};\n`\nexport default Card\n\nexport const LightCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.background};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nexport const LightGreyCard = styled(Card)`\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport const GreyCard = styled(Card)`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n`\n","import { ChainId } from '@wagyu-swap/sdk'\n\nconst getTokenLogoURL = (address: string) => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n\n  return `https://github.com/mrandall101/assets/blob/master/blockchains/polygon/assets/${address}/logo.png?raw=true`\n}\n\nexport default getTokenLogoURL\n","import { ChainId } from '@wagyu-swap/sdk'\n\nimport { serializeTokens } from './tokens'\nimport { SerializedFarmConfig } from './types'\n\nconst serializedTokens = serializeTokens()\n\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\nconst { MAINNET } = ChainId\n\nexport const MATIC_USDC_LP_PID = chainId === MAINNET ? 1 : 4\nexport const MATIC_ZOLA_LP_PID = chainId === MAINNET ? 2 : 3\n\nconst farms: SerializedFarmConfig[] =\n  chainId === MAINNET\n    ? [\n        {\n          pid: 0,\n          lpSymbol: 'ZOLA',\n          lpAddresses: {\n            80001: '',\n            137: '0x8a226293bC6f697A681B0b29f825c149655fEC2d',\n          },\n          token: serializedTokens.cake,\n          quoteToken: serializedTokens.syrup,\n        },\n        {\n          pid: 1,\n          lpSymbol: 'MATIC-USDC LP',\n          lpAddresses: {\n            80001: '',\n            137: '0x0560829c353EfCDA2F2f15bE15753340B48d44A1',\n          },\n          token: serializedTokens.usdc,\n          quoteToken: serializedTokens.matic,\n        },\n        {\n          pid: 2,\n          lpSymbol: 'MATIC-ZOLA LP',\n          lpAddresses: {\n            80001: '',\n            137: '0x06C93A0D54dAf0Cd3148A651cEdE3dFa18444d00',\n          },\n          token: serializedTokens.cake,\n          quoteToken: serializedTokens.matic,\n        },\n        {\n          pid: 3,\n          lpSymbol: 'SHIB-LAZERMOON LP',\n          lpAddresses: {\n            80001: '',\n            137: '0x0a73a763b1a897db8cc7d77a7db96b10d727487a',\n          },\n          token: serializedTokens.shib,\n          quoteToken: serializedTokens.lazermoon,\n        },\n        {\n          pid: 4,\n          lpSymbol: 'MATIC-KOM LP',\n          lpAddresses: {\n            80001: '',\n            137: '0x176cf3B3161FaB36fE6A8d18facDa391745dCd34',\n          },\n          token: serializedTokens.matic,\n          quoteToken: serializedTokens.kom,\n        },\n        {\n          pid: 5,\n          lpSymbol: 'MATIC-GRT LP',\n          lpAddresses: {\n            80001: '',\n            137: '0x357926e88da8434e16e3a3b951dbef5cddbd7a7f',\n          },\n          token: serializedTokens.grt,\n          quoteToken: serializedTokens.matic,\n        },\n        {\n          pid: 6,\n          lpSymbol: 'BANANA-ZOLA LP',\n          lpAddresses: {\n            80001: '',\n            137: '0x481db2ad06539c8b378647e866679248ddb1b350',\n          },\n          token: serializedTokens.banana,\n          quoteToken: serializedTokens.cake,\n        },\n        {\n          pid: 7,\n          lpSymbol: 'ZOLAMO-SHIB LP',\n          lpAddresses: {\n            80001: '',\n            137: '0x5c0593b2fd62160ee0f1679bed172ea8c2748e7f',\n          },\n          token: serializedTokens.zolamo,\n          quoteToken: serializedTokens.shib,\n        },\n        {\n          pid: 8,\n          lpSymbol: 'ZOLA-KOM LP',\n          lpAddresses: {\n            80001: '',\n            137: '0x64dcbe9ba04ffae0834133c2cf18163a159a34d0',\n          },\n          token: serializedTokens.kom,\n          quoteToken: serializedTokens.cake,\n        },\n        {\n          pid: 9,\n          lpSymbol: 'SHIB-ELON LP',\n          lpAddresses: {\n            80001: '',\n            137: '0x6ca5d03933d7c02ba0fe4d76f4579b9be3f74dc9',\n          },\n          token: serializedTokens.elon,\n          quoteToken: serializedTokens.shib,\n        },\n        {\n          pid: 10,\n          lpSymbol: 'ZOLA-QUICK LP',\n          lpAddresses: {\n            80001: '',\n            137: '0x747af9b21ff5ec6cbf562f77d18bbb08e5da13ee',\n          },\n          token: serializedTokens.quick,\n          quoteToken: serializedTokens.cake,\n        },\n        {\n          pid: 11,\n          lpSymbol: 'USDC-BANANA LP',\n          lpAddresses: {\n            80001: '',\n            137: '0x7a74669059016a587d2fa5b3c377707a551a2b45',\n          },\n          token: serializedTokens.banana,\n          quoteToken: serializedTokens.usdc,\n        },\n        {\n          pid: 12,\n          lpSymbol: 'MATIC-SHIB LP',\n          lpAddresses: {\n            80001: '',\n            137: '0x8871ccd78c68a73b314bcd01dcfcfa2adc66a0da',\n          },\n          token: serializedTokens.shib,\n          quoteToken: serializedTokens.matic,\n        },\n        {\n          pid: 13,\n          lpSymbol: 'MATIC-ZOLAMO LP',\n          lpAddresses: {\n            80001: '',\n            137: '0x8a2df6d7d3695d6e620b1e56890e70bdb25f0d95',\n          },\n          token: serializedTokens.zolamo,\n          quoteToken: serializedTokens.matic,\n        },\n        {\n          pid: 14,\n          lpSymbol: 'ZOLA-MANA LP',\n          lpAddresses: {\n            80001: '',\n            137: '0x8d55dcd84a9bd2afde95848faf7a00a9bbea0b9b',\n          },\n          token: serializedTokens.mana,\n          quoteToken: serializedTokens.cake,\n        },\n        {\n          pid: 15,\n          lpSymbol: 'ZOLA-LAZERMOON LP',\n          lpAddresses: {\n            80001: '',\n            137: '0x9fd38c0ba9b6c69545db1e265f17a4464b00062d',\n          },\n          token: serializedTokens.cake,\n          quoteToken: serializedTokens.lazermoon,\n        },\n        {\n          pid: 16,\n          lpSymbol: 'SHIB-ZOLA LP',\n          lpAddresses: {\n            80001: '',\n            137: '0xa65bc835a3087f3f646914f14cfdeb55b6dfcd58',\n          },\n          token: serializedTokens.shib,\n          quoteToken: serializedTokens.cake,\n        },\n        {\n          pid: 17,\n          lpSymbol: 'ZOLA-DAI LP',\n          lpAddresses: {\n            80001: '',\n            137: '0xb4ee217f4b37ca079f654bcf3da1b6e76bfbe01e',\n          },\n          token: serializedTokens.dai,\n          quoteToken: serializedTokens.cake,\n        },\n        {\n          pid: 18,\n          lpSymbol: 'ZOLA-LUNA LP',\n          lpAddresses: {\n            80001: '',\n            137: '0xc44582cd763d8a38a8abdcdcb5c7aff77debcb22',\n          },\n          token: serializedTokens.cake,\n          quoteToken: serializedTokens.luna,\n        },\n        {\n          pid: 19,\n          lpSymbol: 'MATIC-MANA LP',\n          lpAddresses: {\n            80001: '',\n            137: '0xc7283b4dac72bbb7754cf61359ea9d253ef7b73b',\n          },\n          token: serializedTokens.matic,\n          quoteToken: serializedTokens.mana,\n        },\n        {\n          pid: 20,\n          lpSymbol: 'MATIC-WBTC LP',\n          lpAddresses: {\n            80001: '',\n            137: '0xd324191782ba5e37afd262c08d67997fc6ffe70d',\n          },\n          token: serializedTokens.wbtc,\n          quoteToken: serializedTokens.matic,\n        },\n        {\n          pid: 21,\n          lpSymbol: 'MATIC-QUICK LP',\n          lpAddresses: {\n            80001: '',\n            137: '0xe2ee5a6738ce4ac42c94433d4cbae764b6fc7d09',\n          },\n          token: serializedTokens.matic,\n          quoteToken: serializedTokens.quick,\n        },\n        {\n          pid: 22,\n          lpSymbol: 'MATIC-ELON LP',\n          lpAddresses: {\n            80001: '',\n            137: '0xf0ce4c5150c2bf1f36582f7375075e1ffae1245c',\n          },\n          token: serializedTokens.elon,\n          quoteToken: serializedTokens.matic,\n        },\n        {\n          pid: 23,\n          lpSymbol: 'ZOLA-USDT LP',\n          lpAddresses: {\n            80001: '',\n            137: '0xf72088149604e36a745f4d76fab03fd3ac39dcdc',\n          },\n          token: serializedTokens.cake,\n          quoteToken: serializedTokens.usdt,\n        },\n        {\n          pid: 24,\n          lpSymbol: 'MATIC-LAZERMOON LP',\n          lpAddresses: {\n            80001: '',\n            137: '0xffb233ca5c6afcfedb9292080e6a45ed1c997a75',\n          },\n          token: serializedTokens.matic,\n          quoteToken: serializedTokens.lazermoon,\n        },\n         {\n          pid: 25,\n          lpSymbol: 'MATIC-SKILYNE LP',\n          lpAddresses: {\n            80001: '',\n            137: '0x7ddC0E80eBA600DbF15B1e80a008d2Eb2053B024',\n          },\n          token: serializedTokens.matic,\n          quoteToken: serializedTokens.skilyne,\n        },\n      ]\n    : [\n        /**\n         * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\n         */\n        {\n          pid: 0,\n          lpSymbol: 'ZOLA',\n          lpAddresses: {\n            80001: '',\n            137: '0xDA5B294F6a8Af4236F853D17d33ba584D7787f10',\n          },\n          token: serializedTokens.cake,\n          quoteToken: serializedTokens.cake,\n        },\n        {\n          pid: 251,\n          lpSymbol: 'MATIC-ZOLA LP',\n          lpAddresses: {\n            80001: '',\n            137: '0x06C93A0D54dAf0Cd3148A651cEdE3dFa18444d00',\n          },\n          token: serializedTokens.cake,\n          quoteToken: serializedTokens.matic,\n        },\n        {\n          pid: 252,\n          lpSymbol: 'MATIC-USDC LP',\n          lpAddresses: {\n            80001: '',\n            137: '0x0560829c353EfCDA2F2f15bE15753340B48d44A1',\n          },\n          token: serializedTokens.usdc,\n          quoteToken: serializedTokens.matic,\n        },\n        {\n          pid: 1,\n          lpSymbol: 'MATIC-QUICK LP',\n          lpAddresses: {\n            80001: '',\n            137: '0x8a226293bC6f697A681B0b29f825c149655fEC2d',\n          },\n          token: serializedTokens.quick,\n          quoteToken: serializedTokens.matic,\n        },\n        {\n          pid: 3,\n          lpSymbol: 'MATIC-ZOLA LP',\n          lpAddresses: {\n            80001: '',\n            137: '0x06C93A0D54dAf0Cd3148A651cEdE3dFa18444d00',\n          },\n          token: serializedTokens.cake,\n          quoteToken: serializedTokens.matic,\n        },\n        {\n          pid: 4,\n          lpSymbol: 'MATIC-ZOLAMO LP',\n          lpAddresses: {\n            80001: '',\n            137: '0x8a2Df6D7d3695D6E620B1E56890e70Bdb25F0D95',\n          },\n          token: serializedTokens.matic,\n          quoteToken: serializedTokens.zolamo,\n        },\n      ]\n\nexport default farms\n\n/*\n\"MATIC_TE6_LP\": {\n        \"pair\": \"0x04394d1d07F24C30d82D06097301Da1f9732E54f\",\n        \"tokenA\": \"0xd4157755C3e63C8d599d450a90f7052a4aAA6cC2\",\n        \"tokenB\": \"0x24f1a66765601999c853136611f5AC999Ca77F50\"\n    },\n    \"MATIC_TE9_LP\": {\n        \"pair\": \"0x3124E72d06f181a225e9E587C1ca4Da5E905Bd37\",\n        \"tokenA\": \"0xd4157755C3e63C8d599d450a90f7052a4aAA6cC2\",\n        \"tokenB\": \"0xb8075860b634c367dA432a8Bc84ad1556AB19679\"\n    },\n    \"MATIC_TE12_LP\": {\n        \"pair\": \"0xBBf16449Aa3D7cd988810bf966982f68d1154023\",\n        \"tokenA\": \"0xd4157755C3e63C8d599d450a90f7052a4aAA6cC2\",\n        \"tokenB\": \"0x660F4DfEe75a28525DdB7916556418CDc9b329D3\"\n    },\n    \"MATIC_TE18_LP\": {\n        \"pair\": \"0x4522640cF08B6acba90dDA9D4e6Ae3003b4e0ED7\",\n        \"tokenA\": \"0xd4157755C3e63C8d599d450a90f7052a4aAA6cC2\",\n        \"tokenB\": \"0xE76592830037d81e1cD5A49d912e8BFf029901Be\"\n    },\n    \"MATIC_ETH_LP\": {\n        \"pair\": \"0x2537C7D256D7aec0f41BEf15C93Ec269D263F772\",\n        \"tokenA\": \"0xd4157755C3e63C8d599d450a90f7052a4aAA6cC2\",\n        \"tokenB\": \"0x3538C7f88aDbc8ad1F435f7EA70287e26b926344\"\n    },\n    \"MATIC_USDT_LP\": {\n        \"pair\": \"0x681Ce22f568720eeFA34548d360c94721aCE1A50\",\n        \"tokenA\": \"0xd4157755C3e63C8d599d450a90f7052a4aAA6cC2\",\n        \"tokenB\": \"0x6Ef054B3E3C3C83E14527E8fa593c2c4435A6ea4\"\n    },\n    \"MATIC_USDC_LP\": {\n        \"pair\": \"0xe29d45F71C3132391dFD0F92e54fcA74DE37c45A\",\n        \"tokenA\": \"0xd4157755C3e63C8d599d450a90f7052a4aAA6cC2\",\n        \"tokenB\": \"0x6b82bDB5a1AdFfa3816D1F942D60f0269647C646\"\n    },\n    \"MATIC_BUSD_LP\": {\n        \"pair\": \"0x02d14903A8423027643e185ae0277D1d09e22497\",\n        \"tokenA\": \"0xd4157755C3e63C8d599d450a90f7052a4aAA6cC2\",\n        \"tokenB\": \"0xe2172a8E1762ae9962A59EE88a731522A61a4cc9\"\n    },\n    \"MATIC_ZOLA_LP\": {\n        \"pair\": \"0x518F4Fea9084D981f5faA63F7b549eC922333e54\",\n        \"tokenA\": \"0xd4157755C3e63C8d599d450a90f7052a4aAA6cC2\",\n        \"tokenB\": \"0x1bC60cFc522A264639866D47C634EfCdddd624eA\"\n    }\n*/\n","// 1 day, 7 days, 30 days, 1 year, 5 years\nconst DAYS_TO_CALCULATE_AGAINST = [1, 7, 30, 365, 1825]\n\n/**\n *\n * @param principalInUSD - amount user wants to invest in USD\n * @param apr - farm or pool apr as percentage. If its farm APR its only cake rewards APR without LP rewards APR\n * @param earningTokenPrice - price of reward token\n * @param compoundFrequency - how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\n * @param performanceFee - performance fee as percentage\n * @returns an array of token values earned as interest, with each element representing interest earned over a different period of time (DAYS_TO_CALCULATE_AGAINST)\n */\nexport const getInterestBreakdown = ({\n  principalInUSD,\n  apr,\n  earningTokenPrice,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}: {\n  principalInUSD: number\n  apr: number\n  earningTokenPrice: number\n  compoundFrequency?: number\n  performanceFee?: number\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  const aprAsDecimal = apr / 100\n\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  // and also cause rounding errors\n  const isHighValueToken = Math.round(earningTokenPrice / 1000) > 0\n  const roundingDecimalsNew = isHighValueToken ? 5 : 3\n\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\n    const daysAsDecimalOfYear = days / 365\n    // Calculate the starting TOKEN balance with a dollar balance of principalInUSD.\n    const principal = principalInUSD / earningTokenPrice\n    let interestEarned = principal * aprAsDecimal * (days / 365)\n    if (timesCompounded !== 0) {\n      // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n      const accruedAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n      // To get the TOKEN amount earned, deduct the amount after compounding (accruedAmount) from the starting TOKEN balance (principal)\n      interestEarned = accruedAmount - principal\n      if (performanceFee) {\n        const performanceFeeAsDecimal = performanceFee / 100\n        const performanceFeeAsAmount = interestEarned * performanceFeeAsDecimal\n        interestEarned -= performanceFeeAsAmount\n      }\n    }\n    return parseFloat(interestEarned.toFixed(roundingDecimalsNew))\n  })\n}\n\n/**\n * @param interest how much USD amount you aim to make\n * @param apr APR of farm/pool\n * @param compoundingFrequency how many compounds per 1 day, e.g. 1 = one per day, 0.142857142 - once per week\n * @returns an array of principal values needed to reach target interest, with each element representing principal needed for a different period of time (DAYS_TO_CALCULATE_AGAINST)\n */\nexport const getPrincipalForInterest = (\n  interest: number,\n  apr: number,\n  compoundingFrequency: number,\n  performanceFee = 0,\n) => {\n  return DAYS_TO_CALCULATE_AGAINST.map((days) => {\n    const apyAsDecimal = getApy(apr, compoundingFrequency, days, performanceFee)\n    // console.log('inside', interest, apyAsDecimal)\n    // const apyAsBN = new BigNumber(apyAsDecimal).decimalPlaces(6, BigNumber.ROUND_DOWN).toNumber()\n    return parseFloat((interest / apyAsDecimal).toFixed(2))\n  })\n}\n\n/**\n * Given APR returns APY\n * @param apr APR as percentage\n * @param compoundFrequency how many compounds per day\n * @param days if other than 365 adjusts (A)PY for period less than a year\n * @param performanceFee performance fee as percentage\n * @returns APY as decimal\n */\nexport const getApy = (apr: number, compoundFrequency = 1, days = 365, performanceFee = 0) => {\n  const daysAsDecimalOfYear = days / 365\n  const aprAsDecimal = apr / 100\n  const timesCompounded = 365 * compoundFrequency\n  let apyAsDecimal = (apr / 100) * daysAsDecimalOfYear\n  if (timesCompounded > 0) {\n    apyAsDecimal = (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear) - 1\n  }\n  if (performanceFee) {\n    const performanceFeeAsDecimal = performanceFee / 100\n    const takenAsPerformanceFee = apyAsDecimal * performanceFeeAsDecimal\n    apyAsDecimal -= takenAsPerformanceFee\n  }\n  return apyAsDecimal\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }: { amountEarned: number; amountInvested: number }) => {\n  if (amountInvested === 0) {\n    return 0\n  }\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import { ChainId } from '@wagyu-swap/sdk'\nimport store from 'state'\nimport { GAS_PRICE_GWEI } from 'state/user/hooks/helpers'\n\n/**\n * Function to return gasPrice outwith a react component\n */\nconst getGasPrice = (): string => {\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  const state = store.getState()\n  const userGas = state.user.gasPrice || GAS_PRICE_GWEI.default\n  return chainId === ChainId.MAINNET.toString() ? userGas : GAS_PRICE_GWEI.testnet\n}\n\nexport default getGasPrice\n","import { Language } from 'packages/uikit'\n\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  'ar-SA': AR,\n  'bn-BD': BN,\n  'en-US': EN,\n  'de-DE': DE,\n  'el-GR': EL,\n  'es-ES': ESES,\n  'fi-FI': FI,\n  'fil-PH': FIL,\n  'fr-FR': FR,\n  'hi-IN': HI,\n  'hu-HU': HU,\n  'id-ID': ID,\n  'it-IT': IT,\n  'ja-JP': JA,\n  'ko-KR': KO,\n  'nl-NL': NL,\n  'pl-PL': PL,\n  'pt-BR': PTBR,\n  'pt-PT': PTPT,\n  'ro-RO': RO,\n  'ru-RU': RU,\n  'sv-SE': SVSE,\n  'ta-IN': TA,\n  'tr-TR': TR,\n  'uk-UA': UK,\n  'vi-VN': VI,\n  'zh-CN': ZHCN,\n  'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/ZOLAFarm.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { SerializedFarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: SerializedFarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingCake',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport priceHelperLpsConfig from 'config/constants/priceHelperLps'\nimport fetchFarms from './fetchFarms'\nimport fetchFarmsPrices from './fetchFarmsPrices'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { SerializedFarmsState, SerializedFarm } from '../types'\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: SerializedFarmsState = {\n  data: noAccountFarmConfig,\n  loadArchivedFarmsData: false,\n  userDataLoaded: false,\n}\n\nexport const nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\n// Async thunks\nexport const fetchFarmsPublicDataAsync = createAsyncThunk<SerializedFarm[], number[]>(\n  'farms/fetchFarmsPublicDataAsync',\n  async (pids) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n\n    // Add price helper farms\n    const farmsWithPriceHelpers = farmsToFetch.concat(priceHelperLpsConfig)\n\n    const farms = await fetchFarms(farmsWithPriceHelpers)\n\n    const farmsWithPrices = await fetchFarmsPrices(farms)\n\n    // Filter out price helper LP config farms\n    const farmsWithoutHelperLps = farmsWithPrices.filter((farm: SerializedFarm) => {\n      return farm.pid || farm.pid === 0\n    })\n\n    return farmsWithoutHelperLps\n  },\n)\n\ninterface FarmUserDataResponse {\n  pid: number\n  allowance: string\n  tokenBalance: string\n  stakedBalance: string\n  earnings: string\n}\n\nexport const fetchFarmUserDataAsync = createAsyncThunk<FarmUserDataResponse[], { account: string; pids: number[] }>(\n  'farms/fetchFarmUserDataAsync',\n  async ({ account, pids }) => {\n    const farmsToFetch = farmsConfig.filter((farmConfig) => pids.includes(farmConfig.pid))\n    const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n    const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n    const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n    const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n    return userFarmAllowances.map((farmAllowance, index) => {\n      return {\n        pid: farmsToFetch[index].pid,\n        allowance: userFarmAllowances[index],\n        tokenBalance: userFarmTokenBalances[index],\n        stakedBalance: userStakedBalances[index],\n        earnings: userFarmEarnings[index],\n      }\n    })\n  },\n)\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n  extraReducers: (builder) => {\n    // Update farms with live data\n    builder.addCase(fetchFarmsPublicDataAsync.fulfilled, (state, action) => {\n      state.data = state.data.map((farm) => {\n        const liveFarmData = action.payload.find((farmData) => farmData.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    })\n\n    // Update farms with user data\n    builder.addCase(fetchFarmUserDataAsync.fulfilled, (state, action) => {\n      action.payload.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    })\n  },\n})\n\n// Actions\nexport const { setLoadArchivedFarmsData } = farmsSlice.actions\n\nexport default farmsSlice.reducer\n","import Cookies from 'js-cookie'\nimport { Profile } from 'state/types'\nimport { GetUserProfileResponse } from 'utils/types'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/nfts/types'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { getTeam } from 'state/teams/helpers'\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst transformProfileResponse = (profileResponse: GetUserProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: userId.toNumber(),\n    points: numberPoints.toNumber(),\n    teamId: teamId.toNumber(),\n    tokenId: tokenId.toNumber(),\n    nftAddress,\n    isActive,\n  }\n}\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport const getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address.toLowerCase()}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\n/**\n * Intended to be used for getting a profile avatar\n */\nexport const getProfileAvatar = async (address: string) => {\n  try {\n    const hasRegistered = await profileContract.hasRegistered(address)\n\n    if (!hasRegistered) {\n      return null\n    }\n\n    const profileResponse = await profileContract.getUserProfile(address)\n    const { tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n\n    if (!isActive) {\n      return null\n    }\n\n    const nft = await getNftByTokenId(nftAddress, tokenId)\n    return nft\n  } catch {\n    return null\n  }\n}\n\nexport const getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = await profileContract.hasRegistered(address)\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.getUserProfile(address)\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      nft = await getNftByTokenId(nftAddress, tokenId)\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft?.images.sm}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport { Nft } from 'config/constants/nfts/types'\nimport { getProfile, getProfileAvatar, GetProfileResponse, getUsername } from './helpers'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n  profileAvatars: {},\n}\n\nexport const fetchProfileAvatar = createAsyncThunk<{ account: string; nft: Nft }, string>(\n  'profile/fetchProfileAvatar',\n  async (account) => {\n    const nft = await getProfileAvatar(account)\n    return { account, nft }\n  },\n)\n\nexport const fetchProfileUsername = createAsyncThunk<{ account: string; username: string }, string>(\n  'profile/fetchProfileUsername',\n  async (account) => {\n    const username = await getUsername(account)\n    return { account, username }\n  },\n)\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      state.isInitialized = true\n      state.isLoading = false\n      state.hasRegistered = hasRegistered\n      state.data = profile\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchProfileUsername.fulfilled, (state, action) => {\n      const { account, username } = action.payload\n\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          username,\n        }\n      } else {\n        state.profileAvatars[account] = { username, nft: null }\n      }\n    })\n    builder.addCase(fetchProfileAvatar.fulfilled, (state, action) => {\n      const { account, nft } = action.payload\n\n      if (state.profileAvatars[account]) {\n        state.profileAvatars[account] = {\n          ...state.profileAvatars[account],\n          nft,\n        }\n      } else {\n        state.profileAvatars[account] = { username: null, nft }\n      }\n    })\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\n  profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","import { parseUnits } from '@ethersproject/units'\nimport { Currency, CurrencyAmount, ETHER, JSBI, Token, TokenAmount, Trade } from '@wagyu-swap/sdk'\nimport { ParsedQs } from 'qs'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useENS from 'hooks/ENS/useENS'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrency } from 'hooks/Tokens'\nimport { useTradeExactIn, useTradeExactOut } from 'hooks/Trades'\nimport useParsedQueryString from 'hooks/useParsedQueryString'\nimport { useTranslation } from 'contexts/Localization'\nimport { isAddress } from 'utils'\nimport { computeSlippageAdjustedAmounts } from 'utils/prices'\nimport { AppDispatch, AppState } from '../index'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, replaceSwapState, selectCurrency, setRecipient, switchCurrencies, typeInput } from './actions'\nimport { SwapState } from './reducer'\nimport { useUserSlippageTolerance } from '../user/hooks'\n\nexport function useSwapState(): AppState['swap'] {\n  return useSelector<AppState, AppState['swap']>((state) => state.swap)\n}\n\nexport function useSwapActionHandlers(): {\n  onCurrencySelection: (field: Field, currency: Currency) => void\n  onSwitchTokens: () => void\n  onUserInput: (field: Field, typedValue: string) => void\n  onChangeRecipient: (recipient: string | null) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n  const onCurrencySelection = useCallback(\n    (field: Field, currency: Currency) => {\n      dispatch(\n        selectCurrency({\n          field,\n          currencyId: currency instanceof Token ? currency.address : currency === ETHER ? 'MATIC' : '',\n        }),\n      )\n    },\n    [dispatch],\n  )\n\n  const onSwitchTokens = useCallback(() => {\n    dispatch(switchCurrencies())\n  }, [dispatch])\n\n  const onUserInput = useCallback(\n    (field: Field, typedValue: string) => {\n      dispatch(typeInput({ field, typedValue }))\n    },\n    [dispatch],\n  )\n\n  const onChangeRecipient = useCallback(\n    (recipient: string | null) => {\n      dispatch(setRecipient({ recipient }))\n    },\n    [dispatch],\n  )\n\n  return {\n    onSwitchTokens,\n    onCurrencySelection,\n    onUserInput,\n    onChangeRecipient,\n  }\n}\n\n// try to parse a user entered amount for a given token\nexport function tryParseAmount(value?: string, currency?: Currency): CurrencyAmount | undefined {\n  if (!value || !currency) {\n    return undefined\n  }\n  try {\n    const typedValueParsed = parseUnits(value, currency.decimals).toString()\n    if (typedValueParsed !== '0') {\n      return currency instanceof Token\n        ? new TokenAmount(currency, JSBI.BigInt(typedValueParsed))\n        : CurrencyAmount.ether(JSBI.BigInt(typedValueParsed))\n    }\n  } catch (error) {\n    // should fail if the user specifies too many decimal places of precision (or maybe exceed max uint?)\n    console.debug(`Failed to parse input amount: \"${value}\"`, error)\n  }\n  // necessary for all paths to return a value\n  return undefined\n}\n\nconst BAD_RECIPIENT_ADDRESSES: string[] = [\n  // TODO: addresses\n  '0x90594Eaff8567C16cF27528181d99a125B8D5cf3', // v2 factory\n  '0x93848497Fe87da12a9F3E213b8445d9712257558', // v2 router 02\n]\n\n/**\n * Returns true if any of the pairs or tokens in a trade have the given checksummed address\n * @param trade to check for the given address\n * @param checksummedAddress address to check in the pairs and tokens\n */\nfunction involvesAddress(trade: Trade, checksummedAddress: string): boolean {\n  return (\n    trade.route.path.some((token) => token.address === checksummedAddress) ||\n    trade.route.pairs.some((pair) => pair.liquidityToken.address === checksummedAddress)\n  )\n}\n\n// from the current swap inputs, compute the best trade and return it.\nexport function useDerivedSwapInfo(): {\n  currencies: { [field in Field]?: Currency }\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmount: CurrencyAmount | undefined\n  v2Trade: Trade | undefined\n  inputError?: string\n} {\n  const { account } = useActiveWeb3React()\n  const { t } = useTranslation()\n\n  const {\n    independentField,\n    typedValue,\n    [Field.INPUT]: { currencyId: inputCurrencyId },\n    [Field.OUTPUT]: { currencyId: outputCurrencyId },\n    recipient,\n  } = useSwapState()\n\n  const inputCurrency = useCurrency(inputCurrencyId)\n  const outputCurrency = useCurrency(outputCurrencyId)\n  const recipientLookup = useENS(recipient ?? undefined)\n  const to: string | null = (recipient === null ? account : recipientLookup.address) ?? null\n\n  const relevantTokenBalances = useCurrencyBalances(account ?? undefined, [\n    inputCurrency ?? undefined,\n    outputCurrency ?? undefined,\n  ])\n\n  const isExactIn: boolean = independentField === Field.INPUT\n  const parsedAmount = tryParseAmount(typedValue, (isExactIn ? inputCurrency : outputCurrency) ?? undefined)\n\n  const bestTradeExactIn = useTradeExactIn(isExactIn ? parsedAmount : undefined, outputCurrency ?? undefined)\n  const bestTradeExactOut = useTradeExactOut(inputCurrency ?? undefined, !isExactIn ? parsedAmount : undefined)\n\n  const v2Trade = isExactIn ? bestTradeExactIn : bestTradeExactOut\n\n  const currencyBalances = {\n    [Field.INPUT]: relevantTokenBalances[0],\n    [Field.OUTPUT]: relevantTokenBalances[1],\n  }\n\n  const currencies: { [field in Field]?: Currency } = {\n    [Field.INPUT]: inputCurrency ?? undefined,\n    [Field.OUTPUT]: outputCurrency ?? undefined,\n  }\n\n  let inputError: string | undefined\n  if (!account) {\n    inputError = t('Connect Wallet')\n  }\n\n  if (!parsedAmount) {\n    inputError = inputError ?? t('Enter an amount')\n  }\n\n  if (!currencies[Field.INPUT] || !currencies[Field.OUTPUT]) {\n    inputError = inputError ?? t('Select a token')\n  }\n\n  const formattedTo = isAddress(to)\n  if (!to || !formattedTo) {\n    inputError = inputError ?? t('Enter a recipient')\n  } else if (\n    BAD_RECIPIENT_ADDRESSES.indexOf(formattedTo) !== -1 ||\n    (bestTradeExactIn && involvesAddress(bestTradeExactIn, formattedTo)) ||\n    (bestTradeExactOut && involvesAddress(bestTradeExactOut, formattedTo))\n  ) {\n    inputError = inputError ?? t('Invalid recipient')\n  }\n\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const slippageAdjustedAmounts = v2Trade && allowedSlippage && computeSlippageAdjustedAmounts(v2Trade, allowedSlippage)\n\n  // compare input balance to max input based on version\n  const [balanceIn, amountIn] = [\n    currencyBalances[Field.INPUT],\n    slippageAdjustedAmounts ? slippageAdjustedAmounts[Field.INPUT] : null,\n  ]\n\n  if (balanceIn && amountIn && balanceIn.lessThan(amountIn)) {\n    inputError = t('Insufficient %symbol% balance', { symbol: amountIn.currency.symbol })\n  }\n\n  return {\n    currencies,\n    currencyBalances,\n    parsedAmount,\n    v2Trade: v2Trade ?? undefined,\n    inputError,\n  }\n}\n\nfunction parseCurrencyFromURLParameter(urlParam: any): string {\n  if (typeof urlParam === 'string') {\n    const valid = isAddress(urlParam)\n    if (valid) return valid\n    if (urlParam.toUpperCase() === 'MATIC') return 'MATIC'\n    if (valid === false) return 'MATIC'\n  }\n  return 'MATIC' ?? ''\n}\n\nfunction parseTokenAmountURLParameter(urlParam: any): string {\n  // eslint-disable-next-line no-restricted-globals\n  return typeof urlParam === 'string' && !isNaN(parseFloat(urlParam)) ? urlParam : ''\n}\n\nfunction parseIndependentFieldURLParameter(urlParam: any): Field {\n  return typeof urlParam === 'string' && urlParam.toLowerCase() === 'output' ? Field.OUTPUT : Field.INPUT\n}\n\nconst ENS_NAME_REGEX = /^[-a-zA-Z0-9@:%._+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_+.~#?&/=]*)?$/\nconst ADDRESS_REGEX = /^0x[a-fA-F0-9]{40}$/\nfunction validatedRecipient(recipient: any): string | null {\n  if (typeof recipient !== 'string') return null\n  const address = isAddress(recipient)\n  if (address) return address\n  if (ENS_NAME_REGEX.test(recipient)) return recipient\n  if (ADDRESS_REGEX.test(recipient)) return recipient\n  return null\n}\n\nexport function queryParametersToSwapState(parsedQs: ParsedQs): SwapState {\n  let inputCurrency = parseCurrencyFromURLParameter(parsedQs.inputCurrency)\n  let outputCurrency = parseCurrencyFromURLParameter(parsedQs.outputCurrency)\n  if (inputCurrency === outputCurrency) {\n    if (typeof parsedQs.outputCurrency === 'string') {\n      inputCurrency = ''\n    } else {\n      outputCurrency = ''\n    }\n  }\n\n  const recipient = validatedRecipient(parsedQs.recipient)\n\n  return {\n    [Field.INPUT]: {\n      currencyId: inputCurrency,\n    },\n    [Field.OUTPUT]: {\n      currencyId: outputCurrency,\n    },\n    typedValue: parseTokenAmountURLParameter(parsedQs.exactAmount),\n    independentField: parseIndependentFieldURLParameter(parsedQs.exactField),\n    recipient,\n  }\n}\n\n// updates the swap state to use the defaults for a given network\nexport function useDefaultsFromURLSearch():\n  | { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined }\n  | undefined {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const parsedQs = useParsedQueryString()\n  const [result, setResult] = useState<\n    { inputCurrencyId: string | undefined; outputCurrencyId: string | undefined } | undefined\n  >()\n\n  useEffect(() => {\n    if (!chainId) return\n    const parsed = queryParametersToSwapState(parsedQs)\n\n    dispatch(\n      replaceSwapState({\n        typedValue: parsed.typedValue,\n        field: parsed.independentField,\n        inputCurrencyId: parsed[Field.INPUT].currencyId,\n        outputCurrencyId: parsed[Field.OUTPUT].currencyId,\n        recipient: null,\n      }),\n    )\n\n    setResult({ inputCurrencyId: parsed[Field.INPUT].currencyId, outputCurrencyId: parsed[Field.OUTPUT].currencyId })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch, chainId])\n\n  return result\n}\n","import { parse, ParsedQs } from 'qs'\nimport { useMemo } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nexport default function useParsedQueryString(): ParsedQs {\n  const { search } = useLocation()\n  return useMemo(\n    () => (search && search.length > 1 ? parse(search, { parseArrays: false, ignoreQueryPrefix: true }) : {}),\n    [search],\n  )\n}\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\nimport { LotteryStatus, LotteryTicket } from 'config/constants/types'\nimport lotteryV2Abi from 'config/abi/lotteryV2.json'\nimport { getLotteryV2Address } from 'utils/addressHelpers'\nimport { multicallv2 } from 'utils/multicall'\nimport { LotteryRound, LotteryRoundUserTickets, LotteryResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\nimport { useMemo } from 'react'\nimport { ethersToSerializedBigNumber } from 'utils/bigNumber'\nimport { NUM_ROUNDS_TO_FETCH_FROM_NODES } from 'config/constants/lottery'\n\nconst lotteryContract = getLotteryV2Contract()\n\nconst processViewLotterySuccessResponse = (response, lotteryId: string): LotteryResponse => {\n  const {\n    status,\n    startTime,\n    endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee,\n    firstTicketId,\n    lastTicketId,\n    amountCollectedInCake,\n    finalNumber,\n    cakePerBracket,\n    countWinnersPerBracket,\n    rewardsBreakdown,\n  } = response\n\n  const statusKey = Object.keys(LotteryStatus)[status]\n  const serializedCakePerBracket = cakePerBracket.map((cakeInBracket) => ethersToSerializedBigNumber(cakeInBracket))\n  const serializedCountWinnersPerBracket = countWinnersPerBracket.map((winnersInBracket) =>\n    ethersToSerializedBigNumber(winnersInBracket),\n  )\n  const serializedRewardsBreakdown = rewardsBreakdown.map((reward) => ethersToSerializedBigNumber(reward))\n\n  return {\n    isLoading: false,\n    lotteryId,\n    status: LotteryStatus[statusKey],\n    startTime: startTime?.toString(),\n    endTime: endTime?.toString(),\n    priceTicketInCake: ethersToSerializedBigNumber(priceTicketInCake),\n    discountDivisor: discountDivisor?.toString(),\n    treasuryFee: treasuryFee?.toString(),\n    firstTicketId: firstTicketId?.toString(),\n    lastTicketId: lastTicketId?.toString(),\n    amountCollectedInCake: ethersToSerializedBigNumber(amountCollectedInCake),\n    finalNumber,\n    cakePerBracket: serializedCakePerBracket,\n    countWinnersPerBracket: serializedCountWinnersPerBracket,\n    rewardsBreakdown: serializedRewardsBreakdown,\n  }\n}\n\nconst processViewLotteryErrorResponse = (lotteryId: string): LotteryResponse => {\n  return {\n    isLoading: true,\n    lotteryId,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n  }\n}\n\nexport const fetchLottery = async (lotteryId: string): Promise<LotteryResponse> => {\n  try {\n    const lotteryData = await lotteryContract.viewLottery(lotteryId)\n    return processViewLotterySuccessResponse(lotteryData, lotteryId)\n  } catch (error) {\n    return processViewLotteryErrorResponse(lotteryId)\n  }\n}\n\nexport const fetchMultipleLotteries = async (lotteryIds: string[]): Promise<LotteryResponse[]> => {\n  const calls = lotteryIds.map((id) => ({\n    name: 'viewLottery',\n    address: getLotteryV2Address(),\n    params: [id],\n  }))\n  try {\n    const multicallRes = await multicallv2(lotteryV2Abi, calls, { requireSuccess: false })\n    const processedResponses = multicallRes.map((res, index) =>\n      processViewLotterySuccessResponse(res[0], lotteryIds[index]),\n    )\n    return processedResponses\n  } catch (error) {\n    console.error(error)\n    return calls.map((call, index) => processViewLotteryErrorResponse(lotteryIds[index]))\n  }\n}\n\nexport const fetchCurrentLotteryIdAndMaxBuy = async () => {\n  try {\n    const calls = ['currentLotteryId', 'maxNumberTicketsPerBuyOrClaim'].map((method) => ({\n      address: getLotteryV2Address(),\n      name: method,\n    }))\n    const [[currentLotteryId], [maxNumberTicketsPerBuyOrClaim]] = (await multicallv2(\n      lotteryV2Abi,\n      calls,\n    )) as ethers.BigNumber[][]\n\n    return {\n      currentLotteryId: currentLotteryId ? currentLotteryId.toString() : null,\n      maxNumberTicketsPerBuyOrClaim: maxNumberTicketsPerBuyOrClaim ? maxNumberTicketsPerBuyOrClaim.toString() : null,\n    }\n  } catch (error) {\n    return {\n      currentLotteryId: null,\n      maxNumberTicketsPerBuyOrClaim: null,\n    }\n  }\n}\n\nexport const getRoundIdsArray = (currentLotteryId: string): string[] => {\n  const currentIdAsInt = parseInt(currentLotteryId, 10)\n  const roundIds = []\n  for (let i = 0; i < NUM_ROUNDS_TO_FETCH_FROM_NODES; i++) {\n    if (currentIdAsInt - i > 0) roundIds.push(currentIdAsInt - i)\n  }\n  return roundIds.map((roundId) => roundId.toString())\n}\n\nexport const useProcessLotteryResponse = (\n  lotteryData: LotteryResponse & { userTickets?: LotteryRoundUserTickets },\n): LotteryRound => {\n  const {\n    priceTicketInCake: priceTicketInCakeAsString,\n    discountDivisor: discountDivisorAsString,\n    amountCollectedInCake: amountCollectedInCakeAsString,\n  } = lotteryData\n\n  const discountDivisor = useMemo(() => {\n    return new BigNumber(discountDivisorAsString)\n  }, [discountDivisorAsString])\n\n  const priceTicketInCake = useMemo(() => {\n    return new BigNumber(priceTicketInCakeAsString)\n  }, [priceTicketInCakeAsString])\n\n  const amountCollectedInCake = useMemo(() => {\n    return new BigNumber(amountCollectedInCakeAsString)\n  }, [amountCollectedInCakeAsString])\n\n  return {\n    isLoading: lotteryData.isLoading,\n    lotteryId: lotteryData.lotteryId,\n    userTickets: lotteryData.userTickets,\n    status: lotteryData.status,\n    startTime: lotteryData.startTime,\n    endTime: lotteryData.endTime,\n    priceTicketInCake,\n    discountDivisor,\n    treasuryFee: lotteryData.treasuryFee,\n    firstTicketId: lotteryData.firstTicketId,\n    lastTicketId: lotteryData.lastTicketId,\n    amountCollectedInCake,\n    finalNumber: lotteryData.finalNumber,\n    cakePerBracket: lotteryData.cakePerBracket,\n    countWinnersPerBracket: lotteryData.countWinnersPerBracket,\n    rewardsBreakdown: lotteryData.rewardsBreakdown,\n  }\n}\n\nexport const hasRoundBeenClaimed = (tickets: LotteryTicket[]): boolean => {\n  const claimedTickets = tickets.filter((ticket) => ticket.status)\n  return claimedTickets.length > 0\n}\n","import { useCallback } from 'react'\nimport ethers, { Contract, CallOverrides } from 'ethers'\nimport { useGasPrice } from 'state/user/hooks'\nimport { get } from 'lodash'\n\n/**\n * Perform a contract call with a gas price returned from useGasPrice\n * @param contract Used to perform the call\n * @param methodName The name of the method called\n * @param methodArgs An array of arguments to pass to the method\n * @param overrides An overrides object to pass to the method. gasPrice passed in here will take priority over the price returned by useGasPrice\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport function useCallWithGasPrice() {\n  const gasPrice = useGasPrice()\n\n  const callWithGasPrice = useCallback(\n    async (\n      contract: Contract,\n      methodName: string,\n      methodArgs: any[] = [],\n      overrides: CallOverrides = null,\n    ): Promise<ethers.providers.TransactionResponse> => {\n      const contractMethod = get(contract, methodName)\n      const hasManualGasPriceOverride = overrides?.gasPrice\n\n      const tx = await contractMethod(\n        ...methodArgs,\n        hasManualGasPriceOverride ? { ...overrides } : { ...overrides, gasPrice },\n      )\n\n      return tx\n    },\n    [gasPrice],\n  )\n\n  return { callWithGasPrice }\n}\n","import { useEffect, useState } from 'react'\nimport { ethers } from 'ethers'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport tokens from 'config/constants/tokens'\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from './useRefresh'\nimport useLastUpdated from './useLastUpdated'\n\ntype UseTokenBalanceState = {\n  balance: BigNumber\n  fetchStatus: FetchStatus\n}\n\nexport enum FetchStatus {\n  NOT_FETCHED = 'not-fetched',\n  SUCCESS = 'success',\n  FAILED = 'failed',\n}\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const { NOT_FETCHED, SUCCESS, FAILED } = FetchStatus\n  const [balanceState, setBalanceState] = useState<UseTokenBalanceState>({\n    balance: BIG_ZERO,\n    fetchStatus: NOT_FETCHED,\n  })\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      try {\n        const res = await contract.balanceOf(account)\n        setBalanceState({ balance: new BigNumber(res.toString()), fetchStatus: SUCCESS })\n      } catch (e) {\n        console.error(e)\n        setBalanceState((prev) => ({\n          ...prev,\n          fetchStatus: FAILED,\n        }))\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, tokenAddress, fastRefresh, SUCCESS, FAILED])\n\n  return balanceState\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getCakeContract()\n      const supply = await cakeContract.totalSupply()\n      setTotalSupply(new BigNumber(supply.toString()))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(BIG_ZERO)\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const contract = getBep20Contract(tokenAddress)\n      const res = await contract.balanceOf('0x000000000000000000000000000000000000dEaD')\n      setBalance(new BigNumber(res.toString()))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useGetBnbBalance = () => {\n  const [fetchStatus, setFetchStatus] = useState(FetchStatus.NOT_FETCHED)\n  const [balance, setBalance] = useState(ethers.BigNumber.from(0))\n  const { account } = useWeb3React()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      try {\n        const walletBalance = await simpleRpcProvider.getBalance(account)\n        setBalance(walletBalance)\n        setFetchStatus(FetchStatus.SUCCESS)\n      } catch {\n        setFetchStatus(FetchStatus.FAILED)\n      }\n    }\n\n    if (account) {\n      fetchBalance()\n    }\n  }, [account, lastUpdated, setBalance, setFetchStatus])\n\n  return { balance, fetchStatus, refresh: setLastUpdated }\n}\n\nexport const useGetCakeBalance = () => {\n  const { balance, fetchStatus } = useTokenBalance(tokens.cake.address)\n\n  // TODO: Remove ethers conversion once useTokenBalance is converted to ethers.BigNumber\n  return { balance: ethers.BigNumber.from(balance.toString()), fetchStatus }\n}\n\nexport default useTokenBalance\n","import { Currency, ETHER, Token } from '@wagyu-swap/sdk'\nimport { VelasIcon } from 'packages/uikit'\nimport React, { useMemo } from 'react'\nimport styled from 'styled-components'\nimport useHttpLocations from '../../hooks/useHttpLocations'\nimport { WrappedTokenInfo } from '../../state/lists/hooks'\nimport getTokenLogoURL from '../../utils/getTokenLogoURL'\nimport Logo from './Logo'\n\nconst StyledLogo = styled(Logo)<{ size: string }>`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n`\n\nexport default function CurrencyLogo({\n  currency,\n  size = '24px',\n  style,\n}: {\n  currency?: Currency\n  size?: string\n  style?: React.CSSProperties\n}) {\n  const uriLocations = useHttpLocations(currency instanceof WrappedTokenInfo ? currency.logoURI : undefined)\n\n  const srcs: string[] = useMemo(() => {\n    if (currency === ETHER) return []\n\n    if (currency instanceof Token) {\n      if (currency instanceof WrappedTokenInfo) {\n        return [...uriLocations, getTokenLogoURL(currency.address)]\n      }\n      return [getTokenLogoURL(currency.address)]\n    }\n    return []\n  }, [currency, uriLocations])\n\n  if (currency === ETHER) {\n    return <VelasIcon width={size} style={style} />\n  }\n\n  return <StyledLogo size={size} srcs={srcs} alt={`${currency?.symbol ?? 'token'} logo`} style={style} />\n}\n","/**\n * Returns true if the string value is zero in hex\n * @param hexNumberString\n */\nexport default function isZero(hexNumberString: string) {\n  return /^0x0*$/.test(hexNumberString)\n}\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","/**\n * Truncate a transaction or address hash\n */\nconst truncateHash = (address: string, startLength = 4, endLength = 4) => {\n  return `${address.substring(0, startLength)}...${address.substring(address.length - endLength)}`\n}\n\nexport default truncateHash\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { ZOLA_LP_SYMBOL } from 'config/constants'\nimport { nodes } from './getRpcUrl'\nimport getTokenLogoURL from './getTokenLogoURL'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = window.ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: chainId === 137 ? 'POLYGON' : 'POLYGON Testnet',\n            nativeCurrency: {\n              name: 'MATIC',\n              symbol: 'vlx',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error('Failed to setup the network in Metamask:', error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the POLYGON network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (tokenAddress: string, tokenSymbol: string, tokenDecimals: number) => {\n  const tokenAdded = await window.ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        // image: `${BASE_URL}/images/tokens/${tokenAddress}.png`,\n        image: tokenSymbol === ZOLA_LP_SYMBOL ? '' : getTokenLogoURL(tokenAddress),\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import { useEffect, useReducer, useCallback } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { getInterestBreakdown, getPrincipalForInterest, getRoi } from 'utils/compoundApyHelpers'\n\n/**\n * This hook is handling all the calculator state and calculations.\n * UI connected to it is merely representation of the data and buttons to trigger actions\n */\n\n// Mapping from the compounding frequency button index to actual compounding frequency\n// in number of compounds per day\nconst compoundingIndexToFrequency = {\n  0: 1,\n  1: 0.142857142,\n  2: 0.071428571, // once every 7 days\n  3: 0.033333333, // once every 30 days\n}\n\nconst TOKEN_PRECISION = 10\nconst USD_PRECISION = 2\n\n// Used to track/react which currency user is editing (i.e. USD amount or Token amount)\nexport enum EditingCurrency {\n  TOKEN,\n  USD,\n}\n\n// Calculator works in 2 modes\nexport enum CalculatorMode {\n  ROI_BASED_ON_PRINCIPAL, // User edits principal value and sees what ROI they get\n  PRINCIPAL_BASED_ON_ROI, // User edits ROI value and sees what principal they need to invest to reach it\n}\n\nexport interface RoiCalculatorReducerState {\n  controls: {\n    compounding: boolean // Compounding checkbox state\n    compoundingFrequency: number // Compounding frequency in number of compounds per day\n    activeCompoundingIndex: number // index of active compounding button in ButtonMenu\n    stakingDuration: number // index of active staking duration button in ButtonMenu\n    mode: CalculatorMode\n    editingCurrency: EditingCurrency\n  }\n  data: {\n    principalAsToken: string // Used as value for Inputs\n    principalAsUSD: string // Used as value for Inputs\n    roiUSD: number\n    roiTokens: number\n    roiPercentage: number // ROI expressed in percentage relative to principal\n  }\n}\n\nconst initialState: RoiCalculatorReducerState = {\n  controls: {\n    compounding: true,\n    compoundingFrequency: 1, // how many compound in a day , e.g. 1 = once a day, 0.071 - once per 2 weeks\n    activeCompoundingIndex: 0, // active compounding selected in\n    stakingDuration: 3,\n    mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL,\n    editingCurrency: EditingCurrency.USD,\n  },\n  data: {\n    principalAsToken: '0.00',\n    principalAsUSD: '',\n    roiUSD: 0,\n    roiTokens: 0,\n    roiPercentage: 0,\n  },\n}\n\nconst roiCalculatorReducer = (\n  state: RoiCalculatorReducerState,\n  action: { type: string; payload?: any },\n): RoiCalculatorReducerState => {\n  switch (action.type) {\n    case 'setStakingDuration': {\n      const controls = { ...state.controls, stakingDuration: action.payload }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'toggleCompounding': {\n      const toggledCompounding = !state.controls.compounding\n      const controls = { ...state.controls, compounding: toggledCompounding }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'setCompoundingFrequency': {\n      const { index, autoCompoundFrequency } = action.payload\n      if (autoCompoundFrequency) {\n        return {\n          ...state,\n          controls: {\n            ...state.controls,\n            compoundingFrequency: autoCompoundFrequency,\n          },\n        }\n      }\n      const compoundingFrequency = compoundingIndexToFrequency[index]\n      const controls = { ...state.controls, compoundingFrequency, activeCompoundingIndex: index }\n      return {\n        ...state,\n        controls,\n      }\n    }\n    case 'setPrincipal': {\n      const { principalAsUSD, principalAsToken } = action.payload\n      const data = { ...state.data, principalAsUSD, principalAsToken }\n      const controls = { ...state.controls, mode: CalculatorMode.ROI_BASED_ON_PRINCIPAL }\n      return {\n        controls,\n        data,\n      }\n    }\n    case 'setPrincipalForTargetRoi': {\n      const { principalAsUSD, principalAsToken, roiPercentage } = action.payload\n      const data = { ...state.data, principalAsUSD, principalAsToken, roiPercentage }\n      return {\n        ...state,\n        data,\n      }\n    }\n    case 'setCalculatorMode': {\n      const mode = action.payload\n      const controls = { ...state.controls, mode }\n      if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n        const roiUSD = parseFloat(state.data.roiUSD.toFixed(USD_PRECISION))\n        const data = { ...state.data, roiUSD }\n        return { controls, data }\n      }\n      return { ...state, controls }\n    }\n    case 'setRoi': {\n      const data = { ...state.data, ...action.payload }\n      return { ...state, data }\n    }\n    case 'setTargetRoi': {\n      const { roiUSD, roiTokens } = action.payload\n      const data = { ...state.data, roiUSD, roiTokens }\n      const controls = { ...state.controls, mode: CalculatorMode.PRINCIPAL_BASED_ON_ROI }\n      return { controls, data }\n    }\n    case 'toggleEditingCurrency': {\n      const currencyAfterChange =\n        state.controls.editingCurrency === EditingCurrency.USD ? EditingCurrency.TOKEN : EditingCurrency.USD\n      const controls = { ...state.controls, editingCurrency: currencyAfterChange }\n      return { ...state, controls }\n    }\n    default:\n      return state\n  }\n}\n\nconst useRoiCalculatorReducer = (\n  stakingTokenPrice: number,\n  earningTokenPrice: number,\n  apr: number,\n  autoCompoundFrequency: number,\n  performanceFee: number,\n) => {\n  const [state, dispatch] = useReducer(roiCalculatorReducer, initialState)\n  const { principalAsUSD, roiUSD } = state.data\n  const { compounding, compoundingFrequency, stakingDuration, mode } = state.controls\n\n  // If pool is auto-compounding set state's compounding frequency to this pool's auto-compound frequency\n  useEffect(() => {\n    if (autoCompoundFrequency > 0) {\n      dispatch({ type: 'setCompoundingFrequency', payload: { autoCompoundFrequency } })\n    }\n  }, [autoCompoundFrequency])\n\n  // Calculates and sets ROI whenever related values change\n  useEffect(() => {\n    if (mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL) {\n      const principalInUSDAsNumber = parseFloat(principalAsUSD)\n      const compoundFrequency = compounding ? compoundingFrequency : 0\n      const interestBreakdown = getInterestBreakdown({\n        principalInUSD: principalInUSDAsNumber,\n        apr,\n        earningTokenPrice,\n        compoundFrequency,\n        performanceFee,\n      })\n      const hasInterest = !Number.isNaN(interestBreakdown[stakingDuration])\n      const roiTokens = hasInterest ? interestBreakdown[stakingDuration] : 0\n      const roiAsUSD = hasInterest ? roiTokens * earningTokenPrice : 0\n      const roiPercentage = hasInterest\n        ? getRoi({\n            amountEarned: roiAsUSD,\n            amountInvested: principalInUSDAsNumber,\n          })\n        : 0\n      dispatch({ type: 'setRoi', payload: { roiUSD: roiAsUSD, roiTokens, roiPercentage } })\n    }\n  }, [principalAsUSD, apr, stakingDuration, earningTokenPrice, performanceFee, compounding, compoundingFrequency, mode])\n\n  // Calculates and sets principal based on expected ROI value\n  useEffect(() => {\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI) {\n      const principalForExpectedRoi = getPrincipalForInterest(\n        roiUSD,\n        apr,\n        compounding ? compoundingFrequency : 0,\n        performanceFee,\n      )\n      const principalUSD = !Number.isNaN(principalForExpectedRoi[stakingDuration])\n        ? principalForExpectedRoi[stakingDuration]\n        : 0\n      const principalToken = new BigNumber(principalUSD).div(stakingTokenPrice)\n      const roiPercentage = getRoi({\n        amountEarned: roiUSD,\n        amountInvested: principalUSD,\n      })\n      dispatch({\n        type: 'setPrincipalForTargetRoi',\n        payload: {\n          principalAsUSD: principalUSD.toFixed(USD_PRECISION),\n          principalAsToken: principalToken.toFixed(TOKEN_PRECISION),\n          roiPercentage,\n        },\n      })\n    }\n  }, [stakingDuration, apr, compounding, compoundingFrequency, mode, roiUSD, stakingTokenPrice, performanceFee])\n\n  // Handler for compounding frequency buttons\n  const setCompoundingFrequency = (index: number) => {\n    dispatch({ type: 'setCompoundingFrequency', payload: { index } })\n  }\n\n  // Handler for principal input when in USD mode\n  const setPrincipalFromUSDValue = (amount: string) => {\n    const principalAsTokenBN = new BigNumber(amount).div(stakingTokenPrice)\n    const principalAsToken = principalAsTokenBN.gt(0) ? principalAsTokenBN.toFixed(TOKEN_PRECISION) : '0.00'\n    dispatch({ type: 'setPrincipal', payload: { principalAsUSD: amount, principalAsToken } })\n  }\n\n  // Handler for principal input when in Token mode\n  const setPrincipalFromTokenValue = useCallback(\n    (amount: string) => {\n      const principalAsUsdBN = new BigNumber(amount).times(stakingTokenPrice)\n      const principalAsUsdString = principalAsUsdBN.gt(0) ? principalAsUsdBN.toFixed(USD_PRECISION) : '0.00'\n      dispatch({\n        type: 'setPrincipal',\n        payload: { principalAsUSD: principalAsUsdString, principalAsToken: amount },\n      })\n    },\n    [stakingTokenPrice],\n  )\n\n  // Handler for staking duration buttons\n  const setStakingDuration = (stakingDurationIndex: number) => {\n    dispatch({ type: 'setStakingDuration', payload: stakingDurationIndex })\n  }\n\n  // Handler for compounding checkbox\n  const toggleCompounding = () => {\n    dispatch({ type: 'toggleCompounding' })\n  }\n\n  // Handler for principal input mode switch\n  const toggleEditingCurrency = () => {\n    dispatch({ type: 'toggleEditingCurrency' })\n  }\n\n  const setCalculatorMode = (modeToSet: CalculatorMode) => {\n    dispatch({ type: 'setCalculatorMode', payload: modeToSet })\n  }\n\n  // Handler for ROI input\n  const setTargetRoi = (amount: string) => {\n    const targetRoiAsTokens = new BigNumber(amount).div(earningTokenPrice)\n    dispatch({\n      type: 'setTargetRoi',\n      payload: { roiUSD: amount, roiTokens: targetRoiAsTokens.isNaN() ? 0 : targetRoiAsTokens.toNumber() },\n    })\n  }\n\n  return {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi,\n  }\n}\n\nexport default useRoiCalculatorReducer\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Flex, Box, Text, ExpandableLabel, LinkExternal, Grid, HelpIcon, useTooltip } from 'packages/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getApy } from 'utils/compoundApyHelpers'\n\nconst Footer = styled(Flex)`\n  width: 100%;\n  background: ${({ theme }) => theme.colors.dropdown};\n`\n\nconst BulletList = styled.ul`\n  list-style-type: none;\n  margin-top: 16px;\n  padding: 0;\n  li {\n    margin: 0;\n    padding: 0;\n  }\n  li::before {\n    content: '•';\n    margin-right: 4px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n  li::marker {\n    font-size: 12px;\n  }\n`\n\ninterface RoiCalculatorFooterProps {\n  isFarm: boolean\n  apr: number\n  displayApr: string\n  autoCompoundFrequency: number\n  multiplier: string\n  linkLabel: string\n  linkHref: string\n  performanceFee: number\n}\n\nconst RoiCalculatorFooter: React.FC<RoiCalculatorFooterProps> = ({\n  isFarm,\n  apr,\n  displayApr,\n  autoCompoundFrequency,\n  multiplier,\n  linkLabel,\n  linkHref,\n  performanceFee,\n}) => {\n  const [isExpanded, setIsExpanded] = useState(false)\n  const { t } = useTranslation()\n  const {\n    targetRef: multiplierRef,\n    tooltip: multiplierTooltip,\n    tooltipVisible: multiplierTooltipVisible,\n  } = useTooltip(\n    <>\n      <Text>\n        {t(\n          'The Multiplier represents the proportion of ZOLA rewards each farm receives, as a proportion of the ZOLA produced each block.',\n        )}\n      </Text>\n      <Text my=\"24px\">\n        {t('For example, if a 1x farm received 1 ZOLA per block, a 40x farm would receive 40 ZOLA per block.')}\n      </Text>\n      <Text>{t('This amount is already included in all APR calculations for the farm.')}</Text>\n    </>,\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  const gridRowCount = isFarm ? 4 : 2\n  const apy = (getApy(apr, autoCompoundFrequency > 0 ? autoCompoundFrequency : 1, 365, performanceFee) * 100).toFixed(2)\n\n  return (\n    <Footer p=\"16px\" flexDirection=\"column\">\n      <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded((prev) => !prev)}>\n        {isExpanded ? t('Hide') : t('Details')}\n      </ExpandableLabel>\n      {isExpanded && (\n        <Box px=\"8px\">\n          <Grid gridTemplateColumns=\"2.5fr 1fr\" gridRowGap=\"8px\" gridTemplateRows={`repeat(${gridRowCount}, auto)`}>\n            {isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  {t('APR (incl. LP rewards)')}\n                </Text>\n                <Text small textAlign=\"right\">\n                  {displayApr}%\n                </Text>\n              </>\n            )}\n            <Text color=\"textSubtle\" small>\n              {isFarm ? t('Base APR (ZOLA yield only)') : t('APR')}\n            </Text>\n            <Text small textAlign=\"right\">\n              {apr.toFixed(2)}%\n            </Text>\n            <Text color=\"textSubtle\" small>\n              {t('APY (%compoundTimes%x daily compound)', {\n                compoundTimes: autoCompoundFrequency > 0 ? autoCompoundFrequency : 1,\n              })}\n            </Text>\n            <Text small textAlign=\"right\">\n              {apy}%\n            </Text>\n            {isFarm && (\n              <>\n                <Text color=\"textSubtle\" small>\n                  {t('Farm Multiplier')}\n                </Text>\n                <Flex justifyContent=\"flex-end\" alignItems=\"flex-end\">\n                  <Text small textAlign=\"right\" mr=\"4px\">\n                    {multiplier}\n                  </Text>\n                  <span ref={multiplierRef}>\n                    <HelpIcon color=\"textSubtle\" width=\"16px\" height=\"16px\" />\n                  </span>\n                  {multiplierTooltipVisible && multiplierTooltip}\n                </Flex>\n              </>\n            )}\n          </Grid>\n          <BulletList>\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Calculated based on current rates.')}\n              </Text>\n            </li>\n            {isFarm && (\n              <li>\n                <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('LP rewards: 0.17% trading fees, distributed proportionally among LP token holders.')}\n                </Text>\n              </li>\n            )}\n            <li>\n              <Text fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t(\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n                )}\n              </Text>\n            </li>\n            {performanceFee > 0 && (\n              <li>\n                <Text mt=\"14px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\n                    fee: performanceFee,\n                  })}\n                </Text>\n              </li>\n            )}\n          </BulletList>\n          <Flex justifyContent=\"center\" mt=\"24px\">\n            <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n          </Flex>\n        </Box>\n      )}\n    </Footer>\n  )\n}\n\nexport default RoiCalculatorFooter\n","import React, { useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Box, Flex, Text, Input, CheckmarkIcon, PencilIcon, IconButton } from 'packages/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\n\nconst MILLION = 1000000\nconst TRILLION = 1000000000000\n\nconst RoiCardWrapper = styled(Box)`\n  background: linear-gradient(180deg, #53dee9, #7645d9);\n  padding: 1px;\n  width: 100%;\n  border-radius: ${({ theme }) => theme.radii.default};\n`\n\nconst RoiCardInner = styled(Box)`\n  height: 120px;\n  padding: 24px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n`\n\nconst RoiInputContainer = styled(Box)`\n  position: relative;\n  & > input {\n    padding-left: 28px;\n    max-width: 70%;\n  }\n  &:before {\n    position: absolute;\n    content: '$';\n    color: ${({ theme }) => theme.colors.textSubtle};\n    left: 16px;\n    top: 8px;\n  }\n`\n\nconst RoiDisplayContainer = styled(Flex)`\n  max-width: 82%;\n  margin-right: 8px;\n`\n\nconst RoiDollarAmount = styled(Text)<{ fadeOut: boolean }>`\n  position: relative;\n  overflow-x: auto;\n  &::-webkit-scrollbar {\n    height: 0px;\n  }\n\n  ${({ fadeOut, theme }) =>\n    fadeOut &&\n    `\n      &:after {\n        background: linear-gradient(\n          to right,\n          ${theme.colors.background}00,\n          ${theme.colors.background}E6\n        );\n        content: '';\n        height: 100%;\n        pointer-events: none;\n        position: absolute;\n        right: 0;\n        top: 0;\n        width: 40px;\n      }\n  `}\n`\n\ninterface RoiCardProps {\n  earningTokenSymbol: string\n  calculatorState: RoiCalculatorReducerState\n  setTargetRoi: (amount: string) => void\n  setCalculatorMode: (mode: CalculatorMode) => void\n}\n\nconst RoiCard: React.FC<RoiCardProps> = ({ earningTokenSymbol, calculatorState, setTargetRoi, setCalculatorMode }) => {\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const { roiUSD, roiTokens, roiPercentage } = calculatorState.data\n  const { mode } = calculatorState.controls\n\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    if (mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI && inputRef.current) {\n      inputRef.current.focus()\n    }\n  }, [mode])\n\n  const onEnterEditing = () => {\n    setCalculatorMode(CalculatorMode.PRINCIPAL_BASED_ON_ROI)\n  }\n\n  const onExitRoiEditing = () => {\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\n  }\n  const handleExpectedRoiChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTargetRoi(event.currentTarget.value)\n  }\n  return (\n    <RoiCardWrapper>\n      <RoiCardInner>\n        <Text fontSize=\"12px\" color=\"secondary\" bold textTransform=\"uppercase\">\n          {t('ROI at current rates')}\n        </Text>\n        <Flex justifyContent=\"space-between\" mt=\"4px\" height=\"36px\">\n          {mode === CalculatorMode.PRINCIPAL_BASED_ON_ROI ? (\n            <>\n              <RoiInputContainer>\n                <Input\n                  ref={inputRef}\n                  type=\"number\"\n                  inputMode=\"decimal\"\n                  pattern=\"\\d*\"\n                  scale=\"sm\"\n                  value={roiUSD}\n                  placeholder=\"0.0\"\n                  onChange={handleExpectedRoiChange}\n                />\n              </RoiInputContainer>\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onExitRoiEditing}>\n                <CheckmarkIcon color=\"primary\" />\n              </IconButton>\n            </>\n          ) : (\n            <>\n              <RoiDisplayContainer onClick={onEnterEditing}>\n                {/* Dollar sign is separate cause its not supposed to scroll with a number if number is huge */}\n                <Text fontSize=\"24px\" bold>\n                  $\n                </Text>\n                <RoiDollarAmount fontSize=\"24px\" bold fadeOut={roiUSD > TRILLION}>\n                  {roiUSD.toLocaleString('en', {\n                    minimumFractionDigits: roiUSD > MILLION ? 0 : 2,\n                    maximumFractionDigits: roiUSD > MILLION ? 0 : 2,\n                  })}\n                </RoiDollarAmount>\n              </RoiDisplayContainer>\n              <IconButton scale=\"sm\" variant=\"text\" onClick={onEnterEditing}>\n                <PencilIcon color=\"primary\" />\n              </IconButton>\n            </>\n          )}\n        </Flex>\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          ~ {roiTokens} {earningTokenSymbol} (\n          {roiPercentage.toLocaleString('en', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}\n          %)\n        </Text>\n      </RoiCardInner>\n    </RoiCardWrapper>\n  )\n}\n\nexport default RoiCard\n","import React, { useState, useEffect } from 'react'\nimport { Flex, ArrowDownIcon, ArrowUpIcon } from 'packages/uikit'\nimport styled, { keyframes } from 'styled-components'\nimport { CalculatorMode, RoiCalculatorReducerState } from './useRoiCalculatorReducer'\n\nconst rotate = keyframes`\n  0% {\n    transform: scale(1);\n    stroke-width: 0;\n  }\n  50% {\n    transform: scale(1.3);\n    stroke-width: 2;\n  }\n  100% {\n    transform: scale(1);\n    stroke-width: 0;\n  }\n`\n\nconst ArrowContainer = styled(Flex)`\n  & > svg {\n    animation: 0.2s ${rotate} linear;\n    stroke: ${({ theme }) => `${theme.colors.primary}3D`};\n    stroke-width: 0;\n  }\n`\n\ninterface AnimatedArrowProps {\n  calculatorState: RoiCalculatorReducerState\n}\n\nconst AnimatedArrow: React.FC<AnimatedArrowProps> = ({ calculatorState }) => {\n  const [key, setKey] = useState('roiArrow-0')\n  const { mode } = calculatorState.controls\n\n  // Trigger animation on state change\n  useEffect(() => {\n    setKey((prevKey) => {\n      const prevId = parseInt(prevKey.split('-')[1], 10)\n      return `roiArrow-${prevId + 1}`\n    })\n  }, [calculatorState])\n\n  return (\n    <ArrowContainer justifyContent=\"center\" my=\"24px\" key={key}>\n      {mode === CalculatorMode.ROI_BASED_ON_PRINCIPAL ? (\n        <ArrowDownIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\n      ) : (\n        <ArrowUpIcon width=\"24px\" height=\"24px\" color=\"textSubtle\" />\n      )}\n    </ArrowContainer>\n  )\n}\n\nexport default AnimatedArrow\n","import React, { useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Button,\n  Flex,\n  ButtonMenu,\n  Checkbox,\n  BalanceInput,\n  HelpIcon,\n  ButtonMenuItem,\n  useTooltip,\n} from 'packages/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport RoiCalculatorFooter from './RoiCalculatorFooter'\nimport RoiCard from './RoiCard'\nimport useRoiCalculatorReducer, { CalculatorMode, EditingCurrency } from './useRoiCalculatorReducer'\nimport AnimatedArrow from './AnimatedArrow'\n\ninterface RoiCalculatorModalProps {\n  onDismiss?: () => void\n  onBack?: () => void\n  earningTokenPrice: number\n  apr: number\n  displayApr?: string\n  linkLabel: string\n  linkHref: string\n  stakingTokenBalance: BigNumber\n  stakingTokenSymbol: string\n  stakingTokenPrice: number\n  earningTokenSymbol?: string\n  multiplier?: string\n  autoCompoundFrequency?: number\n  performanceFee?: number\n  isFarm?: boolean\n  initialValue?: string\n}\n\nconst StyledModal = styled(Modal)`\n  width: 345px;\n  & > :nth-child(2) {\n    padding: 0;\n  }\n`\n\nconst ScrollableContainer = styled.div`\n  padding: 24px;\n  max-height: 500px;\n  overflow-y: auto;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-height: none;\n  }\n`\n\nconst FullWidthButtonMenu = styled(ButtonMenu)<{ disabled?: boolean }>`\n  width: 100%;\n\n  & > button {\n    width: 100%;\n  }\n\n  opacity: ${({ disabled }) => (disabled ? 0.5 : 1)};\n`\n\nconst RoiCalculatorModal: React.FC<RoiCalculatorModalProps> = ({\n  onDismiss,\n  onBack,\n  earningTokenPrice,\n  apr,\n  displayApr,\n  linkLabel,\n  linkHref,\n  stakingTokenBalance,\n  stakingTokenSymbol,\n  stakingTokenPrice,\n  multiplier,\n  initialValue,\n  earningTokenSymbol = 'ZOLA',\n  autoCompoundFrequency = 0,\n  performanceFee = 0,\n  isFarm = false,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useActiveWeb3React()\n  const balanceInputRef = useRef<HTMLInputElement | null>(null)\n\n  const {\n    state,\n    setPrincipalFromUSDValue,\n    setPrincipalFromTokenValue,\n    setStakingDuration,\n    toggleCompounding,\n    toggleEditingCurrency,\n    setCompoundingFrequency,\n    setCalculatorMode,\n    setTargetRoi,\n  } = useRoiCalculatorReducer(stakingTokenPrice, earningTokenPrice, apr, autoCompoundFrequency, performanceFee)\n\n  const { compounding, activeCompoundingIndex, stakingDuration, editingCurrency } = state.controls\n  const { principalAsUSD, principalAsToken } = state.data\n\n  // Auto-focus input on opening modal\n  useEffect(() => {\n    if (balanceInputRef.current) {\n      balanceInputRef.current.focus()\n    }\n  }, [])\n\n  // If user comes to calculator from staking modal - initialize with whatever they put in there\n  useEffect(() => {\n    if (initialValue) {\n      setPrincipalFromTokenValue(initialValue)\n    }\n  }, [initialValue, setPrincipalFromTokenValue])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    isFarm\n      ? t('“My Balance” here includes both LP Tokens in your wallet, and LP Tokens already staked in this farm.')\n      : t(\n          '“My Balance” here includes both %assetSymbol% in your wallet, and %assetSymbol% already staked in this pool.',\n          { assetSymbol: stakingTokenSymbol },\n        ),\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  const onBalanceFocus = () => {\n    setCalculatorMode(CalculatorMode.ROI_BASED_ON_PRINCIPAL)\n  }\n\n  const editingUnit = editingCurrency === EditingCurrency.TOKEN ? stakingTokenSymbol : 'USD'\n  const editingValue = editingCurrency === EditingCurrency.TOKEN ? principalAsToken : principalAsUSD\n  const conversionUnit = editingCurrency === EditingCurrency.TOKEN ? 'USD' : stakingTokenSymbol\n  const conversionValue = editingCurrency === EditingCurrency.TOKEN ? principalAsUSD : principalAsToken\n  const onUserInput = editingCurrency === EditingCurrency.TOKEN ? setPrincipalFromTokenValue : setPrincipalFromUSDValue\n\n  return (\n    <StyledModal\n      title={t('ROI Calculator')}\n      onDismiss={onBack || onDismiss}\n      onBack={onBack ?? null}\n      headerBackground=\"gradients.cardHeader\"\n    >\n      <ScrollableContainer>\n        <Flex flexDirection=\"column\" mb=\"8px\">\n          <Text color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n            {t('%asset% staked', { asset: stakingTokenSymbol })}\n          </Text>\n          <BalanceInput\n            currencyValue={`${conversionValue} ${conversionUnit}`}\n            innerRef={balanceInputRef}\n            placeholder=\"0.00\"\n            value={editingValue}\n            unit={editingUnit}\n            onUserInput={onUserInput}\n            switchEditingUnits={toggleEditingCurrency}\n            onFocus={onBalanceFocus}\n          />\n          <Flex justifyContent=\"space-between\" mt=\"8px\">\n            <Button\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"68px\"\n              variant=\"tertiary\"\n              onClick={() => setPrincipalFromUSDValue('100')}\n            >\n              $100\n            </Button>\n            <Button\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"68px\"\n              variant=\"tertiary\"\n              onClick={() => setPrincipalFromUSDValue('1000')}\n            >\n              $1000\n            </Button>\n            <Button\n              disabled={stakingTokenBalance.lte(0) || !account}\n              scale=\"xs\"\n              p=\"4px 16px\"\n              width=\"128px\"\n              variant=\"tertiary\"\n              onClick={() =>\n                setPrincipalFromUSDValue(getBalanceNumber(stakingTokenBalance.times(stakingTokenPrice)).toString())\n              }\n            >\n              {t('My Balance').toLocaleUpperCase()}\n            </Button>\n            <span ref={targetRef}>\n              <HelpIcon width=\"16px\" height=\"16px\" color=\"textSubtle\" />\n            </span>\n            {tooltipVisible && tooltip}\n          </Flex>\n          <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n            {t('Staked for')}\n          </Text>\n          <FullWidthButtonMenu activeIndex={stakingDuration} onItemClick={setStakingDuration} scale=\"sm\">\n            <ButtonMenuItem variant=\"tertiary\">{t('1D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('7D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('30D')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('1Y')}</ButtonMenuItem>\n            <ButtonMenuItem variant=\"tertiary\">{t('5Y')}</ButtonMenuItem>\n          </FullWidthButtonMenu>\n          {autoCompoundFrequency === 0 && (\n            <>\n              <Text mt=\"24px\" color=\"secondary\" bold fontSize=\"12px\" textTransform=\"uppercase\">\n                {t('Compounding every')}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Flex flex=\"1\">\n                  <Checkbox scale=\"sm\" checked={compounding} onChange={toggleCompounding} />\n                </Flex>\n                <Flex flex=\"6\">\n                  <FullWidthButtonMenu\n                    disabled={!compounding}\n                    activeIndex={activeCompoundingIndex}\n                    onItemClick={setCompoundingFrequency}\n                    scale=\"sm\"\n                  >\n                    <ButtonMenuItem>{t('1D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('7D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('14D')}</ButtonMenuItem>\n                    <ButtonMenuItem>{t('30D')}</ButtonMenuItem>\n                  </FullWidthButtonMenu>\n                </Flex>\n              </Flex>\n            </>\n          )}\n        </Flex>\n        <AnimatedArrow calculatorState={state} />\n        <Flex>\n          <RoiCard\n            earningTokenSymbol={earningTokenSymbol}\n            calculatorState={state}\n            setTargetRoi={setTargetRoi}\n            setCalculatorMode={setCalculatorMode}\n          />\n        </Flex>\n      </ScrollableContainer>\n      <RoiCalculatorFooter\n        isFarm={isFarm}\n        apr={apr}\n        displayApr={displayApr}\n        autoCompoundFrequency={autoCompoundFrequency}\n        multiplier={multiplier}\n        linkLabel={linkLabel}\n        linkHref={linkHref}\n        performanceFee={performanceFee}\n      />\n    </StyledModal>\n  )\n}\n\nexport default RoiCalculatorModal\n","import { useEffect, useState } from 'react'\n\n// modified from https://usehooks.com/useDebounce/\nexport default function useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState<T>(value)\n\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value)\n    }, delay)\n\n    // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [value, delay])\n\n  return debouncedValue\n}\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from 'packages/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorNames) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork()\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError(t('Provider Error'), t('No provider was found'))\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError(t('Authorization Error'), t('Please authorize to access your account'))\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError(t('Unable to find connector'), t('The connector config is wrong'))\n      }\n    },\n    [t, activate, toastError],\n  )\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n    window.localStorage.removeItem(connectorLocalStorageKey)\n  }, [deactivate, dispatch])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","import { Currency, ETHER, Token } from '@wagyu-swap/sdk'\n\nexport function currencyId(currency: Currency): string {\n  if (currency === ETHER) return 'MATIC'\n  if (currency instanceof Token) return currency.address\n  throw new Error('invalid currency')\n}\n\nexport default currencyId\n","/* eslint-disable no-case-declarations */\n/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nexport default function uriToHttp(uri: string): string[] {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      return [`https${uri.substr(4)}`, uri]\n    case 'ipfs':\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","import { Collections, CollectionKey } from './types'\n\nconst collections: Collections = {\n  [CollectionKey.PANCAKE]: {\n    name: 'Pancake Bunnies',\n    address: {\n      137: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n      80001: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n    },\n  },\n}\n\nexport default collections\n","export const TICKET_LIMIT_PER_REQUEST = 1000\nexport const NUM_ROUNDS_TO_CHECK_FOR_REWARDS = 3\nexport const NUM_ROUNDS_TO_FETCH_FROM_NODES = 3\n","import React, { useCallback } from 'react'\nimport { ChainId, Currency, Token } from '@wagyu-swap/sdk'\nimport styled from 'styled-components'\nimport {\n  Button,\n  Text,\n  ErrorIcon,\n  ArrowUpIcon,\n  MetamaskIcon,\n  Flex,\n  Box,\n  Link,\n  Spinner,\n  Modal,\n  InjectedModalProps,\n} from 'packages/uikit'\nimport { registerToken } from 'utils/wallet'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { RowFixed } from '../Layout/Row'\nimport { AutoColumn, ColumnCenter } from '../Layout/Column'\nimport { getVelasScanLink } from '../../utils'\n\nconst Wrapper = styled.div`\n  width: 100%;\n`\nconst Section = styled(AutoColumn)`\n  padding: 24px;\n`\n\nconst ConfirmedIcon = styled(ColumnCenter)`\n  padding: 24px 0;\n`\n\nfunction ConfirmationPendingContent({ pendingText }: { pendingText: string }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <ConfirmedIcon>\n        <Spinner />\n      </ConfirmedIcon>\n      <AutoColumn gap=\"12px\" justify=\"center\">\n        <Text fontSize=\"20px\">{t('Waiting For Confirmation')}</Text>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text bold small textAlign=\"center\">\n            {pendingText}\n          </Text>\n        </AutoColumn>\n        <Text small color=\"textSubtle\" textAlign=\"center\">\n          {t('Confirm this transaction in your wallet')}\n        </Text>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nfunction TransactionSubmittedContent({\n  onDismiss,\n  chainId,\n  hash,\n  currencyToAdd,\n}: {\n  onDismiss: () => void\n  hash: string | undefined\n  chainId: ChainId\n  currencyToAdd?: Currency | undefined\n}) {\n  const { library } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const token: Token | undefined = wrappedCurrency(currencyToAdd, chainId)\n\n  return (\n    <Wrapper>\n      <Section>\n        <ConfirmedIcon>\n          <ArrowUpIcon strokeWidth={0.5} width=\"90px\" color=\"primary\" />\n        </ConfirmedIcon>\n        <AutoColumn gap=\"12px\" justify=\"center\">\n          <Text fontSize=\"20px\">{t('Transaction Submitted')}</Text>\n          {chainId && hash && (\n            <Link external small href={getVelasScanLink(hash, 'transaction', chainId)}>\n              {t('View on Polygon Explorer')}\n            </Link>\n          )}\n          {currencyToAdd && library?.provider?.isMetaMask && (\n            <Button\n              variant=\"tertiary\"\n              mt=\"12px\"\n              width=\"fit-content\"\n              onClick={() => registerToken(token.address, token.symbol, token.decimals)}\n            >\n              <RowFixed>\n                {t('Add %asset% to Metamask', { asset: currencyToAdd.symbol })}\n                <MetamaskIcon width=\"16px\" ml=\"6px\" />\n              </RowFixed>\n            </Button>\n          )}\n          <Button onClick={onDismiss} mt=\"20px\">\n            {t('Close')}\n          </Button>\n        </AutoColumn>\n      </Section>\n    </Wrapper>\n  )\n}\n\nexport function ConfirmationModalContent({\n  bottomContent,\n  topContent,\n}: {\n  topContent: () => React.ReactNode\n  bottomContent: () => React.ReactNode\n}) {\n  return (\n    <Wrapper>\n      <Box>{topContent()}</Box>\n      <Box>{bottomContent()}</Box>\n    </Wrapper>\n  )\n}\n\nexport function TransactionErrorContent({ message, onDismiss }: { message: string; onDismiss: () => void }) {\n  const { t } = useTranslation()\n  return (\n    <Wrapper>\n      <AutoColumn justify=\"center\">\n        <ErrorIcon color=\"failure\" width=\"64px\" />\n        <Text color=\"failure\" style={{ textAlign: 'center', width: '85%' }}>\n          {message}\n        </Text>\n      </AutoColumn>\n\n      <Flex justifyContent=\"center\" pt=\"24px\">\n        <Button onClick={onDismiss}>{t('Dismiss')}</Button>\n      </Flex>\n    </Wrapper>\n  )\n}\n\ninterface ConfirmationModalProps {\n  title: string\n  customOnDismiss?: () => void\n  hash: string | undefined\n  content: () => React.ReactNode\n  attemptingTxn: boolean\n  pendingText: string\n  currencyToAdd?: Currency | undefined\n}\n\nconst TransactionConfirmationModal: React.FC<InjectedModalProps & ConfirmationModalProps> = ({\n  title,\n  onDismiss,\n  customOnDismiss,\n  attemptingTxn,\n  hash,\n  pendingText,\n  content,\n  currencyToAdd,\n}) => {\n  const { chainId } = useActiveWeb3React()\n\n  const handleDismiss = useCallback(() => {\n    if (customOnDismiss) {\n      customOnDismiss()\n    }\n    onDismiss()\n  }, [customOnDismiss, onDismiss])\n\n  if (!chainId) return null\n\n  return (\n    <Modal title={title} headerBackground=\"gradients.cardHeader\" onDismiss={handleDismiss}>\n      {attemptingTxn ? (\n        <ConfirmationPendingContent pendingText={pendingText} />\n      ) : hash ? (\n        <TransactionSubmittedContent\n          chainId={chainId}\n          hash={hash}\n          onDismiss={onDismiss}\n          currencyToAdd={currencyToAdd}\n        />\n      ) : (\n        content()\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionConfirmationModal\n","import { isAddress } from '../../utils'\nimport useENSAddress from './useENSAddress'\nimport useENSName from './useENSName'\n\n/**\n * Given a name or address, does a lookup to resolve to an address and name\n * @param nameOrAddress ENS name or address\n */\nexport default function useENS(nameOrAddress?: string | null): {\n  loading: boolean\n  address: string | null\n  name: string | null\n} {\n  const validated = isAddress(nameOrAddress)\n  const reverseLookup = useENSName(validated || undefined)\n  const lookup = useENSAddress(nameOrAddress)\n\n  return {\n    loading: reverseLookup.loading || lookup.loading,\n    address: validated || lookup.address,\n    name: reverseLookup.ENSName ? reverseLookup.ENSName : !validated && lookup.address ? nameOrAddress || null : null,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport { isAddress } from '../../utils'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a reverse lookup for an address to find its ENS name.\n * Note this is not the same as looking up an ENS name to find an address.\n */\nexport default function useENSName(address?: string): { ENSName: string | null; loading: boolean } {\n  const debouncedAddress = useDebounce(address, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedAddress || !isAddress(debouncedAddress)) return [undefined]\n    try {\n      return debouncedAddress ? [namehash(`${debouncedAddress.toLowerCase().substr(2)}.addr.reverse`)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedAddress])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const name = useSingleCallResult(resolverContract, 'name', ensNodeArgument)\n\n  const changed = debouncedAddress !== address\n  return {\n    ENSName: changed ? null : name.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || name.loading,\n  }\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\nimport useDebounce from '../useDebounce'\n\n/**\n * Does a lookup for an ENS name to find its address.\n */\nexport default function useENSAddress(ensName?: string | null): { loading: boolean; address: string | null } {\n  const debouncedName = useDebounce(ensName, 200)\n  const ensNodeArgument = useMemo(() => {\n    if (!debouncedName) return [undefined]\n    try {\n      return debouncedName ? [namehash(debouncedName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [debouncedName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddress = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddressResult = resolverAddress.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddressResult && !isZero(resolverAddressResult) ? resolverAddressResult : undefined,\n    false,\n  )\n  const addr = useSingleCallResult(resolverContract, 'addr', ensNodeArgument)\n\n  const changed = debouncedName !== ensName\n  return {\n    address: changed ? null : addr.result?.[0] ?? null,\n    loading: changed || resolverAddress.loading || addr.loading,\n  }\n}\n","import { Trade, Percent, currencyEquals } from '@wagyu-swap/sdk'\nimport { ZERO_PERCENT, ONE_HUNDRED_PERCENT } from '../config/constants/index'\n\n// returns whether tradeB is better than tradeA by at least a threshold percentage amount\nexport function isTradeBetter(\n  tradeA: Trade | undefined | null,\n  tradeB: Trade | undefined | null,\n  minimumDelta: Percent = ZERO_PERCENT,\n): boolean | undefined {\n  if (tradeA && !tradeB) return false\n  if (tradeB && !tradeA) return true\n  if (!tradeA || !tradeB) return undefined\n\n  if (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !currencyEquals(tradeB.outputAmount.currency, tradeB.outputAmount.currency)\n  ) {\n    throw new Error('Trades are not comparable')\n  }\n\n  if (minimumDelta.equalTo(ZERO_PERCENT)) {\n    return tradeA.executionPrice.lessThan(tradeB.executionPrice)\n  }\n  return tradeA.executionPrice.raw.multiply(minimumDelta.add(ONE_HUNDRED_PERCENT)).lessThan(tradeB.executionPrice)\n}\n\nexport default isTradeBetter\n","/* eslint-disable no-param-reassign */\nimport { isTradeBetter } from 'utils/trades'\nimport { Currency, CurrencyAmount, Pair, Token, Trade } from '@wagyu-swap/sdk'\nimport flatMap from 'lodash/flatMap'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\n\nimport { useUserSingleHopOnly } from 'state/user/hooks'\nimport {\n  BASES_TO_CHECK_TRADES_AGAINST,\n  CUSTOM_BASES,\n  BETTER_TRADE_LESS_HOPS_THRESHOLD,\n  ADDITIONAL_BASES,\n} from '../config/constants'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nimport { useUnsupportedTokens } from './Tokens'\n\nfunction useAllCommonPairs(currencyA?: Currency, currencyB?: Currency): Pair[] {\n  const { chainId } = useActiveWeb3React()\n\n  const [tokenA, tokenB] = chainId\n    ? [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n    : [undefined, undefined]\n\n  const bases: Token[] = useMemo(() => {\n    if (!chainId) return []\n\n    const common = BASES_TO_CHECK_TRADES_AGAINST[chainId] ?? []\n    const additionalA = tokenA ? ADDITIONAL_BASES[chainId]?.[tokenA.address] ?? [] : []\n    const additionalB = tokenB ? ADDITIONAL_BASES[chainId]?.[tokenB.address] ?? [] : []\n\n    return [...common, ...additionalA, ...additionalB]\n  }, [chainId, tokenA, tokenB])\n\n  const basePairs: [Token, Token][] = useMemo(\n    () => flatMap(bases, (base): [Token, Token][] => bases.map((otherBase) => [base, otherBase])),\n    [bases],\n  )\n\n  const allPairCombinations: [Token, Token][] = useMemo(\n    () =>\n      tokenA && tokenB\n        ? [\n            // the direct pair\n            [tokenA, tokenB],\n            // token A against all bases\n            ...bases.map((base): [Token, Token] => [tokenA, base]),\n            // token B against all bases\n            ...bases.map((base): [Token, Token] => [tokenB, base]),\n            // each base against all bases\n            ...basePairs,\n          ]\n            .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n            .filter(([t0, t1]) => t0.address !== t1.address)\n            .filter(([tokenA_, tokenB_]) => {\n              if (!chainId) return true\n              const customBases = CUSTOM_BASES[chainId]\n\n              const customBasesA: Token[] | undefined = customBases?.[tokenA_.address]\n              const customBasesB: Token[] | undefined = customBases?.[tokenB_.address]\n\n              if (!customBasesA && !customBasesB) return true\n\n              if (customBasesA && !customBasesA.find((base) => tokenB_.equals(base))) return false\n              if (customBasesB && !customBasesB.find((base) => tokenA_.equals(base))) return false\n\n              return true\n            })\n        : [],\n    [tokenA, tokenB, bases, basePairs, chainId],\n  )\n\n  const allPairs = usePairs(allPairCombinations)\n\n  // only pass along valid pairs, non-duplicated pairs\n  return useMemo(\n    () =>\n      Object.values(\n        allPairs\n          // filter out invalid pairs\n          .filter((result): result is [PairState.EXISTS, Pair] => Boolean(result[0] === PairState.EXISTS && result[1]))\n          // filter out duplicated pairs\n          .reduce<{ [pairAddress: string]: Pair }>((memo, [, curr]) => {\n            memo[curr.liquidityToken.address] = memo[curr.liquidityToken.address] ?? curr\n            return memo\n          }, {}),\n      ),\n    [allPairs],\n  )\n}\n\nconst MAX_HOPS = 3\n\n/**\n * Returns the best trade for the exact amount of tokens in to the given token out\n */\nexport function useTradeExactIn(currencyAmountIn?: CurrencyAmount, currencyOut?: Currency): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyAmountIn?.currency, currencyOut)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyAmountIn && currencyOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade: Trade | null =\n          Trade.bestTradeExactIn(allowedPairs, currencyAmountIn, currencyOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        // if current trade is best yet, save it\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n\n    return null\n  }, [allowedPairs, currencyAmountIn, currencyOut, singleHopOnly])\n}\n\n/**\n * Returns the best trade for the token in to the exact amount of token out\n */\nexport function useTradeExactOut(currencyIn?: Currency, currencyAmountOut?: CurrencyAmount): Trade | null {\n  const allowedPairs = useAllCommonPairs(currencyIn, currencyAmountOut?.currency)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  return useMemo(() => {\n    if (currencyIn && currencyAmountOut && allowedPairs.length > 0) {\n      if (singleHopOnly) {\n        return (\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: 1, maxNumResults: 1 })[0] ??\n          null\n        )\n      }\n      // search through trades with varying hops, find best trade out of them\n      let bestTradeSoFar: Trade | null = null\n      for (let i = 1; i <= MAX_HOPS; i++) {\n        const currentTrade =\n          Trade.bestTradeExactOut(allowedPairs, currencyIn, currencyAmountOut, { maxHops: i, maxNumResults: 1 })[0] ??\n          null\n        if (isTradeBetter(bestTradeSoFar, currentTrade, BETTER_TRADE_LESS_HOPS_THRESHOLD)) {\n          bestTradeSoFar = currentTrade\n        }\n      }\n      return bestTradeSoFar\n    }\n    return null\n  }, [currencyIn, currencyAmountOut, allowedPairs, singleHopOnly])\n}\n\nexport function useIsTransactionUnsupported(currencyIn?: Currency, currencyOut?: Currency): boolean {\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n  const { chainId } = useActiveWeb3React()\n\n  const tokenIn = wrappedCurrency(currencyIn, chainId)\n  const tokenOut = wrappedCurrency(currencyOut, chainId)\n\n  // if unsupported list loaded & either token on list, mark as unsupported\n  if (unsupportedTokens) {\n    if (tokenIn && Object.keys(unsupportedTokens).includes(tokenIn.address)) {\n      return true\n    }\n    if (tokenOut && Object.keys(unsupportedTokens).includes(tokenOut.address)) {\n      return true\n    }\n  }\n\n  return false\n}\n","import { ContextApi } from 'contexts/Localization/types'\nimport { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'ZolaSwap',\n  description:\n    'Up and coming DEX! Earn ZOLA through yield farming or win it in the Lottery, then stake it in Sizzle Pools to earn more tokens! Initial Farm Offerings (new token launch model pioneered by ZolaSWAP), NFTs, and more, on a platform you can trust.',\n  image: 'https://zolaswap.finance/images/hero.png',\n}\n\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\n  let basePath\n  if (path.startsWith('/swap')) {\n    basePath = '/swap'\n  } else if (path.startsWith('/add')) {\n    basePath = '/add'\n  } else if (path.startsWith('/remove')) {\n    basePath = '/remove'\n  } else if (path.startsWith('/teams')) {\n    basePath = '/teams'\n  } else if (path.startsWith('/voting/proposal') && path !== '/voting/proposal/create') {\n    basePath = '/voting/proposal'\n  } else {\n    basePath = path\n  }\n\n  switch (basePath) {\n    case '/':\n      return {\n        title: `${t('Home')} | ${t('ZolaSwap')}`,\n      }\n    case '/swap':\n      return {\n        title: `${t('Exchange')} | ${t('ZolaSwap')}`,\n      }\n    case '/add':\n      return {\n        title: `${t('Add Liquidity')} | ${t('ZolaSwap')}`,\n      }\n    case '/remove':\n      return {\n        title: `${t('Remove Liquidity')} | ${t('ZolaSwap')}`,\n      }\n    case '/liquidity':\n      return {\n        title: `${t('Liquidity')} | ${t('ZolaSwap')}`,\n      }\n    case '/find':\n      return {\n        title: `${t('Import Pool')} | ${t('ZolaSwap')}`,\n      }\n    case '/competition':\n      return {\n        title: `${t('Trading Battle')} | ${t('ZolaSwap')}`,\n      }\n    case '/prediction':\n      return {\n        title: `${t('Prediction')} | ${t('ZolaSwap')}`,\n      }\n    case '/prediction/leaderboard':\n      return {\n        title: `${t('Leaderboard')} | ${t('ZolaSwap')}`,\n      }\n    case '/farms':\n      return {\n        title: `${t('Farms')} | ${t('ZolaSwap')}`,\n      }\n    case '/farms/auction':\n      return {\n        title: `${t('Farm Auctions')} | ${t('ZolaSwap')}`,\n      }\n    case '/pools':\n      return {\n        title: `${t('Pools')} | ${t('ZolaSwap')}`,\n      }\n    case '/lottery':\n      return {\n        title: `${t('Lottery')} | ${t('ZolaSwap')}`,\n      }\n    case '/collectibles':\n      return {\n        title: `${t('Collectibles')} | ${t('ZolaSwap')}`,\n      }\n    case '/ifo':\n      return {\n        title: `${t('Initial Farm Offering')} | ${t('ZolaSwap')}`,\n      }\n    case '/teams':\n      return {\n        title: `${t('Leaderboard')} | ${t('ZolaSwap')}`,\n      }\n    case '/profile':\n      return {\n        title: `${t('Your Profile')} | ${t('ZolaSwap')}`,\n      }\n    case '/profile/tasks':\n      return {\n        title: `${t('Task Center')} | ${t('ZolaSwap')}`,\n      }\n    case '/voting':\n      return {\n        title: `${t('Voting')} | ${t('ZolaSwap')}`,\n      }\n    case '/voting/proposal':\n      return {\n        title: `${t('Proposals')} | ${t('ZolaSwap')}`,\n      }\n    case '/voting/proposal/create':\n      return {\n        title: `${t('Make a Proposal')} | ${t('ZolaSwap')}`,\n      }\n    case '/info':\n      return {\n        title: `${t('Overview')} | ${t('ZolaSwap Info & Analytics')}`,\n        description: 'View statistics for Pancakeswap exchanges.',\n      }\n    case '/info/pools':\n      return {\n        title: `${t('Pools')} | ${t('ZolaSwap Info & Analytics')}`,\n        description: 'View statistics for Pancakeswap exchanges.',\n      }\n    case '/info/tokens':\n      return {\n        title: `${t('Pools')} | ${t('ZolaSwap Info & Analytics')}`,\n        description: 'View statistics for Pancakeswap exchanges.',\n      }\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport { useCakeBusdPrice } from 'hooks/useBUSDPrice'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)<{ bg?: string }>`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  position: relative;\n\n  &:after {\n    position: absolute;\n    content: ' ';\n    left: 20px;\n    right: 20px;\n    top: 20px;\n    bottom: 20px;\n    background-image: url(${(props) => props.bg});\n    background-size: contain;\n    background-repeat: no-repeat;\n    background-position: center;\n    z-index: -1;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nexport const PageMeta: React.FC<{ symbol?: string }> = ({ symbol }) => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  const cakePriceUsd = useCakeBusdPrice()\n  const cakePriceUsdDisplay = cakePriceUsd ? `$${cakePriceUsd.toFixed(3)}` : '...'\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  let pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\n  if (symbol) {\n    pageTitle = [symbol, title].join(' - ')\n  }\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\ninterface PageProps extends React.HTMLAttributes<HTMLDivElement> {\n  symbol?: string\n}\n\nconst Page: React.FC<PageProps & { bgUrl?: string }> = ({ children, symbol, bgUrl, ...props }) => {\n  return (\n    <>\n      <PageMeta symbol={symbol} />\n      <StyledPage bg={bgUrl} {...props}>\n        {children}\n      </StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import { ethers, Contract, Overrides } from 'ethers'\n\n/**\n * Estimate the gas needed to call a function, and add a 10% margin\n * @param contract Used to perform the call\n * @param methodName The name of the methode called\n * @param gasMarginPer10000 The gasMargin per 10000 (i.e. 10% -> 1000)\n * @param args An array of arguments to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const estimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[],\n  gasMarginPer10000: number,\n) => {\n  if (!contract[methodName]) {\n    throw new Error(`Method ${methodName} doesn't exist on ${contract.address}`)\n  }\n  const rawGasEstimation = await contract.estimateGas[methodName](...methodArgs)\n  // By convention, ethers.BigNumber values are multiplied by 1000 to avoid dealing with real numbers\n  const gasEstimation = rawGasEstimation\n    .mul(ethers.BigNumber.from(10000).add(ethers.BigNumber.from(gasMarginPer10000)))\n    .div(ethers.BigNumber.from(10000))\n  return gasEstimation\n}\n\n/**\n * Perform a contract call with a gas value returned from estimateGas\n * @param contract Used to perform the call\n * @param methodName The name of the method called\n * @param methodArgs An array of arguments to pass to the method\n * @param overrides An overrides object to pass to the method\n * @returns https://docs.ethers.io/v5/api/providers/types/#providers-TransactionReceipt\n */\nexport const callWithEstimateGas = async (\n  contract: Contract,\n  methodName: string,\n  methodArgs: any[] = [],\n  overrides: Overrides = {},\n  gasMarginPer10000 = 1000,\n): Promise<ethers.providers.TransactionResponse> => {\n  const gasEstimation = estimateGas(contract, methodName, methodArgs, gasMarginPer10000)\n  const tx = await contract[methodName](...methodArgs, {\n    gasLimit: gasEstimation,\n    ...overrides,\n  })\n  return tx\n}\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from 'config'\nimport getGasPrice from 'utils/getGasPrice'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT * 6,\n}\n\nexport const stakeFarm = async (masterChefContract, pid, amount) => {\n  const gasPrice = getGasPrice()\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.enterStaking(value, { ...options, gasPrice })\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, value, { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const unstakeFarm = async (masterChefContract, pid, amount) => {\n  const gasPrice = getGasPrice()\n  const value = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString()\n  if (pid === 0) {\n    const tx = await masterChefContract.leaveStaking(value, { ...options, gasPrice })\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.withdraw(pid, value, { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nexport const harvestFarm = async (masterChefContract, pid) => {\n  const gasPrice = getGasPrice()\n  if (pid === 0) {\n    const tx = await masterChefContract.leaveStaking('0', { ...options, gasPrice })\n    const receipt = await tx.wait()\n    return receipt.status\n  }\n\n  const tx = await masterChefContract.deposit(pid, '0', { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { CheckmarkIcon, CloseIcon, LinkExternal } from 'packages/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getVelasScanLink } from 'utils'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport CircleLoader from '../../Loader/CircleLoader'\n\nconst TransactionState = styled.div<{ pending: boolean; success?: boolean }>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-decoration: none !important;\n  border-radius: 0.5rem;\n  padding: 0.25rem 0rem;\n  font-weight: 500;\n  font-size: 0.825rem;\n  color: ${({ theme }) => theme.colors.primary};\n`\n\nconst IconWrapper = styled.div<{ pending: boolean; success?: boolean }>`\n  color: ${({ pending, success, theme }) =>\n    pending ? theme.colors.primary : success ? theme.colors.success : theme.colors.failure};\n`\n\nexport default function Transaction({ tx }: { tx: TransactionDetails }) {\n  const { chainId } = useActiveWeb3React()\n\n  const summary = tx?.summary\n  const pending = !tx?.receipt\n  const success = !pending && tx && (tx.receipt?.status === 1 || typeof tx.receipt?.status === 'undefined')\n\n  if (!chainId) return null\n\n  return (\n    <TransactionState pending={pending} success={success}>\n      <LinkExternal href={getVelasScanLink(tx.hash, 'transaction', chainId)}>{summary ?? tx.hash}</LinkExternal>\n      <IconWrapper pending={pending} success={success}>\n        {pending ? <CircleLoader /> : success ? <CheckmarkIcon color=\"success\" /> : <CloseIcon color=\"failure\" />}\n      </IconWrapper>\n    </TransactionState>\n  )\n}\n","import React, { useMemo, useCallback } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useDispatch } from 'react-redux'\nimport { Modal, ModalBody, Text, Button, Flex, InjectedModalProps } from 'packages/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { isTransactionRecent, useAllTransactions } from 'state/transactions/hooks'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport { AppDispatch } from 'state'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { AutoRow } from '../../Layout/Row'\nimport Transaction from './Transaction'\n\n// we want the latest one to come first, so return negative if a is after b\nfunction newTransactionsFirst(a: TransactionDetails, b: TransactionDetails) {\n  return b.addedTime - a.addedTime\n}\n\nfunction renderTransactions(transactions: TransactionDetails[]) {\n  return (\n    <Flex flexDirection=\"column\">\n      {transactions.map((tx) => {\n        return <Transaction key={tx.hash + tx.addedTime} tx={tx} />\n      })}\n    </Flex>\n  )\n}\n\nconst TransactionsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const { account, chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const allTransactions = useAllTransactions()\n\n  const { t } = useTranslation()\n\n  const sortedRecentTransactions = useMemo(() => {\n    const txs = Object.values(allTransactions)\n    return txs.filter(isTransactionRecent).sort(newTransactionsFirst)\n  }, [allTransactions])\n\n  const pending = sortedRecentTransactions.filter((tx) => !tx.receipt)\n  const confirmed = sortedRecentTransactions.filter((tx) => tx.receipt)\n\n  const clearAllTransactionsCallback = useCallback(() => {\n    if (chainId) dispatch(clearAllTransactions({ chainId }))\n  }, [dispatch, chainId])\n\n  return (\n    <Modal title={t('Recent Transactions')} headerBackground=\"gradients.cardHeader\" onDismiss={onDismiss}>\n      {account && (\n        <ModalBody>\n          {!!pending.length || !!confirmed.length ? (\n            <>\n              <AutoRow mb=\"1rem\" style={{ justifyContent: 'space-between' }}>\n                <Text>{t('Recent Transactions')}</Text>\n                <Button variant=\"tertiary\" scale=\"xs\" onClick={clearAllTransactionsCallback}>\n                  {t('clear all')}\n                </Button>\n              </AutoRow>\n              {renderTransactions(pending)}\n              {renderTransactions(confirmed)}\n            </>\n          ) : (\n            <Text>{t('No recent transactions')}</Text>\n          )}\n        </ModalBody>\n      )}\n    </Modal>\n  )\n}\n\nexport default TransactionsModal\n","import React from 'react'\nimport { HistoryIcon, Button, useModal } from 'packages/uikit'\nimport TransactionsModal from './TransactionsModal'\n\nconst Transactions = () => {\n  const [onPresentTransactionsModal] = useModal(<TransactionsModal />)\n  return (\n    <>\n      <Button variant=\"text\" p={0} onClick={onPresentTransactionsModal} ml=\"16px\">\n        <HistoryIcon color=\"textSubtle\" width=\"24px\" />\n      </Button>\n    </>\n  )\n}\n\nexport default Transactions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Flex, Heading, IconButton, ArrowBackIcon, NotificationDot } from 'packages/uikit'\nimport { Link } from 'react-router-dom'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport GlobalSettings from 'components/Menu/GlobalSettings'\nimport Transactions from './Transactions'\nimport QuestionHelper from '../QuestionHelper'\n\ninterface Props {\n  title: string\n  subtitle: string\n  helper?: string\n  backTo?: string\n  noConfig?: boolean\n}\n\nconst AppHeaderContainer = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  padding: 24px;\n  width: 100%;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n`\n\nconst AppHeader: React.FC<Props> = ({ title, subtitle, helper, backTo, noConfig = false }) => {\n  const [expertMode] = useExpertModeManager()\n\n  return (\n    <AppHeaderContainer>\n      {!noConfig && (\n        <Flex alignItems=\"center\">\n          <NotificationDot show={expertMode}>\n            <GlobalSettings />\n          </NotificationDot>\n        </Flex>\n      )}\n      <Flex alignItems=\"center\" mr={noConfig ? 0 : '16px'} ml={noConfig ? 0 : '16px'}>\n        {backTo && (\n          <IconButton as={Link} to={backTo}>\n            <ArrowBackIcon width=\"32px\" />\n          </IconButton>\n        )}\n        <Flex flexDirection=\"column\" alignItems=\"center\">\n          <Heading as=\"h2\" mb=\"8px\" scale=\"xl\">\n            {title}\n          </Heading>\n          <Flex alignItems=\"center\">\n            {helper && <QuestionHelper text={helper} mr=\"4px\" />}\n            <Text color=\"textSubtle\" fontSize=\"14px\">\n              {subtitle}\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n      {!noConfig && (\n        <Flex alignItems=\"center\">\n          <Transactions />\n        </Flex>\n      )}\n    </AppHeaderContainer>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card } from 'packages/uikit'\n\nexport const BodyWrapper = styled(Card)`\n  border-radius: 24px;\n  max-width: 436px;\n  width: 100%;\n  z-index: 1;\n`\n\n/**\n * The styled container element that wraps the content of most pages and the tabs.\n */\nexport default function AppBody({ children }: { children: React.ReactNode }) {\n  return <BodyWrapper>{children}</BodyWrapper>\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import React from 'react'\nimport {\n  Tag,\n  VerifiedIcon,\n  CommunityIcon,\n  RefreshIcon,\n  AutoRenewIcon,\n  TagProps,\n  TimerIcon,\n  BlockIcon,\n  VoteIcon,\n} from 'packages/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst CommunityTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"failure\" outline startIcon={<CommunityIcon width=\"18px\" color=\"failure\" mr=\"4px\" />} {...props}>\n      {t('Community')}\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nconst VoteNowTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" startIcon={<VoteIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Vote Now')}\n    </Tag>\n  )\n}\n\nconst SoonTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"binance\" startIcon={<TimerIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Soon')}\n    </Tag>\n  )\n}\n\nconst ClosedTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textDisabled\" startIcon={<BlockIcon width=\"18px\" color=\"textDisabled\" mr=\"4px\" />} {...props}>\n      {t('Closed')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, CommunityTag, DualTag, ManualPoolTag, CompoundingPoolTag, VoteNowTag, SoonTag, ClosedTag }\n","import sample from 'lodash/sample'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE]\n\nconst getNodeUrl = () => {\n  return sample(nodes)\n}\n\nexport default getNodeUrl\n","import { Address, Images } from '../types'\n\nexport enum CollectionKey {\n  PANCAKE = 'pancake',\n}\n\ntype Collection = {\n  name: string\n  address: Address\n}\n\nexport type Collections = {\n  [key in CollectionKey]: Collection\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type Nft = {\n  id?: number | string\n  name: string\n  description: string\n  images: NftImages\n  video?: {\n    webm: string\n    mp4: string\n  }\n\n  // Uniquely identifies the nft.\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\n  identifier: string\n\n  attributes?: any\n}\n\nexport type Nfts = {\n  [key in CollectionKey]: Nft[]\n}\n","const ENS_NAME_REGEX = /^(([a-zA-Z0-9]+(-[a-zA-Z0-9]+)*\\.)+)eth(\\/.*)?$/\n\nexport function parseENSAddress(ensAddress: string): { ensName: string; ensPath: string | undefined } | undefined {\n  const match = ensAddress.match(ENS_NAME_REGEX)\n  if (!match) return undefined\n  return { ensName: `${match[1].toLowerCase()}eth`, ensPath: match[4] }\n}\n\nexport default parseENSAddress\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst StyledSVG = styled.svg<{ size: string; stroke?: string }>`\n  animation: 2s ${rotate} linear infinite;\n  height: ${({ size }) => size};\n  width: ${({ size }) => size};\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.colors.primary};\n  }\n`\n\n/**\n * Takes in custom size and stroke for circle color, default to primary color as fill,\n * need ...rest for layered styles on top\n */\nexport default function CircleLoader({\n  size = '16px',\n  stroke,\n  ...rest\n}: {\n  size?: string\n  stroke?: string\n  [k: string]: any\n}) {\n  return (\n    <StyledSVG viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" size={size} stroke={stroke} {...rest}>\n      <path\n        d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n        strokeWidth=\"2.5\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </StyledSVG>\n  )\n}\n","/* eslint-disable no-continue */\n/* eslint-disable no-await-in-loop */\nimport { TokenList } from '@uniswap/token-lists'\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\nimport Ajv from 'ajv'\nimport contenthashToUri from './contenthashToUri'\nimport { parseENSAddress } from './ENS/parseENSAddress'\nimport uriToHttp from './uriToHttp'\n\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\n\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n * @param resolveENSContentHash resolves an ens name to a contenthash\n */\nexport default async function getTokenList(\n  listUrl: string,\n  resolveENSContentHash: (ensName: string) => Promise<string>,\n): Promise<TokenList> {\n  const parsedENS = parseENSAddress(listUrl)\n  let urls: string[]\n  if (parsedENS) {\n    let contentHashUri\n    try {\n      contentHashUri = await resolveENSContentHash(parsedENS.ensName)\n    } catch (error) {\n      console.error(`Failed to resolve ENS name: ${parsedENS.ensName}`, error)\n      throw new Error(`Failed to resolve ENS name: ${parsedENS.ensName}`)\n    }\n    let translatedUri\n    try {\n      translatedUri = contenthashToUri(contentHashUri)\n    } catch (error) {\n      console.error('Failed to translate contenthash to URI', contentHashUri)\n      throw new Error(`Failed to translate contenthash to URI: ${contentHashUri}`)\n    }\n    urls = uriToHttp(`${translatedUri}${parsedENS.ensPath ?? ''}`)\n  } else {\n    urls = uriToHttp(listUrl)\n  }\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const isLast = i === urls.length - 1\n    let response\n    try {\n      response = await fetch(url)\n    } catch (error) {\n      console.error('Failed to fetch list', listUrl, error)\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    if (!response.ok) {\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    const json = await response.json()\n    if (!tokenListValidator(json)) {\n      const validationErrors: string =\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\n          const add = `${(error as any).dataPath} ${error.message ?? ''}`\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\n        }, '') ?? 'unknown error'\n      throw new Error(`Token list failed validation: ${validationErrors}`)\n    }\n    return json as TokenList\n  }\n  throw new Error('Unrecognized list URL protocol.')\n}\n","import { Contract } from '@ethersproject/contracts'\nimport { Provider } from '@ethersproject/abstract-provider'\nimport { namehash } from 'ethers/lib/utils'\n\nconst REGISTRAR_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'resolver',\n    outputs: [\n      {\n        name: 'resolverAddress',\n        type: 'address',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\nconst REGISTRAR_ADDRESS = '0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e'\n\nconst RESOLVER_ABI = [\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: 'bytes32',\n        name: 'node',\n        type: 'bytes32',\n      },\n    ],\n    name: 'contenthash',\n    outputs: [\n      {\n        internalType: 'bytes',\n        name: '',\n        type: 'bytes',\n      },\n    ],\n    payable: false,\n    stateMutability: 'view',\n    type: 'function',\n  },\n]\n\n// cache the resolver contracts since most of them are the public resolver\nfunction resolverContract(resolverAddress: string, provider: Provider): Contract {\n  return new Contract(resolverAddress, RESOLVER_ABI, provider)\n}\n\n/**\n * Fetches and decodes the result of an ENS contenthash lookup on mainnet to a URI\n * @param ensName to resolve\n * @param provider provider to use to fetch the data\n */\nexport default async function resolveENSContentHash(ensName: string, provider: Provider): Promise<string> {\n  const ensRegistrarContract = new Contract(REGISTRAR_ADDRESS, REGISTRAR_ABI, provider)\n  const hash = namehash(ensName)\n  const resolverAddress = await ensRegistrarContract.resolver(hash)\n  return resolverContract(resolverAddress, provider).contenthash(hash)\n}\n","import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@wagyu-swap/sdk'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList from '../utils/getTokenList'\nimport resolveENSContentHash from '../utils/ENS/resolveENSContentHash'\nimport useWeb3Provider from './useActiveWeb3React'\n\nfunction useFetchListCallback(): (listUrl: string, sendDispatch?: boolean) => Promise<TokenList> {\n  const { library } = useWeb3Provider()\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const ensResolver = useCallback(\n    (ensName: string) => {\n      if (chainId !== ChainId.MAINNET) {\n        throw new Error('Could not construct mainnet ENS resolver')\n      }\n      return resolveENSContentHash(ensName, library)\n    },\n    [chainId, library],\n  )\n\n  // note: prevent dispatch if using for list search or unsupported list\n  return useCallback(\n    async (listUrl: string, sendDispatch = true) => {\n      const requestId = nanoid()\n      if (sendDispatch) {\n        dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      }\n      return getTokenList(listUrl, ensResolver)\n        .then((tokenList) => {\n          if (sendDispatch) {\n            dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          }\n          return tokenList\n        })\n        .catch((error) => {\n          console.error(`Failed to get list at url ${listUrl}`, error)\n          if (sendDispatch) {\n            dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          }\n          throw error\n        })\n    },\n    [dispatch, ensResolver],\n  )\n}\n\nexport default useFetchListCallback\n","import React, { createContext, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from 'components/Toast'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import React from 'react'\nimport { ToastContainer } from 'components/Toast'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { escapeRegExp } from '../../utils'\n\nconst StyledInput = styled.input<{ error?: boolean; fontSize?: string; align?: string }>`\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.text)};\n  width: 0;\n  position: relative;\n  font-weight: 500;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: transparent;\n  font-size: 16px;\n  text-align: ${({ align }) => align && align};\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  [type='number'] {\n    -moz-appearance: textfield;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst inputRegex = RegExp(`^\\\\d*(?:\\\\\\\\[.])?\\\\d*$`) // match escaped \".\" characters via in a non-capturing group\n\nexport const Input = React.memo(function InnerInput({\n  value,\n  onUserInput,\n  placeholder,\n  ...rest\n}: {\n  value: string | number\n  onUserInput: (input: string) => void\n  error?: boolean\n  fontSize?: string\n  align?: 'right' | 'left'\n} & Omit<React.HTMLProps<HTMLInputElement>, 'ref' | 'onChange' | 'as'>) {\n  const enforcer = (nextUserInput: string) => {\n    if (nextUserInput === '' || inputRegex.test(escapeRegExp(nextUserInput))) {\n      onUserInput(nextUserInput)\n    }\n  }\n\n  const { t } = useTranslation()\n\n  return (\n    <StyledInput\n      {...rest}\n      value={value}\n      onChange={(event) => {\n        // replace commas with periods, because we exclusively uses period as the decimal separator\n        enforcer(event.target.value.replace(/,/g, '.'))\n      }}\n      // universal input options\n      inputMode=\"decimal\"\n      title={t('Token Amount')}\n      autoComplete=\"off\"\n      autoCorrect=\"off\"\n      // text-specific options\n      type=\"text\"\n      pattern=\"^[0-9]*[.,]?[0-9]*$\"\n      placeholder={placeholder || '0.0'}\n      minLength={1}\n      maxLength={79}\n      spellCheck=\"false\"\n    />\n  )\n})\n\nexport default Input\n","import React from 'react'\nimport { Currency, Pair } from '@wagyu-swap/sdk'\nimport { Button, ChevronDownIcon, Text, useModal, Flex } from 'packages/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport CurrencySearchModal from '../SearchModal/CurrencySearchModal'\nimport { CurrencyLogo, DoubleCurrencyLogo } from '../Logo'\n\nimport { RowBetween } from '../Layout/Row'\nimport { Input as NumericalInput } from './NumericalInput'\n\nconst InputRow = styled.div<{ selected: boolean }>`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: ${({ selected }) => (selected ? '0.75rem 0.5rem 0.75rem 1rem' : '0.75rem 0.75rem 0.75rem 1rem')};\n`\nconst CurrencySelectButton = styled(Button).attrs({ variant: 'text', scale: 'sm' })`\n  padding: 0 0.5rem;\n`\nconst LabelRow = styled.div`\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0.75rem 1rem 0 1rem;\n`\nconst InputPanel = styled.div<{ hideInput?: boolean }>`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: ${({ hideInput }) => (hideInput ? '8px' : '20px')};\n  background-color: ${({ theme }) => theme.colors.background};\n  z-index: 1;\n`\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: 16px;\n  background-color: ${({ theme }) => theme.colors.input};\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n`\ninterface CurrencyInputPanelProps {\n  value: string\n  onUserInput: (value: string) => void\n  onMax?: () => void\n  showMaxButton: boolean\n  label?: string\n  onCurrencySelect: (currency: Currency) => void\n  currency?: Currency | null\n  disableCurrencySelect?: boolean\n  hideBalance?: boolean\n  pair?: Pair | null\n  hideInput?: boolean\n  otherCurrency?: Currency | null\n  id: string\n  showCommonBases?: boolean\n}\nexport default function CurrencyInputPanel({\n  value,\n  onUserInput,\n  onMax,\n  showMaxButton,\n  label,\n  onCurrencySelect,\n  currency,\n  disableCurrencySelect = false,\n  hideBalance = false,\n  pair = null, // used for double token logo\n  hideInput = false,\n  otherCurrency,\n  id,\n  showCommonBases,\n}: CurrencyInputPanelProps) {\n  const { account } = useActiveWeb3React()\n  const selectedCurrencyBalance = useCurrencyBalance(account ?? undefined, currency ?? undefined)\n  const { t } = useTranslation()\n  const translatedLabel = label || t('Input')\n\n  const [onPresentCurrencyModal] = useModal(\n    <CurrencySearchModal\n      onCurrencySelect={onCurrencySelect}\n      selectedCurrency={currency}\n      otherSelectedCurrency={otherCurrency}\n      showCommonBases={showCommonBases}\n    />,\n  )\n  return (\n    <InputPanel id={id}>\n      <Container hideInput={hideInput}>\n        {!hideInput && (\n          <LabelRow>\n            <RowBetween>\n              <Text fontSize=\"14px\">{translatedLabel}</Text>\n              {account && (\n                <Text onClick={onMax} fontSize=\"14px\" style={{ display: 'inline', cursor: 'pointer' }}>\n                  {!hideBalance && !!currency && selectedCurrencyBalance\n                    ? t('Balance: %amount%', { amount: selectedCurrencyBalance?.toSignificant(6) ?? '' })\n                    : ' -'}\n                </Text>\n              )}\n            </RowBetween>\n          </LabelRow>\n        )}\n        <InputRow style={hideInput ? { padding: '0', borderRadius: '8px' } : {}} selected={disableCurrencySelect}>\n          {!hideInput && (\n            <>\n              <NumericalInput\n                className=\"token-amount-input\"\n                value={value}\n                onUserInput={(val) => {\n                  onUserInput(val)\n                }}\n              />\n              {account && currency && showMaxButton && label !== 'To' && (\n                <Button onClick={onMax} scale=\"sm\" variant=\"text\">\n                  MAX\n                </Button>\n              )}\n            </>\n          )}\n          <CurrencySelectButton\n            selected={!!currency}\n            className=\"open-currency-select-button\"\n            onClick={() => {\n              if (!disableCurrencySelect) {\n                onPresentCurrencyModal()\n              }\n            }}\n          >\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n              {pair ? (\n                <DoubleCurrencyLogo currency0={pair.token0} currency1={pair.token1} size={16} margin />\n              ) : currency ? (\n                <CurrencyLogo currency={currency} size=\"24px\" style={{ marginRight: '8px' }} />\n              ) : null}\n              {pair ? (\n                <Text id=\"pair\">\n                  {pair?.token0.symbol}:{pair?.token1.symbol}\n                </Text>\n              ) : (\n                <Text id=\"pair\">\n                  {(currency && currency.symbol && currency.symbol.length > 20\n                    ? `${currency.symbol.slice(0, 4)}...${currency.symbol.slice(\n                        currency.symbol.length - 5,\n                        currency.symbol.length,\n                      )}`\n                    : currency?.symbol) || t('Select a currency')}\n                </Text>\n              )}\n              {!disableCurrencySelect && <ChevronDownIcon />}\n            </Flex>\n          </CurrencySelectButton>\n        </InputRow>\n      </Container>\n    </InputPanel>\n  )\n}\n","import { useMemo } from 'react'\nimport { Token } from '@wagyu-swap/sdk'\nimport { isAddress } from '../../utils'\n\nexport function filterTokens(tokens: Token[], search: string): Token[] {\n  if (search.length === 0) return tokens\n\n  const searchingAddress = isAddress(search)\n\n  if (searchingAddress) {\n    return tokens.filter((token) => token.address === searchingAddress)\n  }\n\n  const lowerSearchParts = search\n    .toLowerCase()\n    .split(/\\s+/)\n    .filter((s) => s.length > 0)\n\n  if (lowerSearchParts.length === 0) {\n    return tokens\n  }\n\n  const matchesSearch = (s: string): boolean => {\n    const sParts = s\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s_) => s_.length > 0)\n\n    return lowerSearchParts.every((p) => p.length === 0 || sParts.some((sp) => sp.startsWith(p) || sp.endsWith(p)))\n  }\n\n  return tokens.filter((token) => {\n    const { symbol, name } = token\n    return (symbol && matchesSearch(symbol)) || (name && matchesSearch(name))\n  })\n}\n\nexport function useSortedTokensByQuery(tokens: Token[] | undefined, searchQuery: string): Token[] {\n  return useMemo(() => {\n    if (!tokens) {\n      return []\n    }\n\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter((s) => s.length > 0)\n\n    if (symbolMatch.length > 1) {\n      return tokens\n    }\n\n    const exactMatches: Token[] = []\n    const symbolSubtrings: Token[] = []\n    const rest: Token[] = []\n\n    // sort tokens by exact match -> subtring on symbol match -> rest\n    tokens.map((token) => {\n      if (token.symbol?.toLowerCase() === symbolMatch[0]) {\n        return exactMatches.push(token)\n      }\n      if (token.symbol?.toLowerCase().startsWith(searchQuery.toLowerCase().trim())) {\n        return symbolSubtrings.push(token)\n      }\n      return rest.push(token)\n    })\n\n    return [...exactMatches, ...symbolSubtrings, ...rest]\n  }, [tokens, searchQuery])\n}\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from 'packages/uikit'\nimport { ethers } from 'ethers'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 5000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\n// const bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  // [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): ethers.providers.Web3Provider => {\n  const library = new ethers.providers.Web3Provider(provider)\n  library.pollingInterval = POLLING_INTERVAL\n  return library\n}\n\n/**\n * BSC Wallet requires a different sign method\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\n */\nexport const signMessage = async (provider: any, account: string, message: string): Promise<string> => {\n  if (window.BinanceChain) {\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\n    return signature\n  }\n\n  /**\n   * Wallet Connect does not sign the message correctly unless you use their method\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\n   */\n  if (provider.provider?.wc) {\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\n    return signature\n  }\n\n  return provider.getSigner(account).signMessage(message)\n}\n","import styled from 'styled-components'\n\nconst Dots = styled.span`\n  &::after {\n    display: inline-block;\n    animation: ellipsis 1.25s infinite;\n    content: '.';\n    width: 1em;\n    text-align: left;\n  }\n  @keyframes ellipsis {\n    0% {\n      content: '.';\n    }\n    33% {\n      content: '..';\n    }\n    66% {\n      content: '...';\n    }\n  }\n`\n\nexport default Dots\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Token, TokenAmount } from '@wagyu-swap/sdk'\nimport { useTokenContract } from './useContract'\nimport { useSingleCallResult } from '../state/multicall/hooks'\n\n// returns undefined if input token is undefined, or fails to get token contract,\n// or contract total supply cannot be fetched\nfunction useTotalSupply(token?: Token): TokenAmount | undefined {\n  const contract = useTokenContract(token?.address, false)\n\n  const totalSupply: BigNumber = useSingleCallResult(contract, 'totalSupply')?.result?.[0]\n\n  return token && totalSupply ? new TokenAmount(token, totalSupply.toString()) : undefined\n}\n\nexport default useTotalSupply\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport { multicallv2 } from 'utils/multicall'\nimport { TeamsById } from 'state/types'\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport { getPancakeProfileAddress } from 'utils/addressHelpers'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = await profileContract.getTeamProfile(teamId)\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers.toNumber(),\n      points: numberPoints.toNumber(),\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.numberTeams()\n\n    const calls = []\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push({\n        address: getPancakeProfileAddress(),\n        name: 'getTeamProfile',\n        params: [i],\n      })\n    }\n    const teamData = await multicallv2(profileABI, calls)\n\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: numberUsers.toNumber(),\n          points: numberPoints.toNumber(),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import { IPFS_GATEWAY } from '../index'\nimport { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png`,\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped, too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png`,\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: `${IPFS_GATEWAY}/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png`,\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import { useMemo } from 'react'\nimport { ChainId, Token } from '@wagyu-swap/sdk'\nimport { useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { AppState } from '../../index'\nimport { deserializeToken } from './helpers'\n\nexport default function useUserAddedTokens(): Token[] {\n  const { chainId } = useActiveWeb3React()\n  const serializedTokensMap = useSelector<AppState, AppState['user']['tokens']>(({ user: { tokens } }) => tokens)\n\n  return useMemo(() => {\n    if (!chainId) return []\n    return Object.values(serializedTokensMap?.[chainId as ChainId] ?? {}).map(deserializeToken)\n  }, [serializedTokensMap, chainId])\n}\n","import { Nft } from './types'\nimport { IPFS_GATEWAY } from '../../index'\n\nconst Nfts: Nft[] = []\n\nexport default Nfts\n","import pancakeBunnies from './pancakeBunnies'\nimport { CollectionKey, Nfts } from './types'\n\nconst nfts: Nfts = {\n  [CollectionKey.PANCAKE]: pancakeBunnies,\n}\n\nexport default nfts\nexport { default as collections } from './collections'\n","import nfts from 'config/constants/nfts'\nimport { IPFS_GATEWAY } from 'config'\nimport collections from 'config/constants/nfts/collections'\nimport { Nft, CollectionKey } from 'config/constants/nfts/types'\nimport { getAddress } from './addressHelpers'\nimport { getErc721Contract } from './contractHelpers'\n\n/**\n * Some sources like Pancake do not return HTTP tokenURI's\n */\nexport const getTokenUrl = (tokenUri: string) => {\n  if (tokenUri.startsWith('ipfs://')) {\n    return `${IPFS_GATEWAY}/${tokenUri.slice(6)}`\n  }\n\n  return tokenUri\n}\n\nexport const getBunnyNftAddress = (collectionKey: CollectionKey = CollectionKey.PANCAKE) => {\n  return getAddress(collections[collectionKey].address)\n}\n\nexport const fetchCachedUriData = async (tokenUrl: string) => {\n  try {\n    const localUriData = localStorage.getItem(tokenUrl)\n\n    if (localUriData) {\n      const data = JSON.parse(localUriData)\n      return data\n    }\n\n    const uriDataResponse = await fetch(tokenUrl)\n\n    if (!uriDataResponse.ok) {\n      throw new Error('Unable to fetch uriData')\n    }\n\n    const uriData = await uriDataResponse.json()\n    localStorage.setItem(tokenUrl, JSON.stringify(uriData))\n    return uriData\n  } catch (error) {\n    console.error(error)\n    return null\n  }\n}\n\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\n  try {\n    const contract = getErc721Contract(nftAddress)\n    const tokenUri = await contract.tokenURI(tokenId)\n    const uriData = await fetchCachedUriData(getTokenUrl(tokenUri))\n\n    if (!uriData) {\n      return null\n    }\n\n    return uriData\n  } catch (error) {\n    console.error('getTokenUriData', error)\n    return null\n  }\n}\n\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\n  const uriData = await getTokenUriData(nftAddress, tokenId)\n\n  // Bail out early if we have no uriData, identifierKey, or the value does not\n  // exist in the object\n  if (!uriData) {\n    return null\n  }\n\n  return nfts.pancake.find((nft) => {\n    return uriData.image.includes(nft.identifier)\n  })\n}\n","import { ChainId, Currency, currencyEquals, JSBI, Price } from '@wagyu-swap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport tokens, { mainnetTokens } from 'config/constants/tokens'\nimport { PairState, usePairs } from './usePairs'\nimport { wrappedCurrency } from '../utils/wrappedCurrency'\n\nconst USDT_MAINNET = mainnetTokens.usdt\nconst { wmatic: WMATIC } = tokens\n\n/**\n * Returns the price in BUSD of the input currency\n * @param currency currency to compute the BUSD price of\n */\nexport default function useBUSDPrice(currency?: Currency): Price | undefined {\n  const { chainId } = useActiveWeb3React()\n  const wrapped = wrappedCurrency(currency, chainId)\n  const tokenPairs: [Currency | undefined, Currency | undefined][] = useMemo(\n    () => [\n      [chainId && wrapped && currencyEquals(WMATIC, wrapped) ? undefined : currency, chainId ? WMATIC : undefined],\n      [wrapped?.equals(USDT_MAINNET) ? undefined : wrapped, chainId === ChainId.MAINNET ? USDT_MAINNET : undefined],\n      [chainId ? WMATIC : undefined, chainId === ChainId.MAINNET ? USDT_MAINNET : undefined],\n    ],\n    [chainId, currency, wrapped],\n  )\n\n  const [[ethPairState, ethPair], [usdtPairState, usdtPair], [usdtEthPairState, usdtEthPair]] = usePairs(tokenPairs)\n\n  return useMemo(() => {\n    if (!currency || !wrapped || !chainId) {\n      return undefined\n    }\n    // handle weth/eth\n    if (wrapped.equals(WMATIC)) {\n      if (usdtPair) {\n        const price = usdtPair.priceOf(WMATIC)\n        return new Price(currency, USDT_MAINNET, price.denominator, price.numerator)\n      }\n      return undefined\n    }\n    // handle busd\n    if (wrapped.equals(USDT_MAINNET)) {\n      return new Price(USDT_MAINNET, USDT_MAINNET, '1', '1')\n    }\n\n    const ethPairETHAmount = ethPair?.reserveOf(WMATIC)\n\n    const ethPairETHBUSDValue: JSBI =\n      ethPairETHAmount &&\n      usdtEthPair &&\n      ethPairETHAmount.toFixed(0) !== '0' &&\n      Number((usdtEthPair as any).tokenAmounts[0].toFixed()) !== 0\n        ? usdtEthPair.priceOf(WMATIC).quote(ethPairETHAmount).raw\n        : JSBI.BigInt(0)\n\n    // all other tokens\n    // first try the busd pair\n    if (\n      usdtPairState === PairState.EXISTS &&\n      usdtPair &&\n      usdtPair.reserveOf(USDT_MAINNET).greaterThan(ethPairETHBUSDValue)\n    ) {\n      const price = usdtPair.priceOf(wrapped)\n      return new Price(currency, USDT_MAINNET, price.denominator, price.numerator)\n    }\n    if (ethPairState === PairState.EXISTS && ethPair && usdtEthPairState === PairState.EXISTS && usdtEthPair) {\n      if (usdtEthPair.reserveOf(USDT_MAINNET).greaterThan('0') && ethPair.reserveOf(WMATIC).greaterThan('0')) {\n        const ethBusdPrice = usdtEthPair.priceOf(USDT_MAINNET)\n        const currencyEthPrice = ethPair.priceOf(WMATIC)\n        const busdPrice = ethBusdPrice.multiply(currencyEthPrice).invert()\n\n        return new Price(currency, USDT_MAINNET, busdPrice.denominator, busdPrice.numerator)\n      }\n    }\n\n    return undefined\n  }, [chainId, currency, ethPair, ethPairState, usdtEthPair, usdtEthPairState, usdtPair, usdtPairState, wrapped])\n}\n\nexport const useCakeBusdPrice = (): Price | undefined => {\n  const cakeBusdPrice = useBUSDPrice(tokens.cake)\n  return cakeBusdPrice\n}\n\nexport const useBNBBusdPrice = (): Price | undefined => {\n  const bnbBusdPrice = useBUSDPrice(tokens.wmatic)\n  return bnbBusdPrice\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, useLocation } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from 'packages/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledNav = styled.nav`\n  margin-bottom: 40px;\n  z-index: 1;\n`\n\nconst getActiveIndex = (pathname: string): number => {\n  if (\n    pathname.includes('/pool') ||\n    pathname.includes('/create') ||\n    pathname.includes('/add') ||\n    pathname.includes('/remove') ||\n    pathname.includes('/find') ||\n    pathname.includes('/liquidity')\n  ) {\n    return 1\n  }\n  return 0\n}\n\nconst Nav = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  return (\n    <StyledNav>\n      <ButtonMenu activeIndex={getActiveIndex(location.pathname)} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem id=\"swap-nav-link\" to=\"/swap\" as={Link}>\n          {t('Swap')}\n        </ButtonMenuItem>\n        <ButtonMenuItem id=\"pool-nav-link\" to=\"/pool\" as={Link}>\n          {t('Liquidity')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </StyledNav>\n  )\n}\n\nexport default Nav\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex } from 'packages/uikit'\nimport Footer from 'components/Menu/Footer'\nimport SubNav from 'components/Menu/SubNav'\nimport { PageMeta } from 'components/Layout/Page'\n\nconst StyledPage = styled.div<{ bg?: string }>`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding: 16px;\n  padding-bottom: 0;\n  min-height: calc(100vh - 64px);\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n\n  position: relative;\n\n  &:after {\n    position: absolute;\n    content: ' ';\n    left: 20px;\n    right: 20px;\n    top: 20px;\n    bottom: 20px;\n    background-image: url(${(props) => props.bg});\n    background-size: contain;\n    background-repeat: no-repeat;\n    background-position: center;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    background-size: auto;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding: 24px;\n    padding-bottom: 0;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    min-height: calc(100vh - 64px);\n  }\n`\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement> & { bgUrl?: string }> = ({ children, bgUrl, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage bg={bgUrl} {...props}>\n        <SubNav />\n        {children}\n        <Flex flexGrow={1} />\n        {/* <Footer /> */}\n      </StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import React from 'react'\nimport {\n  TokenPairImage as UIKitTokenPairImage,\n  TokenPairImageProps as UIKitTokenPairImageProps,\n  TokenImage as UIKitTokenImage,\n  ImageProps,\n} from 'packages/uikit'\nimport tokens from 'config/constants/tokens'\nimport { Token } from '@wagyu-swap/sdk'\nimport getTokenLogoURL from 'utils/getTokenLogoURL'\n\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\n  primaryToken: Token\n  secondaryToken: Token\n}\n\nconst getImageUrlFromToken = (token: Token) => {\n  const address = token.symbol === 'MATIC' ? tokens.wmatic.address : token.address\n  return getTokenLogoURL(address)\n  // return `/images/tokens/${address}.svg`\n}\n\nexport const TokenPairImage: React.FC<TokenPairImageProps> = ({ primaryToken, secondaryToken, ...props }) => {\n  return (\n    <UIKitTokenPairImage\n      primarySrc={getImageUrlFromToken(primaryToken)}\n      secondarySrc={getImageUrlFromToken(secondaryToken)}\n      {...props}\n    />\n  )\n}\n\ninterface TokenImageProps extends ImageProps {\n  token: Token\n}\n\nexport const TokenImage: React.FC<TokenImageProps> = ({ token, ...props }) => {\n  return <UIKitTokenImage src={getImageUrlFromToken(token)} {...props} />\n}\n","import { Token, ChainId } from '@wagyu-swap/sdk'\nimport tokens from './tokens'\nimport farms from './farms'\nimport { Ifo } from './types'\n\n// const cakeBnbLpToken = new Token(ChainId.MAINNET, farms[1].lpAddresses[ChainId.MAINNET], 18, farms[1].lpSymbol)\n\nconst ifos: Ifo[] = [\n  // {\n  //   id: 'kalmar',\n  //   address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\n  //   isActive: true,\n  //   name: 'Kalmar (KALM)',\n  //   poolBasic: {\n  //     saleAmount: '375,000 KALM',\n  //     raiseAmount: '$750,000',\n  //     cakeToBurn: '$375,000',\n  //     distributionRatio: 0.3,\n  //   },\n  //   poolUnlimited: {\n  //     saleAmount: '875,000 KALM',\n  //     raiseAmount: '$2,500,000',\n  //     cakeToBurn: '$1,250,000',\n  //     distributionRatio: 0.7,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.kalm,\n  //   releaseBlockNumber: 7707736,\n  //   campaignId: '511110000',\n  //   articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\n  //   tokenOfferingPrice: 2.0,\n  //   version: 2,\n  // },\n  // {\n  //   id: 'hotcross',\n  //   address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\n  //   isActive: false,\n  //   name: 'Hot Cross (HOTCROSS)',\n  //   poolBasic: {\n  //     saleAmount: '15,000,000 HOTCROSS',\n  //     raiseAmount: '$750,000',\n  //     cakeToBurn: '$375,000',\n  //     distributionRatio: 0.3,\n  //   },\n  //   poolUnlimited: {\n  //     saleAmount: '35,000,000 HOTCROSS',\n  //     raiseAmount: '$1,750,000',\n  //     cakeToBurn: '$875,000',\n  //     distributionRatio: 0.7,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.hotcross,\n  //   releaseBlockNumber: 7477900,\n  //   campaignId: '511100000',\n  //   articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\n  //   tokenOfferingPrice: 0.05,\n  //   version: 2,\n  // },\n  // {\n  //   id: 'horizon',\n  //   address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\n  //   isActive: false,\n  //   name: 'Horizon Protocol (HZN)',\n  //   poolBasic: {\n  //     saleAmount: '3,000,000 HZN',\n  //     raiseAmount: '$750,000',\n  //     cakeToBurn: '$375,000',\n  //     distributionRatio: 0.3,\n  //   },\n  //   poolUnlimited: {\n  //     saleAmount: '7,000,000 HZN',\n  //     raiseAmount: '$1,750,000',\n  //     cakeToBurn: '$875,000',\n  //     distributionRatio: 0.7,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.hzn,\n  //   releaseBlockNumber: 6581111,\n  //   campaignId: '511090000',\n  //   articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\n  //   tokenOfferingPrice: 0.25,\n  //   version: 2,\n  // },\n  // {\n  //   id: 'belt',\n  //   address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n  //   isActive: false,\n  //   name: 'Belt (BELT)',\n  //   poolUnlimited: {\n  //     saleAmount: '150,000 BELT',\n  //     raiseAmount: '$3,000,000',\n  //     cakeToBurn: '$1,500,000',\n  //     distributionRatio: 1,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.belt,\n  //   releaseBlockNumber: 5493919,\n  //   campaignId: '511080000',\n  //   articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\n  //   tokenOfferingPrice: null,\n  //   version: 1,\n  // },\n  // {\n  //   id: 'watch',\n  //   address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n  //   isActive: false,\n  //   name: 'Yieldwatch (WATCH)',\n  //   poolUnlimited: {\n  //     saleAmount: '8,000,000 WATCH',\n  //     raiseAmount: '$800,000',\n  //     cakeToBurn: '$400,000',\n  //     distributionRatio: 1,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.watch,\n  //   releaseBlockNumber: 5294924,\n  //   campaignId: '511070000',\n  //   articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\n  //   tokenOfferingPrice: null,\n  //   version: 1,\n  // },\n  // {\n  //   id: 'berry',\n  //   address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n  //   isActive: false,\n  //   name: 'Berry (BRY)',\n  //   poolUnlimited: {\n  //     saleAmount: '2,000,000 BRY',\n  //     raiseAmount: '$1,000,000',\n  //     cakeToBurn: '$500,000',\n  //     distributionRatio: 1,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.bry,\n  //   releaseBlockNumber: 4750968,\n  //   campaignId: '511060000',\n  //   articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\n  //   tokenOfferingPrice: null,\n  //   version: 1,\n  // },\n  // {\n  //   id: 'soteria',\n  //   address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n  //   isActive: false,\n  //   name: 'Soteria (wSOTE)',\n  //   poolUnlimited: {\n  //     saleAmount: '1,500,000 wSOTE',\n  //     raiseAmount: '$525,000',\n  //     cakeToBurn: '$262,500',\n  //     distributionRatio: 1,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.wsote,\n  //   releaseBlockNumber: 4086064,\n  //   campaignId: '511050000',\n  //   articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\n  //   tokenOfferingPrice: null,\n  //   version: 1,\n  // },\n  // {\n  //   id: 'helmet',\n  //   address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n  //   isActive: false,\n  //   name: 'Helmet.insure (Helmet)',\n  //   poolUnlimited: {\n  //     saleAmount: '10,000,000 Helmet',\n  //     raiseAmount: '$1,000,000',\n  //     cakeToBurn: '$500,000',\n  //     distributionRatio: 1,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.helmet,\n  //   releaseBlockNumber: 3771926,\n  //   campaignId: '511040000',\n  //   articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\n  //   tokenOfferingPrice: null,\n  //   version: 1,\n  // },\n  // {\n  //   id: 'tenet',\n  //   address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n  //   isActive: false,\n  //   name: 'Tenet (TEN)',\n  //   poolUnlimited: {\n  //     saleAmount: '1,000,000 TEN',\n  //     raiseAmount: '$1,000,000',\n  //     cakeToBurn: '$500,000',\n  //     distributionRatio: 1,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.ten,\n  //   releaseBlockNumber: 3483883,\n  //   campaignId: '511030000',\n  //   articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\n  //   tokenOfferingPrice: null,\n  //   version: 1,\n  // },\n  // {\n  //   id: 'ditto',\n  //   address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n  //   isActive: false,\n  //   name: 'Ditto (DITTO)',\n  //   poolUnlimited: {\n  //     saleAmount: '700,000 DITTO',\n  //     raiseAmount: '$630,000',\n  //     cakeToBurn: '$315,000',\n  //     distributionRatio: 1,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.ditto,\n  //   releaseBlockNumber: 3279767,\n  //   campaignId: '511020000',\n  //   articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\n  //   tokenOfferingPrice: null,\n  //   version: 1,\n  // },\n  // {\n  //   id: 'blink',\n  //   address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n  //   isActive: false,\n  //   name: 'BLINk (BLK)',\n  //   poolUnlimited: {\n  //     saleAmount: '100,000,000 BLINK',\n  //     raiseAmount: '$1,000,000',\n  //     cakeToBurn: '$500,000',\n  //     distributionRatio: 1,\n  //   },\n  //   currency: cakeBnbLpToken,\n  //   token: tokens.blink,\n  //   releaseBlockNumber: 3279767,\n  //   campaignId: '511010000',\n  //   articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\n  //   tokenOfferingPrice: null,\n  //   version: 1,\n  // },\n]\n\nexport default ifos\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  }, [value])\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","import React from 'react'\nimport { Box, BoxProps } from 'packages/uikit'\n\nconst Container: React.FC<BoxProps> = ({ children, ...props }) => (\n  <Box px={['16px', '24px']} mx=\"auto\" maxWidth=\"1200px\" {...props}>\n    {children}\n  </Box>\n)\n\nexport default Container\n","import { BigNumber } from 'ethers'\nimport { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { AppState } from '../state'\nimport useCurrentBlockTimestamp from './useCurrentBlockTimestamp'\n\n// combines the block timestamp with the user setting to give the deadline that should be used for any submitted transaction\nexport default function useTransactionDeadline(): BigNumber | undefined {\n  const ttl = useSelector<AppState, number>((state) => state.user.userDeadline)\n  const blockTimestamp = useCurrentBlockTimestamp()\n  return useMemo(() => {\n    if (blockTimestamp && ttl) return blockTimestamp.add(ttl)\n    return undefined\n  }, [blockTimestamp, ttl])\n}\n","import { BigNumber } from 'ethers'\nimport { useSingleCallResult } from '../state/multicall/hooks'\nimport { useMulticallContract } from './useContract'\n\n// gets the current timestamp from the blockchain\nexport default function useCurrentBlockTimestamp(): BigNumber | undefined {\n  const multicall = useMulticallContract()\n  return useSingleCallResult(multicall, 'getCurrentBlockTimestamp')?.result?.[0]\n}\n","import tokens from './tokens'\nimport { SerializedFarmConfig } from './types'\n\nconst priceHelperLps: SerializedFarmConfig[] = [\n  /**\n   * These LPs are just used to help with price calculation for MasterChef LPs (farms.ts).\n   * This list is added to the MasterChefLps and passed to fetchFarm. The calls to get contract information about the token/quoteToken in the LP are still made.\n   * The absense of a PID means the masterchef contract calls are skipped for this farm.\n   * Prices are then fetched for all farms (masterchef + priceHelperLps).\n   * Before storing to redux, farms without a PID are filtered out.\n   */\n  {\n    pid: null,\n    lpSymbol: 'MATIC-WMATIC LP',\n    lpAddresses: {\n      80001: '',\n      137: '0xE0fCB98a83D8eD0006f0b5CCD81Ed5bd15A0c08C',\n    },\n    token: tokens.matic,\n    quoteToken: tokens.wmatic,\n  },\n]\n\nexport default priceHelperLps\n","import BigNumber from 'bignumber.js'\nimport { SerializedFarm, DeserializedPool, SerializedPool } from 'state/types'\nimport { deserializeToken } from 'state/user/hooks/helpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | DeserializedPool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: SerializedPool): DeserializedPool => {\n  const { totalStaked, stakingLimit, userData, stakingToken, earningToken, ...rest } = pool\n\n  return {\n    ...rest,\n    stakingToken: deserializeToken(stakingToken),\n    earningToken: deserializeToken(earningToken),\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  }\n}\n\nexport const getTokenPricesFromFarm = (farms: SerializedFarm[]) => {\n  return farms.reduce((prices, farm) => {\n    const quoteTokenAddress = farm.quoteToken.address.toLocaleLowerCase()\n    const tokenAddress = farm.token.address.toLocaleLowerCase()\n    /* eslint-disable no-param-reassign */\n    if (!prices[quoteTokenAddress]) {\n      prices[quoteTokenAddress] = new BigNumber(farm.quoteTokenPriceUsdt).toNumber()\n    }\n    if (!prices[tokenAddress]) {\n      prices[tokenAddress] = new BigNumber(farm.tokenPriceUsdt).toNumber()\n    }\n    /* eslint-enable no-param-reassign */\n    return prices\n  }, {})\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryTicket } from 'config/constants/types'\nimport { LotteryUserGraphEntity, LotteryResponse, UserRound } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries, hasRoundBeenClaimed } from './helpers'\nimport { fetchUserTicketsForMultipleRounds } from './getUserTicketsData'\n\nexport const MAX_USER_LOTTERIES_REQUEST_SIZE = 100\n\n/* eslint-disable camelcase */\ntype UserLotteriesWhere = { lottery_in?: string[] }\n\nconst applyNodeDataToUserGraphResponse = (\n  userNodeData: { roundId: string; userTickets: LotteryTicket[] }[],\n  userGraphData: UserRound[],\n  lotteryNodeData: LotteryResponse[],\n): UserRound[] => {\n  //   If no graph rounds response - return node data\n  if (userGraphData.length === 0) {\n    return lotteryNodeData.map((nodeRound) => {\n      const ticketDataForRound = userNodeData.find((roundTickets) => roundTickets.roundId === nodeRound.lotteryId)\n      return {\n        endTime: nodeRound.endTime,\n        status: nodeRound.status,\n        lotteryId: nodeRound.lotteryId.toString(),\n        claimed: hasRoundBeenClaimed(ticketDataForRound.userTickets),\n        totalTickets: `${ticketDataForRound.userTickets.length.toString()}`,\n        tickets: ticketDataForRound.userTickets,\n      }\n    })\n  }\n\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\n  const nodeRoundsWithGraphData = userNodeData.map((userNodeRound) => {\n    const userGraphRound = userGraphData.find(\n      (graphResponseRound) => graphResponseRound.lotteryId === userNodeRound.roundId,\n    )\n    const nodeRoundData = lotteryNodeData.find((nodeRound) => nodeRound.lotteryId === userNodeRound.roundId)\n    return {\n      endTime: nodeRoundData.endTime,\n      status: nodeRoundData.status,\n      lotteryId: nodeRoundData.lotteryId.toString(),\n      claimed: hasRoundBeenClaimed(userNodeRound.userTickets),\n      totalTickets: userGraphRound?.totalTickets || userNodeRound.userTickets.length.toString(),\n      tickets: userNodeRound.userTickets,\n    }\n  })\n\n  // Return the rounds with combined data, plus all remaining subgraph rounds.\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\n  const lastCombinedDataRoundIndex = userGraphData\n    .map((graphRound) => graphRound?.lotteryId)\n    .indexOf(lastCombinedDataRound?.lotteryId)\n  const remainingSubgraphRounds = userGraphData ? userGraphData.splice(lastCombinedDataRoundIndex + 1) : []\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\n  return mergedResponse\n}\n\nexport const getGraphLotteryUser = async (\n  account: string,\n  first = MAX_USER_LOTTERIES_REQUEST_SIZE,\n  skip = 0,\n  where: UserLotteriesWhere = {},\n): Promise<LotteryUserGraphEntity> => {\n  let user\n  const blankUser = {\n    account,\n    totalCake: '',\n    totalTickets: '',\n    rounds: [],\n  }\n\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getUserLotteries($account: ID!, $first: Int!, $skip: Int!, $where: Round_filter) {\n          user(id: $account) {\n            id\n            totalTickets\n            totalCake\n            rounds(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\n              id\n              lottery {\n                id\n                endTime\n                status\n              }\n              claimed\n              totalTickets\n            }\n          }\n        }\n      `,\n      { account: account.toLowerCase(), first, skip, where },\n    )\n    const userRes = response.user\n\n    // If no user returned - return blank user\n    if (!userRes) {\n      user = blankUser\n    } else {\n      user = {\n        account: userRes.id,\n        totalCake: userRes.totalCake,\n        totalTickets: userRes.totalTickets,\n        rounds: userRes.rounds.map((round) => {\n          return {\n            lotteryId: round?.lottery?.id,\n            endTime: round?.lottery?.endTime,\n            claimed: round?.claimed,\n            totalTickets: round?.totalTickets,\n            status: round?.lottery?.status.toLowerCase(),\n          }\n        }),\n      }\n    }\n  } catch (error) {\n    console.error(error)\n    user = blankUser\n  }\n\n  return user\n}\n\nconst getUserLotteryData = async (account: string, currentLotteryId: string): Promise<LotteryUserGraphEntity> => {\n  const idsForTicketsNodeCall = getRoundIdsArray(currentLotteryId)\n  const roundDataAndUserTickets = await fetchUserTicketsForMultipleRounds(idsForTicketsNodeCall, account)\n  const userRoundsNodeData = roundDataAndUserTickets.filter((round) => round.userTickets.length > 0)\n  const idsForLotteriesNodeCall = userRoundsNodeData.map((round) => round.roundId)\n  const lotteriesNodeData = await fetchMultipleLotteries(idsForLotteriesNodeCall)\n  const graphResponse = await getGraphLotteryUser(account)\n  const mergedRoundData = applyNodeDataToUserGraphResponse(userRoundsNodeData, graphResponse.rounds, lotteriesNodeData)\n  const graphResponseWithNodeRounds = { ...graphResponse, rounds: mergedRoundData }\n  return graphResponseWithNodeRounds\n}\n\nexport default getUserLotteryData\n","import { useEffect, useState } from 'react'\n\nconst VISIBILITY_STATE_SUPPORTED = 'visibilityState' in document\n\nfunction isWindowVisible() {\n  if (!VISIBILITY_STATE_SUPPORTED) {\n    return true\n  }\n\n  return document.visibilityState === 'visible'\n}\n\n/**\n * Returns whether the window is currently visible to the user.\n */\nexport default function useIsWindowVisible() {\n  const [isVisible, setIsVisible] = useState(isWindowVisible())\n\n  useEffect(() => {\n    if (!VISIBILITY_STATE_SUPPORTED) return undefined\n\n    const handleVisibilityChange = () => {\n      setIsVisible(isWindowVisible())\n    }\n\n    document.addEventListener('visibilitychange', handleVisibilityChange)\n    return () => {\n      document.removeEventListener('visibilitychange', handleVisibilityChange)\n    }\n  }, [setIsVisible])\n\n  return isVisible\n}\n","import { Interface } from '@ethersproject/abi'\nimport ERC20_ABI from './erc20.json'\nimport ERC20_BYTES32_ABI from './erc20_bytes32.json'\n\nconst ERC20_INTERFACE = new Interface(ERC20_ABI)\n\nconst ERC20_BYTES32_INTERFACE = new Interface(ERC20_BYTES32_ABI)\n\nexport default ERC20_INTERFACE\nexport { ERC20_ABI, ERC20_BYTES32_INTERFACE, ERC20_BYTES32_ABI }\n","import CID from 'cids'\nimport { getCodec, rmPrefix } from 'multicodec'\nimport { decode, toB58String } from 'multihashes'\n\nfunction hexToUint8Array(hex: string): Uint8Array {\n  // eslint-disable-next-line no-param-reassign\n  hex = hex.startsWith('0x') ? hex.substr(2) : hex\n  if (hex.length % 2 !== 0) throw new Error('hex must have length that is multiple of 2')\n  const arr = new Uint8Array(hex.length / 2)\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = parseInt(hex.substr(i * 2, 2), 16)\n  }\n  return arr\n}\n\nconst UTF_8_DECODER = new TextDecoder()\n\n/**\n * Returns the URI representation of the content hash for supported codecs\n * @param contenthash to decode\n */\nexport default function contenthashToUri(contenthash: string): string {\n  const buff = hexToUint8Array(contenthash)\n  const codec = getCodec(buff as Buffer) // the typing is wrong for @types/multicodec\n  switch (codec) {\n    case 'ipfs-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      return `ipfs://${toB58String(cid.multihash)}`\n    }\n    case 'ipns-ns': {\n      const data = rmPrefix(buff as Buffer)\n      const cid = new CID(data)\n      const multihash = decode(cid.multihash)\n      if (multihash.name === 'identity') {\n        return `ipns://${UTF_8_DECODER.decode(multihash.digest).trim()}`\n      }\n      return `ipns://${toB58String(cid.multihash)}`\n    }\n    default:\n      throw new Error(`Unrecognized codec: ${codec}`)\n  }\n}\n","import React, { useState, useEffect, useRef } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// Check if the tab is active in the user browser\nconst useIsBrowserTabActive = () => {\n  const isBrowserTabActiveRef = useRef(true)\n\n  useEffect(() => {\n    const onVisibilityChange = () => {\n      isBrowserTabActiveRef.current = !document.hidden\n    }\n\n    window.addEventListener('visibilitychange', onVisibilityChange)\n\n    return () => {\n      window.removeEventListener('visibilitychange', onVisibilityChange)\n    }\n  }, [])\n\n  return isBrowserTabActiveRef\n}\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setFast((prev) => prev + 1)\n      }\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      if (isBrowserTabActiveRef.current) {\n        setSlow((prev) => prev + 1)\n      }\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [isBrowserTabActiveRef])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import React from 'react'\nimport { Currency, Token } from '@wagyu-swap/sdk'\nimport { Button, Text, Modal, useModal, InjectedModalProps, Link } from 'packages/uikit'\nimport styled from 'styled-components'\nimport { AutoRow } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getVelasScanLink } from 'utils'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { useUnsupportedTokens } from '../hooks/Tokens'\n\ninterface Props extends InjectedModalProps {\n  currencies: (Currency | undefined)[]\n}\n\nconst DetailsFooter = styled.div`\n  padding: 8px 0;\n  width: 100%;\n  max-width: 400px;\n  border-bottom-left-radius: 20px;\n  border-bottom-right-radius: 20px;\n  color: ${({ theme }) => theme.colors.text};\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n  text-align: center;\n`\n\nconst UnsupportedModal: React.FC<Props> = ({ currencies, onDismiss }) => {\n  const { chainId } = useActiveWeb3React()\n  const tokens =\n    chainId && currencies\n      ? currencies.map((currency) => {\n          return wrappedCurrency(currency, chainId)\n        })\n      : []\n\n  const unsupportedTokens: { [address: string]: Token } = useUnsupportedTokens()\n\n  return (\n    <Modal title=\"Unsupported Assets\" maxWidth=\"420px\" onDismiss={onDismiss}>\n      <AutoColumn gap=\"lg\">\n        {tokens.map((token) => {\n          return (\n            token &&\n            unsupportedTokens &&\n            Object.keys(unsupportedTokens).includes(token.address) && (\n              <AutoColumn key={token.address?.concat('not-supported')} gap=\"10px\">\n                <AutoRow gap=\"5px\" align=\"center\">\n                  <CurrencyLogo currency={token} size=\"24px\" />\n                  <Text>{token.symbol}</Text>\n                </AutoRow>\n                {chainId && (\n                  <Link external small color=\"primaryDark\" href={getVelasScanLink(token.address, 'address', chainId)}>\n                    {token.address}\n                  </Link>\n                )}\n              </AutoColumn>\n            )\n          )\n        })}\n        <AutoColumn gap=\"lg\">\n          <Text>\n            Some assets are not available through this interface because they may not work well with our smart contract\n            or we are unable to allow trading for legal reasons.\n          </Text>\n        </AutoColumn>\n      </AutoColumn>\n    </Modal>\n  )\n}\n\nexport default function UnsupportedCurrencyFooter({ currencies }: { currencies: (Currency | undefined)[] }) {\n  const [onPresentModal] = useModal(<UnsupportedModal currencies={currencies} />)\n\n  return (\n    <DetailsFooter>\n      <Button variant=\"text\" onClick={onPresentModal}>\n        Read more about unsupported assets\n      </Button>\n    </DetailsFooter>\n  )\n}\n","import React, { useState } from 'react'\nimport { HelpIcon } from 'packages/uikit'\n\nconst BAD_SRCS: { [tokenAddress: string]: true } = {}\n\nexport interface LogoProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  srcs: string[]\n}\n\n/**\n * Renders an image by sequentially trying a list of URIs, and then eventually a fallback triangle alert\n */\nconst Logo: React.FC<LogoProps> = ({ srcs, alt, ...rest }) => {\n  const [, refresh] = useState<number>(0)\n\n  const src: string | undefined = srcs.find((s) => !BAD_SRCS[s])\n\n  if (src) {\n    return (\n      <img\n        {...rest}\n        alt={alt}\n        src={src}\n        onError={() => {\n          if (src) BAD_SRCS[src] = true\n          refresh((i) => i + 1)\n        }}\n      />\n    )\n  }\n  return <img {...rest} alt={alt} src=\"/images/VRC20.png\" />\n  // return <HelpIcon {...rest} />\n}\n\nexport default Logo\n","import React, { useState } from 'react'\nimport { Token, Currency } from '@wagyu-swap/sdk'\nimport { Button, Text, ErrorIcon, Flex, Message, Checkbox, Link, Tag, Grid } from 'packages/uikit'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { useAddUserToken } from 'state/user/hooks'\nimport { getVelasScanLink } from 'utils'\nimport truncateHash from 'utils/truncateHash'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport { ListLogo } from 'components/Logo'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  tokens: Token[]\n  handleCurrencySelect?: (currency: Currency) => void\n}\n\nfunction ImportToken({ tokens, handleCurrencySelect }: ImportProps) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [confirmed, setConfirmed] = useState(false)\n\n  const addToken = useAddUserToken()\n\n  // use for showing import source on inactive tokens\n  const inactiveTokenList = useCombinedInactiveList()\n\n  return (\n    <AutoColumn gap=\"lg\">\n      <Message variant=\"warning\">\n        <Text>\n          {t(\n            'Anyone can create a VRC20 token on VELAS with any name, including creating fake versions of existing tokens and tokens that claim to represent projects that do not have a token.',\n          )}\n          <br />\n          <br />\n          {t('If you purchase an arbitrary token, you may be unable to sell it back.')}\n        </Text>\n      </Message>\n\n      {tokens.map((token) => {\n        const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n        const address = token.address ? `${truncateHash(token.address)}` : null\n        return (\n          <Grid key={token.address} gridTemplateRows=\"1fr 1fr 1fr\" gridGap=\"4px\">\n            {list !== undefined ? (\n              <Tag\n                variant=\"success\"\n                outline\n                scale=\"sm\"\n                startIcon={list.logoURI && <ListLogo logoURI={list.logoURI} size=\"12px\" />}\n              >\n                {t('via')} {list.name}\n              </Tag>\n            ) : (\n              <Tag variant=\"failure\" outline scale=\"sm\" startIcon={<ErrorIcon color=\"failure\" />}>\n                {t('Unknown Source')}\n              </Tag>\n            )}\n            <Flex alignItems=\"center\">\n              <Text mr=\"8px\">{token.name}</Text>\n              <Text>({token.symbol})</Text>\n            </Flex>\n            {chainId && (\n              <Flex justifyContent=\"space-between\" width=\"100%\">\n                <Text mr=\"4px\">{address}</Text>\n                <Link href={getVelasScanLink(token.address, 'address', chainId)} external>\n                  ({t('View on Velas Explorer')})\n                </Link>\n              </Flex>\n            )}\n          </Grid>\n        )\n      })}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex alignItems=\"center\" onClick={() => setConfirmed(!confirmed)}>\n          <Checkbox\n            scale=\"sm\"\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={confirmed}\n            onChange={() => setConfirmed(!confirmed)}\n          />\n          <Text ml=\"8px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n        <Button\n          variant=\"danger\"\n          disabled={!confirmed}\n          onClick={() => {\n            tokens.map((token) => addToken(token))\n            if (handleCurrencySelect) {\n              handleCurrencySelect(tokens[0])\n            }\n          }}\n          className=\".token-dismiss-button\"\n        >\n          {t('Import')}\n        </Button>\n      </Flex>\n    </AutoColumn>\n  )\n}\n\nexport default ImportToken\n","import { CurrencyAmount, ETHER, JSBI } from '@wagyu-swap/sdk'\nimport { MIN_BNB } from '../config/constants'\n\n/**\n * Given some token amount, return the max that can be spent of it\n * @param currencyAmount to return max of\n */\nexport function maxAmountSpend(currencyAmount?: CurrencyAmount): CurrencyAmount | undefined {\n  if (!currencyAmount) return undefined\n  if (currencyAmount.currency === ETHER) {\n    if (JSBI.greaterThan(currencyAmount.raw, MIN_BNB)) {\n      return CurrencyAmount.ether(JSBI.subtract(currencyAmount.raw, MIN_BNB))\n    }\n    return CurrencyAmount.ether(JSBI.BigInt(0))\n  }\n  return currencyAmount\n}\n\nexport default maxAmountSpend\n","import React, { useState } from 'react'\nimport { Text, Button, Input, Flex, Box } from 'packages/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useUserSlippageTolerance, useUserTransactionTTL } from 'state/user/hooks'\nimport QuestionHelper from '../../QuestionHelper'\n\nenum SlippageError {\n  InvalidInput = 'InvalidInput',\n  RiskyLow = 'RiskyLow',\n  RiskyHigh = 'RiskyHigh',\n}\n\nenum DeadlineError {\n  InvalidInput = 'InvalidInput',\n}\n\nconst SlippageTabs = () => {\n  const [userSlippageTolerance, setUserSlippageTolerance] = useUserSlippageTolerance()\n  const [ttl, setTtl] = useUserTransactionTTL()\n  const [slippageInput, setSlippageInput] = useState('')\n  const [deadlineInput, setDeadlineInput] = useState('')\n\n  const { t } = useTranslation()\n\n  const slippageInputIsValid =\n    slippageInput === '' || (userSlippageTolerance / 100).toFixed(2) === Number.parseFloat(slippageInput).toFixed(2)\n  const deadlineInputIsValid = deadlineInput === '' || (ttl / 60).toString() === deadlineInput\n\n  let slippageError: SlippageError | undefined\n  if (slippageInput !== '' && !slippageInputIsValid) {\n    slippageError = SlippageError.InvalidInput\n  } else if (slippageInputIsValid && userSlippageTolerance < 50) {\n    slippageError = SlippageError.RiskyLow\n  } else if (slippageInputIsValid && userSlippageTolerance > 500) {\n    slippageError = SlippageError.RiskyHigh\n  } else {\n    slippageError = undefined\n  }\n\n  let deadlineError: DeadlineError | undefined\n  if (deadlineInput !== '' && !deadlineInputIsValid) {\n    deadlineError = DeadlineError.InvalidInput\n  } else {\n    deadlineError = undefined\n  }\n\n  const parseCustomSlippage = (value: string) => {\n    setSlippageInput(value)\n\n    try {\n      const valueAsIntFromRoundedFloat = Number.parseInt((Number.parseFloat(value) * 100).toString())\n      if (!Number.isNaN(valueAsIntFromRoundedFloat) && valueAsIntFromRoundedFloat < 5000) {\n        setUserSlippageTolerance(valueAsIntFromRoundedFloat)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  const parseCustomDeadline = (value: string) => {\n    setDeadlineInput(value)\n\n    try {\n      const valueAsInt: number = Number.parseInt(value) * 60\n      if (!Number.isNaN(valueAsInt) && valueAsInt > 0) {\n        setTtl(valueAsInt)\n      }\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\" mb=\"24px\">\n        <Flex mb=\"12px\">\n          <Text>{t('Slippage Tolerance')}</Text>\n          <QuestionHelper\n            text={t(\n              'Setting a high slippage tolerance can help transactions succeed, but you may not get such a good price. Use with caution.',\n            )}\n            placement=\"top-start\"\n            ml=\"4px\"\n          />\n        </Flex>\n        <Flex flexWrap=\"wrap\">\n          <Button\n            mt=\"4px\"\n            mr=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(10)\n            }}\n            variant={userSlippageTolerance === 10 ? 'primary' : 'tertiary'}\n          >\n            0.1%\n          </Button>\n          <Button\n            mt=\"4px\"\n            mr=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(50)\n            }}\n            variant={userSlippageTolerance === 50 ? 'primary' : 'tertiary'}\n          >\n            0.5%\n          </Button>\n          <Button\n            mr=\"4px\"\n            mt=\"4px\"\n            scale=\"sm\"\n            onClick={() => {\n              setSlippageInput('')\n              setUserSlippageTolerance(100)\n            }}\n            variant={userSlippageTolerance === 100 ? 'primary' : 'tertiary'}\n          >\n            1.0%\n          </Button>\n          <Flex alignItems=\"center\">\n            <Box width=\"76px\" mt=\"4px\">\n              <Input\n                scale=\"sm\"\n                placeholder={(userSlippageTolerance / 100).toFixed(2)}\n                value={slippageInput}\n                onBlur={() => {\n                  parseCustomSlippage((userSlippageTolerance / 100).toFixed(2))\n                }}\n                onChange={(e) => parseCustomSlippage(e.target.value)}\n                isWarning={!slippageInputIsValid}\n                isSuccess={![10, 50, 100].includes(userSlippageTolerance)}\n              />\n            </Box>\n            <Text color=\"primary\" bold ml=\"2px\">\n              %\n            </Text>\n          </Flex>\n        </Flex>\n        {!!slippageError && (\n          <Text fontSize=\"14px\" color={slippageError === SlippageError.InvalidInput ? 'red' : '#F3841E'} mt=\"8px\">\n            {slippageError === SlippageError.InvalidInput\n              ? t('Enter a valid slippage percentage')\n              : slippageError === SlippageError.RiskyLow\n              ? t('Your transaction may fail')\n              : t('Your transaction may be frontrun')}\n          </Text>\n        )}\n      </Flex>\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Flex alignItems=\"center\">\n          <Text>{t('Tx deadline (mins)')}</Text>\n          <QuestionHelper\n            text={t('Your transaction will revert if it is left confirming for longer than this time.')}\n            placement=\"top-start\"\n            ml=\"4px\"\n          />\n        </Flex>\n        <Flex>\n          <Box width=\"52px\" mt=\"4px\">\n            <Input\n              scale=\"sm\"\n              color={deadlineError ? 'red' : undefined}\n              onBlur={() => {\n                parseCustomDeadline((ttl / 60).toString())\n              }}\n              placeholder={(ttl / 60).toString()}\n              value={deadlineInput}\n              onChange={(e) => parseCustomDeadline(e.target.value)}\n            />\n          </Box>\n        </Flex>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default SlippageTabs\n","import React, { useState } from 'react'\nimport { Button, Text, Flex, Message, Modal, InjectedModalProps, Checkbox } from 'packages/uikit'\nimport { useExpertModeManager } from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ExpertModalProps extends InjectedModalProps {\n  setShowConfirmExpertModal: (boolean) => void\n  setShowExpertModeAcknowledgement: (boolean) => void\n}\n\nconst ExpertModal: React.FC<ExpertModalProps> = ({ setShowConfirmExpertModal, setShowExpertModeAcknowledgement }) => {\n  const [, toggleExpertMode] = useExpertModeManager()\n  const [isRememberChecked, setIsRememberChecked] = useState(false)\n\n  const { t } = useTranslation()\n\n  return (\n    <Modal\n      title={t('Expert Mode')}\n      onBack={() => setShowConfirmExpertModal(false)}\n      onDismiss={() => setShowConfirmExpertModal(false)}\n      headerBackground=\"gradients.cardHeader\"\n      style={{ maxWidth: '360px' }}\n    >\n      <Message variant=\"warning\" mb=\"24px\">\n        <Text>\n          {t(\n            \"Expert mode turns off the 'Confirm' transaction prompt, and allows high slippage trades that often result in bad rates and lost funds.\",\n          )}\n        </Text>\n      </Message>\n      <Text mb=\"24px\">{t('Only use this mode if you know what you’re doing.')}</Text>\n      <Flex alignItems=\"center\" mb=\"24px\">\n        <Checkbox\n          name=\"confirmed\"\n          type=\"checkbox\"\n          checked={isRememberChecked}\n          onChange={() => setIsRememberChecked(!isRememberChecked)}\n          scale=\"sm\"\n        />\n        <Text ml=\"10px\" color=\"textSubtle\" style={{ userSelect: 'none' }}>\n          {t('Don’t show this again')}\n        </Text>\n      </Flex>\n      <Button\n        mb=\"8px\"\n        id=\"confirm-expert-mode\"\n        onClick={() => {\n          // eslint-disable-next-line no-alert\n          if (window.prompt(`Please type the word \"confirm\" to enable expert mode.`) === 'confirm') {\n            toggleExpertMode()\n            setShowConfirmExpertModal(false)\n            if (isRememberChecked) {\n              setShowExpertModeAcknowledgement(false)\n            }\n          }\n        }}\n      >\n        {t('Turn On Expert Mode')}\n      </Button>\n      <Button\n        variant=\"secondary\"\n        onClick={() => {\n          setShowConfirmExpertModal(false)\n        }}\n      >\n        {t('Cancel')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default ExpertModal\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, PancakeToggle, Toggle, Flex, Modal, InjectedModalProps } from 'packages/uikit'\nimport {\n  useAudioModeManager,\n  useExpertModeManager,\n  useUserExpertModeAcknowledgementShow,\n  useUserSingleHopOnly,\n} from 'state/user/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { useSwapActionHandlers } from 'state/swap/hooks'\nimport useTheme from 'hooks/useTheme'\nimport QuestionHelper from '../../QuestionHelper'\nimport TransactionSettings from './TransactionSettings'\nimport ExpertModal from './ExpertModal'\n// import GasSettings from './GasSettings'\n\n// TODO: Temporary. Once uikit is merged with this style change, this can be removed.\nconst PancakeToggleWrapper = styled.div`\n  .pancakes {\n    position: absolute;\n  }\n`\n\nconst SettingsModal: React.FC<InjectedModalProps> = ({ onDismiss }) => {\n  const [showConfirmExpertModal, setShowConfirmExpertModal] = useState(false)\n  const [showExpertModeAcknowledgement, setShowExpertModeAcknowledgement] = useUserExpertModeAcknowledgementShow()\n  const [expertMode, toggleExpertMode] = useExpertModeManager()\n  const [singleHopOnly, setSingleHopOnly] = useUserSingleHopOnly()\n  const [audioPlay, toggleSetAudioMode] = useAudioModeManager()\n  const { onChangeRecipient } = useSwapActionHandlers()\n\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  if (showConfirmExpertModal) {\n    return (\n      <ExpertModal\n        setShowConfirmExpertModal={setShowConfirmExpertModal}\n        onDismiss={onDismiss}\n        setShowExpertModeAcknowledgement={setShowExpertModeAcknowledgement}\n      />\n    )\n  }\n\n  const handleExpertModeToggle = () => {\n    if (expertMode) {\n      onChangeRecipient(null)\n      toggleExpertMode()\n    } else if (!showExpertModeAcknowledgement) {\n      onChangeRecipient(null)\n      toggleExpertMode()\n    } else {\n      setShowConfirmExpertModal(true)\n    }\n  }\n\n  return (\n    <Modal\n      title={t('Settings')}\n      headerBackground=\"gradients.cardHeader\"\n      onDismiss={onDismiss}\n      style={{ maxWidth: '420px', overflowY: 'auto' }}\n    >\n      <Flex flexDirection=\"column\">\n        {/* <Flex pb=\"24px\" flexDirection=\"column\">\n          <Text bold textTransform=\"uppercase\" fontSize=\"12px\" color=\"secondary\" mb=\"24px\">\n            {t('Global')}\n          </Text>\n          <GasSettings />\n        </Flex> */}\n        {/* <Flex pt=\"24px\" flexDirection=\"column\" borderTop={`1px ${theme.colors.cardBorder} solid`}> */}\n        <Flex flexDirection=\"column\">\n          <Text bold textTransform=\"uppercase\" fontSize=\"12px\" color=\"secondary\" mb=\"24px\">\n            {t('Swaps & Liquidity')}\n          </Text>\n          <TransactionSettings />\n        </Flex>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n          <Flex alignItems=\"center\">\n            <Text>{t('Expert Mode')}</Text>\n            <QuestionHelper\n              text={t('Bypasses confirmation modals and allows high slippage trades. Use at your own risk.')}\n              placement=\"top-start\"\n              ml=\"4px\"\n            />\n          </Flex>\n          <Toggle id=\"toggle-expert-mode-button\" scale=\"md\" checked={expertMode} onChange={handleExpertModeToggle} />\n        </Flex>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n          <Flex alignItems=\"center\">\n            <Text>{t('Disable Multihops')}</Text>\n            <QuestionHelper text={t('Restricts swaps to direct pairs only.')} placement=\"top-start\" ml=\"4px\" />\n          </Flex>\n          <Toggle\n            id=\"toggle-disable-multihop-button\"\n            checked={singleHopOnly}\n            scale=\"md\"\n            onChange={() => {\n              setSingleHopOnly(!singleHopOnly)\n            }}\n          />\n        </Flex>\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\n          <Flex alignItems=\"center\">\n            <Text>{t('Sizzle sounds')}</Text>\n            <QuestionHelper text={t('Truly immersive and tasty trading experience')} placement=\"top-start\" ml=\"4px\" />\n          </Flex>\n          <PancakeToggleWrapper>\n            <PancakeToggle checked={audioPlay} onChange={toggleSetAudioMode} scale=\"md\" />\n          </PancakeToggleWrapper>\n        </Flex>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default SettingsModal\n","import React from 'react'\nimport { Flex, IconButton, CogIcon, useModal } from 'packages/uikit'\nimport SettingsModal from './SettingsModal'\n\nconst GlobalSettings = () => {\n  const [onPresentSettingsModal] = useModal(<SettingsModal />)\n\n  return (\n    <Flex>\n      <IconButton onClick={onPresentSettingsModal} variant=\"text\" scale=\"sm\" mr=\"8px\" id=\"open-settings-dialog-button\">\n        <CogIcon height={22} width={22} color=\"textSubtle\" />\n      </IconButton>\n    </Flex>\n  )\n}\n\nexport default GlobalSettings\n","import BigNumber from 'bignumber.js'\nimport masterchefABI from 'config/abi/ZOLAFarm.json'\nimport erc20 from 'config/abi/erc20.json'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { BIG_TEN, BIG_ZERO } from 'utils/bigNumber'\nimport multicall from 'utils/multicall'\nimport { SerializedFarm, SerializedBigNumber } from '../types'\n\ntype PublicFarmData = {\n  tokenAmountTotal: SerializedBigNumber\n  lpTotalInQuoteToken: SerializedBigNumber\n  lpTotalSupply: SerializedBigNumber\n  tokenPriceVsQuote: SerializedBigNumber\n  poolWeight: SerializedBigNumber\n  multiplier: string\n}\n\nconst fetchFarm = async (farm: SerializedFarm): Promise<PublicFarmData> => {\n  const { pid, lpAddresses, token, quoteToken } = farm\n  const lpAddress = getAddress(lpAddresses)\n  const calls = [\n    // Balance of token in the LP contract\n    {\n      address: token.address,\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of quote token on LP contract\n    {\n      address: quoteToken.address,\n      name: 'balanceOf',\n      params: [lpAddress],\n    },\n    // Balance of LP tokens in the master chef contract\n    {\n      address: lpAddress,\n      name: 'balanceOf',\n      params: [getMasterChefAddress()],\n    },\n    // Total supply of LP tokens\n    {\n      address: lpAddress,\n      name: 'totalSupply',\n    },\n    // Token decimals\n    {\n      address: token.address,\n      name: 'decimals',\n    },\n    // Quote token decimals\n    {\n      address: quoteToken.address,\n      name: 'decimals',\n    },\n  ]\n\n  const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n    await multicall(erc20, calls)\n\n  // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n  const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n\n  // Raw amount of token in the LP, including those not staked\n  const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n  const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n  // Amount of quoteToken in the LP that are staked in the MC\n  const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n\n  // Total staked in LP, in quote token value\n  const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n  // Only make masterchef calls if farm has pid\n  const [info, totalAllocPoint] =\n    pid || pid === 0\n      ? await multicall(masterchefABI, [\n          {\n            address: getMasterChefAddress(),\n            name: 'poolInfo',\n            params: [pid],\n          },\n          {\n            address: getMasterChefAddress(),\n            name: 'totalAllocPoint',\n          },\n        ])\n      : [null, null]\n\n  const allocPoint = info ? new BigNumber(info.allocPoint?._hex) : BIG_ZERO\n  const poolWeight = totalAllocPoint ? allocPoint.div(new BigNumber(totalAllocPoint)) : BIG_ZERO\n\n  return {\n    tokenAmountTotal: tokenAmountTotal.toJSON(),\n    lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n    lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n    tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n    poolWeight: poolWeight.toJSON(),\n    multiplier: `${allocPoint.div(100).toString()}X`,\n  }\n}\n\nexport default fetchFarm\n","import { SerializedFarm } from 'state/types'\nimport fetchPublicFarmData from './fetchPublicFarmData'\n\nconst fetchFarm = async (farm: SerializedFarm): Promise<SerializedFarm> => {\n  const farmPublicData = await fetchPublicFarmData(farm)\n  return { ...farm, ...farmPublicData }\n}\n\nexport default fetchFarm\n","import { SerializedFarmConfig } from 'config/constants/types'\nimport fetchFarm from './fetchFarm'\n\nconst fetchFarms = async (farmsToFetch: SerializedFarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const farm = await fetchFarm(farmConfig)\n      const serializedFarm = { ...farm, token: farm.token, quoteToken: farm.quoteToken }\n      return serializedFarm\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import { SerializedFarm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (\n  farms: SerializedFarm[],\n  preferredQuoteTokens: string[] = ['USDT', 'WMATIC', 'USDC'],\n): SerializedFarm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import BigNumber from 'bignumber.js'\nimport { BIG_ONE, BIG_ZERO } from 'utils/bigNumber'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport { SerializedFarm } from 'state/types'\nimport tokens from 'config/constants/tokens'\nimport { MATIC_USDC_LP_PID } from 'config/constants/farms'\n\nconst getFarmFromTokenSymbol = (\n  farms: SerializedFarm[],\n  tokenSymbol: string,\n  preferredQuoteTokens?: string[],\n): SerializedFarm => {\n  const farmsWithTokenSymbol = farms.filter((farm) => farm.token.symbol === tokenSymbol)\n  const filteredFarm = filterFarmsByQuoteToken(farmsWithTokenSymbol, preferredQuoteTokens)\n  return filteredFarm\n}\n\nconst getFarmBaseTokenPrice = (\n  farm: SerializedFarm,\n  quoteTokenFarm: SerializedFarm,\n  bnbPriceBusd: BigNumber,\n): BigNumber => {\n  const hasTokenPriceVsQuote = Boolean(farm.tokenPriceVsQuote)\n\n  if (farm.quoteToken.symbol === tokens.usdt.symbol) {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === tokens.matic.symbol) {\n    return hasTokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === tokens.usdc.symbol) {\n    return hasTokenPriceVsQuote ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // We can only calculate profits without a quoteTokenFarm for BUSD/BNB farms\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or WBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC we use the pBTC farm's quote token - BNB, (pBTC - BNB)\n  // from the BNB - pBTC price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === tokens.usdc.symbol) {\n    const quoteTokenInBusd = bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === tokens.usdt.symbol) {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === tokens.matic.symbol) {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return hasTokenPriceVsQuote && quoteTokenInBusd\n      ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd)\n      : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/WBNB quoteToken\n  return BIG_ZERO\n}\n\nconst getFarmQuoteTokenPrice = (\n  farm: SerializedFarm,\n  quoteTokenFarm: SerializedFarm,\n  bnbPriceBusd: BigNumber,\n): BigNumber => {\n  if (farm.quoteToken.symbol === 'USDT') {\n    return BIG_ONE\n  }\n  if (farm.quoteToken.symbol === 'USDC') {\n    return BIG_ONE\n  }\n\n  if (farm.quoteToken.symbol === 'WMATIC') {\n    return bnbPriceBusd\n  }\n\n  if (!quoteTokenFarm) {\n    return BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'USDT') {\n    return quoteTokenFarm.tokenPriceVsQuote ? bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'USDC') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'WMATIC') {\n    return quoteTokenFarm.tokenPriceVsQuote ? new BigNumber(quoteTokenFarm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  return BIG_ZERO\n}\n\nconst fetchFarmsPrices = async (farms: SerializedFarm[]) => {\n  const bnbBusdFarm = farms.find((farm) => farm.pid ===  MATIC_USDC_LP_PID)\n  const bnbPriceBusd = bnbBusdFarm.tokenPriceVsQuote ? BIG_ONE.div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n  const farmsWithPrices = farms.map((farm) => {\n    const quoteTokenFarm = getFarmFromTokenSymbol(farms, farm.quoteToken.symbol)\n    const tokenPriceUsdt = getFarmBaseTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n    const quoteTokenPriceUsdt = getFarmQuoteTokenPrice(farm, quoteTokenFarm, bnbPriceBusd)\n\n    return {\n      ...farm,\n      tokenPriceUsdt: tokenPriceUsdt.toJSON(),\n      quoteTokenPriceUsdt: quoteTokenPriceUsdt.toJSON(),\n    }\n  })\n\n  return farmsWithPrices\n}\n\nexport default fetchFarmsPrices\n","import { useMemo } from 'react'\nimport contenthashToUri from 'utils/contenthashToUri'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport uriToHttp from 'utils/uriToHttp'\nimport useENSContentHash from './ENS/useENSContentHash'\n\nexport default function useHttpLocations(uri: string | undefined): string[] {\n  const ens = useMemo(() => (uri ? parseENSAddress(uri) : undefined), [uri])\n  const resolvedContentHash = useENSContentHash(ens?.ensName)\n  return useMemo(() => {\n    if (ens) {\n      return resolvedContentHash.contenthash ? uriToHttp(contenthashToUri(resolvedContentHash.contenthash)) : []\n    }\n    return uri ? uriToHttp(uri) : []\n  }, [ens, resolvedContentHash.contenthash, uri])\n}\n","import { namehash } from 'ethers/lib/utils'\nimport { useMemo } from 'react'\nimport { useSingleCallResult } from '../../state/multicall/hooks'\nimport isZero from '../../utils/isZero'\nimport { useENSRegistrarContract, useENSResolverContract } from '../useContract'\n\n/**\n * Does a lookup for an ENS name to find its contenthash.\n */\nexport default function useENSContentHash(ensName?: string | null): { loading: boolean; contenthash: string | null } {\n  const ensNodeArgument = useMemo(() => {\n    if (!ensName) return [undefined]\n    try {\n      return ensName ? [namehash(ensName)] : [undefined]\n    } catch (error) {\n      return [undefined]\n    }\n  }, [ensName])\n  const registrarContract = useENSRegistrarContract(false)\n  const resolverAddressResult = useSingleCallResult(registrarContract, 'resolver', ensNodeArgument)\n  const resolverAddress = resolverAddressResult.result?.[0]\n  const resolverContract = useENSResolverContract(\n    resolverAddress && isZero(resolverAddress) ? undefined : resolverAddress,\n    false,\n  )\n  const contenthash = useSingleCallResult(resolverContract, 'contenthash', ensNodeArgument)\n\n  return {\n    contenthash: contenthash.result?.[0] ?? null,\n    loading: resolverAddressResult.loading || contenthash.loading,\n  }\n}\n","import { createAction } from '@reduxjs/toolkit'\n\nexport enum Field {\n  LIQUIDITY_PERCENT = 'LIQUIDITY_PERCENT',\n  LIQUIDITY = 'LIQUIDITY',\n  CURRENCY_A = 'CURRENCY_A',\n  CURRENCY_B = 'CURRENCY_B',\n}\n\nexport const typeInput = createAction<{ field: Field; typedValue: string }>('burn/typeInputBurn')\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import { Currency, CurrencyAmount, ETHER, JSBI, Pair, Percent, Price, TokenAmount } from '@wagyu-swap/sdk'\nimport { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { PairState, usePair } from 'hooks/usePairs'\nimport useTotalSupply from 'hooks/useTotalSupply'\n\nimport { wrappedCurrency, wrappedCurrencyAmount } from 'utils/wrappedCurrency'\nimport { AppDispatch, AppState } from '../index'\nimport { tryParseAmount } from '../swap/hooks'\nimport { useCurrencyBalances } from '../wallet/hooks'\nimport { Field, typeInput } from './actions'\n\nconst ZERO = JSBI.BigInt(0)\n\nexport function useMintState(): AppState['mint'] {\n  return useSelector<AppState, AppState['mint']>((state) => state.mint)\n}\n\nexport function useMintActionHandlers(noLiquidity: boolean | undefined): {\n  onFieldAInput: (typedValue: string) => void\n  onFieldBInput: (typedValue: string) => void\n} {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onFieldAInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_A, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n  const onFieldBInput = useCallback(\n    (typedValue: string) => {\n      dispatch(typeInput({ field: Field.CURRENCY_B, typedValue, noLiquidity: noLiquidity === true }))\n    },\n    [dispatch, noLiquidity],\n  )\n\n  return {\n    onFieldAInput,\n    onFieldBInput,\n  }\n}\n\nexport function useDerivedMintInfo(\n  currencyA: Currency | undefined,\n  currencyB: Currency | undefined,\n): {\n  dependentField: Field\n  currencies: { [field in Field]?: Currency }\n  pair?: Pair | null\n  pairState: PairState\n  currencyBalances: { [field in Field]?: CurrencyAmount }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  price?: Price\n  noLiquidity?: boolean\n  liquidityMinted?: TokenAmount\n  poolTokenPercentage?: Percent\n  error?: string\n} {\n  const { account, chainId } = useActiveWeb3React()\n\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n\n  const dependentField = independentField === Field.CURRENCY_A ? Field.CURRENCY_B : Field.CURRENCY_A\n\n  // tokens\n  const currencies: { [field in Field]?: Currency } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: currencyA ?? undefined,\n      [Field.CURRENCY_B]: currencyB ?? undefined,\n    }),\n    [currencyA, currencyB],\n  )\n\n  // pair\n  const [pairState, pair] = usePair(currencies[Field.CURRENCY_A], currencies[Field.CURRENCY_B])\n\n  const totalSupply = useTotalSupply(pair?.liquidityToken)\n\n  const noLiquidity: boolean =\n    pairState === PairState.NOT_EXISTS || Boolean(totalSupply && JSBI.equal(totalSupply.raw, ZERO))\n\n  // balances\n  const balances = useCurrencyBalances(account ?? undefined, [\n    currencies[Field.CURRENCY_A],\n    currencies[Field.CURRENCY_B],\n  ])\n  const currencyBalances: { [field in Field]?: CurrencyAmount } = {\n    [Field.CURRENCY_A]: balances[0],\n    [Field.CURRENCY_B]: balances[1],\n  }\n\n  // amounts\n  const independentAmount: CurrencyAmount | undefined = tryParseAmount(typedValue, currencies[independentField])\n  const dependentAmount: CurrencyAmount | undefined = useMemo(() => {\n    if (noLiquidity) {\n      if (otherTypedValue && currencies[dependentField]) {\n        return tryParseAmount(otherTypedValue, currencies[dependentField])\n      }\n      return undefined\n    }\n    if (independentAmount) {\n      // we wrap the currencies just to get the price in terms of the other token\n      const wrappedIndependentAmount = wrappedCurrencyAmount(independentAmount, chainId)\n\n      const [tokenA, tokenB] = [wrappedCurrency(currencyA, chainId), wrappedCurrency(currencyB, chainId)]\n      if (tokenA && tokenB && wrappedIndependentAmount && pair) {\n        const dependentCurrency = dependentField === Field.CURRENCY_B ? currencyB : currencyA\n\n        if (pair.priceOf(tokenA).denominator.toString() === '0' && dependentField !== Field.CURRENCY_B) {\n          return undefined\n        }\n        if (pair.priceOf(tokenB).denominator.toString() === '0' && dependentField === Field.CURRENCY_B) {\n          return undefined\n        }\n        const dependentTokenAmount =\n          dependentField === Field.CURRENCY_B\n            ? pair.priceOf(tokenA).quote(wrappedIndependentAmount)\n            : pair.priceOf(tokenB).quote(wrappedIndependentAmount)\n        return dependentCurrency === ETHER ? CurrencyAmount.ether(dependentTokenAmount.raw) : dependentTokenAmount\n      }\n      return undefined\n    }\n    return undefined\n  }, [noLiquidity, otherTypedValue, currencies, dependentField, independentAmount, currencyA, chainId, currencyB, pair])\n\n  const parsedAmounts: { [field in Field]: CurrencyAmount | undefined } = useMemo(\n    () => ({\n      [Field.CURRENCY_A]: independentField === Field.CURRENCY_A ? independentAmount : dependentAmount,\n      [Field.CURRENCY_B]: independentField === Field.CURRENCY_A ? dependentAmount : independentAmount,\n    }),\n    [dependentAmount, independentAmount, independentField],\n  )\n\n  const price = useMemo(() => {\n    if (noLiquidity) {\n      const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n      if (currencyAAmount && currencyBAmount) {\n        return new Price(currencyAAmount.currency, currencyBAmount.currency, currencyAAmount.raw, currencyBAmount.raw)\n      }\n      return undefined\n    }\n    const wrappedCurrencyA = wrappedCurrency(currencyA, chainId)\n    return pair && wrappedCurrencyA ? pair.priceOf(wrappedCurrencyA) : undefined\n  }, [chainId, currencyA, noLiquidity, pair, parsedAmounts])\n\n  // liquidity minted\n  const liquidityMinted = useMemo(() => {\n    const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n    const [tokenAmountA, tokenAmountB] = [\n      wrappedCurrencyAmount(currencyAAmount, chainId),\n      wrappedCurrencyAmount(currencyBAmount, chainId),\n    ]\n    if (pair && totalSupply && tokenAmountA && tokenAmountB) {\n      return pair.getLiquidityMinted(totalSupply, tokenAmountA, tokenAmountB)\n    }\n    return undefined\n  }, [parsedAmounts, chainId, pair, totalSupply])\n\n  const poolTokenPercentage = useMemo(() => {\n    if (liquidityMinted && totalSupply) {\n      return new Percent(liquidityMinted.raw, totalSupply.add(liquidityMinted).raw)\n    }\n    return undefined\n  }, [liquidityMinted, totalSupply])\n\n  let error: string | undefined\n  if (!account) {\n    error = 'Connect Wallet'\n  }\n\n  if (pairState === PairState.INVALID) {\n    error = error ?? 'Invalid pair'\n  }\n\n  if (!parsedAmounts[Field.CURRENCY_A] || !parsedAmounts[Field.CURRENCY_B]) {\n    error = error ?? 'Enter an amount'\n  }\n\n  const { [Field.CURRENCY_A]: currencyAAmount, [Field.CURRENCY_B]: currencyBAmount } = parsedAmounts\n\n  if (currencyAAmount && currencyBalances?.[Field.CURRENCY_A]?.lessThan(currencyAAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_A]?.symbol} balance`\n  }\n\n  if (currencyBAmount && currencyBalances?.[Field.CURRENCY_B]?.lessThan(currencyBAmount)) {\n    error = `Insufficient ${currencies[Field.CURRENCY_B]?.symbol} balance`\n  }\n\n  return {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  }\n}\n","import { Currency, CurrencyAmount, Fraction, Percent } from '@wagyu-swap/sdk'\nimport React from 'react'\nimport { Button, Text } from 'packages/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { RowBetween, RowFixed } from '../../components/Layout/Row'\nimport { CurrencyLogo } from '../../components/Logo'\nimport { Field } from '../../state/mint/actions'\n\nfunction ConfirmAddModalBottom({\n  noLiquidity,\n  price,\n  currencies,\n  parsedAmounts,\n  poolTokenPercentage,\n  onAdd,\n}: {\n  noLiquidity?: boolean\n  price?: Fraction\n  currencies: { [field in Field]?: Currency }\n  parsedAmounts: { [field in Field]?: CurrencyAmount }\n  poolTokenPercentage?: Percent\n  onAdd: () => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_A]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_A]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('%asset% Deposited', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Text>\n        <RowFixed>\n          <CurrencyLogo currency={currencies[Field.CURRENCY_B]} style={{ marginRight: '8px' }} />\n          <Text>{parsedAmounts[Field.CURRENCY_B]?.toSignificant(6)}</Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Rates')}</Text>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_A]?.symbol} = ${price?.toSignificant(4)} ${\n            currencies[Field.CURRENCY_B]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween style={{ justifyContent: 'flex-end' }}>\n        <Text>\n          {`1 ${currencies[Field.CURRENCY_B]?.symbol} = ${price?.invert().toSignificant(4)} ${\n            currencies[Field.CURRENCY_A]?.symbol\n          }`}\n        </Text>\n      </RowBetween>\n      <RowBetween>\n        <Text>{t('Share of Pool')}:</Text>\n        <Text>{noLiquidity ? '100' : poolTokenPercentage?.toSignificant(4)}%</Text>\n      </RowBetween>\n      <Button onClick={onAdd} mt=\"20px\">\n        {noLiquidity ? t('Create Pool & Supply') : t('Confirm Supply')}\n      </Button>\n    </>\n  )\n}\n\nexport default ConfirmAddModalBottom\n","import { Currency, Percent, Price } from '@wagyu-swap/sdk'\nimport React from 'react'\nimport { Text } from 'packages/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { AutoColumn } from '../../components/Layout/Column'\nimport { AutoRow } from '../../components/Layout/Row'\nimport { ONE_BIPS } from '../../config/constants'\nimport { Field } from '../../state/mint/actions'\n\nfunction PoolPriceBar({\n  currencies,\n  noLiquidity,\n  poolTokenPercentage,\n  price,\n}: {\n  currencies: { [field in Field]?: Currency }\n  noLiquidity?: boolean\n  poolTokenPercentage?: Percent\n  price?: Price\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow justify=\"space-around\" gap=\"4px\">\n        <AutoColumn justify=\"center\">\n          <Text>{price?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_B]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_A]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>{price?.invert()?.toSignificant(6) ?? '-'}</Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('%assetA% per %assetB%', {\n              assetA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n              assetB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n            })}\n          </Text>\n        </AutoColumn>\n        <AutoColumn justify=\"center\">\n          <Text>\n            {noLiquidity && price\n              ? '100'\n              : (poolTokenPercentage?.lessThan(ONE_BIPS) ? '<0.01' : poolTokenPercentage?.toFixed(2)) ?? '0'}\n            %\n          </Text>\n          <Text fontSize=\"14px\" pt={1}>\n            {t('Share of Pool')}\n          </Text>\n        </AutoColumn>\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n\nexport default PoolPriceBar\n","import React, { useCallback, useState } from 'react'\nimport { BigNumber } from '@ethersproject/bignumber'\nimport { TransactionResponse } from '@ethersproject/providers'\nimport { Currency, currencyEquals, ETHER, TokenAmount, WETH } from '@wagyu-swap/sdk'\nimport { Button, Text, Flex, AddIcon, CardBody, Message, useModal } from 'packages/uikit'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport { useTranslation } from 'contexts/Localization'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { LightCard } from '../../components/Card'\nimport { AutoColumn, ColumnCenter } from '../../components/Layout/Column'\nimport TransactionConfirmationModal, { ConfirmationModalContent } from '../../components/TransactionConfirmationModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { DoubleCurrencyLogo } from '../../components/Logo'\nimport { AppHeader, AppBody } from '../../components/App'\nimport { MinimalPositionCard } from '../../components/PositionCard'\nimport Row, { RowBetween } from '../../components/Layout/Row'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { ROUTER_ADDRESS } from '../../config/constants'\nimport { PairState } from '../../hooks/usePairs'\nimport { useCurrency } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallback } from '../../hooks/useApproveCallback'\nimport useTransactionDeadline from '../../hooks/useTransactionDeadline'\nimport { Field } from '../../state/mint/actions'\nimport { useDerivedMintInfo, useMintActionHandlers, useMintState } from '../../state/mint/hooks'\n\nimport { useTransactionAdder } from '../../state/transactions/hooks'\nimport { useGasPrice, useIsExpertMode, useUserSlippageTolerance } from '../../state/user/hooks'\nimport { calculateGasMargin, calculateSlippageAmount, getRouterContract } from '../../utils'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { wrappedCurrency } from '../../utils/wrappedCurrency'\nimport Dots from '../../components/Loader/Dots'\nimport ConfirmAddModalBottom from './ConfirmAddModalBottom'\nimport { currencyId } from '../../utils/currencyId'\nimport PoolPriceBar from './PoolPriceBar'\nimport Page from '../Page'\n\ninterface IState {\n  tokenAApprovalRequest: boolean\n  tokenBApprovalRequest: boolean\n}\n\nexport default function AddLiquidity({\n  match: {\n    params: { currencyIdA, currencyIdB },\n  },\n  history,\n}: RouteComponentProps<{ currencyIdA?: string; currencyIdB?: string }>) {\n  const { account, chainId, library } = useActiveWeb3React()\n  const { t } = useTranslation()\n  const gasPrice = useGasPrice()\n  const [state, setState] = useState<IState>({ tokenAApprovalRequest: false, tokenBApprovalRequest: false })\n\n  const currencyA = useCurrency(currencyIdA)\n  const currencyB = useCurrency(currencyIdB)\n\n  const oneCurrencyIsWETH = Boolean(\n    chainId &&\n      ((currencyA && currencyEquals(currencyA, WETH[chainId])) ||\n        (currencyB && currencyEquals(currencyB, WETH[chainId]))),\n  )\n\n  const expertMode = useIsExpertMode()\n\n  // mint state\n  const { independentField, typedValue, otherTypedValue } = useMintState()\n  const {\n    dependentField,\n    currencies,\n    pair,\n    pairState,\n    currencyBalances,\n    parsedAmounts,\n    price,\n    noLiquidity,\n    liquidityMinted,\n    poolTokenPercentage,\n    error,\n  } = useDerivedMintInfo(currencyA ?? undefined, currencyB ?? undefined)\n\n  const { onFieldAInput, onFieldBInput } = useMintActionHandlers(noLiquidity)\n\n  const isValid = !error\n\n  // modal and loading\n  const [attemptingTxn, setAttemptingTxn] = useState<boolean>(false) // clicked confirm\n\n  // txn values\n  const deadline = useTransactionDeadline() // custom from users settings\n  const [allowedSlippage] = useUserSlippageTolerance() // custom from users\n  const [txHash, setTxHash] = useState<string>('')\n\n  // get formatted amounts\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: noLiquidity ? otherTypedValue : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  // get the max amounts user can add\n  const maxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmountSpend(currencyBalances[field]),\n      }\n    },\n    {},\n  )\n\n  const atMaxAmounts: { [field in Field]?: TokenAmount } = [Field.CURRENCY_A, Field.CURRENCY_B].reduce(\n    (accumulator, field) => {\n      return {\n        ...accumulator,\n        [field]: maxAmounts[field]?.equalTo(parsedAmounts[field] ?? '0'),\n      }\n    },\n    {},\n  )\n\n  // check whether the user has approved the router on the tokens\n  const [approvalA, approveACallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_A], ROUTER_ADDRESS)\n  const [approvalB, approveBCallback] = useApproveCallback(parsedAmounts[Field.CURRENCY_B], ROUTER_ADDRESS)\n\n  const addTransaction = useTransactionAdder()\n\n  async function onAdd() {\n    if (!chainId || !library || !account) return\n    const router = getRouterContract(chainId, library, account)\n\n    const { [Field.CURRENCY_A]: parsedAmountA, [Field.CURRENCY_B]: parsedAmountB } = parsedAmounts\n    if (!parsedAmountA || !parsedAmountB || !currencyA || !currencyB || !deadline) {\n      return\n    }\n\n    const amountsMin = {\n      [Field.CURRENCY_A]: calculateSlippageAmount(parsedAmountA, noLiquidity ? 0 : allowedSlippage)[0],\n      [Field.CURRENCY_B]: calculateSlippageAmount(parsedAmountB, noLiquidity ? 0 : allowedSlippage)[0],\n    }\n\n    let estimate\n    let method: (...args: any) => Promise<TransactionResponse>\n    let args: Array<string | string[] | number>\n    let value: BigNumber | null\n    if (currencyA === ETHER || currencyB === ETHER) {\n      const tokenBIsETH = currencyB === ETHER\n      estimate = router.estimateGas.addLiquidityETH\n      method = router.addLiquidityETH\n      args = [\n        wrappedCurrency(tokenBIsETH ? currencyA : currencyB, chainId)?.address ?? '', // token\n        (tokenBIsETH ? parsedAmountA : parsedAmountB).raw.toString(), // token desired\n        amountsMin[tokenBIsETH ? Field.CURRENCY_A : Field.CURRENCY_B].toString(), // token min\n        amountsMin[tokenBIsETH ? Field.CURRENCY_B : Field.CURRENCY_A].toString(), // eth min\n        account,\n        deadline.toHexString(),\n      ]\n      value = BigNumber.from((tokenBIsETH ? parsedAmountB : parsedAmountA).raw.toString())\n    } else {\n      estimate = router.estimateGas.addLiquidity\n      method = router.addLiquidity\n      args = [\n        wrappedCurrency(currencyA, chainId)?.address ?? '',\n        wrappedCurrency(currencyB, chainId)?.address ?? '',\n        parsedAmountA.raw.toString(),\n        parsedAmountB.raw.toString(),\n        amountsMin[Field.CURRENCY_A].toString(),\n        amountsMin[Field.CURRENCY_B].toString(),\n        account,\n        deadline.toHexString(),\n      ]\n      value = null\n    }\n\n    setAttemptingTxn(true)\n\n    await estimate(...args, value ? { value } : {})\n      .then((estimatedGasLimit) =>\n        method(...args, {\n          ...(value ? { value } : {}),\n          gasLimit: calculateGasMargin(estimatedGasLimit),\n          gasPrice,\n        }).then((response) => {\n          setAttemptingTxn(false)\n\n          addTransaction(response, {\n            summary: `Add ${parsedAmounts[Field.CURRENCY_A]?.toSignificant(3)} ${\n              currencies[Field.CURRENCY_A]?.symbol\n            } and ${parsedAmounts[Field.CURRENCY_B]?.toSignificant(3)} ${currencies[Field.CURRENCY_B]?.symbol}`,\n          })\n\n          setTxHash(response.hash)\n        }),\n      )\n      .catch((err) => {\n        setAttemptingTxn(false)\n        // we only care if the error is something _other_ than the user rejected the tx\n        if (err?.code !== 4001) {\n          console.error(err)\n        }\n      })\n  }\n\n  const modalHeader = () => {\n    return noLiquidity ? (\n      <Flex alignItems=\"center\">\n        <Text fontSize=\"48px\" marginRight=\"10px\">\n          {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol}`}\n        </Text>\n        <DoubleCurrencyLogo\n          currency0={currencies[Field.CURRENCY_A]}\n          currency1={currencies[Field.CURRENCY_B]}\n          size={30}\n        />\n      </Flex>\n    ) : (\n      <AutoColumn>\n        <Flex alignItems=\"center\">\n          <Text fontSize=\"48px\" marginRight=\"10px\">\n            {liquidityMinted?.toSignificant(6)}\n          </Text>\n          <DoubleCurrencyLogo\n            currency0={currencies[Field.CURRENCY_A]}\n            currency1={currencies[Field.CURRENCY_B]}\n            size={30}\n          />\n        </Flex>\n        <Row>\n          <Text fontSize=\"24px\">\n            {`${currencies[Field.CURRENCY_A]?.symbol}/${currencies[Field.CURRENCY_B]?.symbol} Pool Tokens`}\n          </Text>\n        </Row>\n        <Text small textAlign=\"left\" my=\"24px\">\n          {t('Output is estimated. If the price changes by more than %slippage%% your transaction will revert.', {\n            slippage: allowedSlippage / 100,\n          })}\n        </Text>\n      </AutoColumn>\n    )\n  }\n\n  const modalBottom = () => {\n    return (\n      <ConfirmAddModalBottom\n        price={price}\n        currencies={currencies}\n        parsedAmounts={parsedAmounts}\n        noLiquidity={noLiquidity}\n        onAdd={onAdd}\n        poolTokenPercentage={poolTokenPercentage}\n      />\n    )\n  }\n\n  const pendingText = t('Supplying %amountA% %symbolA% and %amountB% %symbolB%', {\n    amountA: parsedAmounts[Field.CURRENCY_A]?.toSignificant(6) ?? '',\n    symbolA: currencies[Field.CURRENCY_A]?.symbol ?? '',\n    amountB: parsedAmounts[Field.CURRENCY_B]?.toSignificant(6) ?? '',\n    symbolB: currencies[Field.CURRENCY_B]?.symbol ?? '',\n  })\n\n  const handleCurrencyASelect = useCallback(\n    (currencyA_: Currency) => {\n      const newCurrencyIdA = currencyId(currencyA_)\n      if (newCurrencyIdA === currencyIdB) {\n        history.push(`/add/${currencyIdB}/${currencyIdA}`)\n      } else if (currencyIdB) {\n        history.push(`/add/${newCurrencyIdA}/${currencyIdB}`)\n      } else {\n        history.push(`/add/${newCurrencyIdA}`)\n      }\n    },\n    [currencyIdB, history, currencyIdA],\n  )\n  const handleCurrencyBSelect = useCallback(\n    (currencyB_: Currency) => {\n      const newCurrencyIdB = currencyId(currencyB_)\n      if (currencyIdA === newCurrencyIdB) {\n        if (currencyIdB) {\n          history.push(`/add/${currencyIdB}/${newCurrencyIdB}`)\n        } else {\n          history.push(`/add/${newCurrencyIdB}`)\n        }\n      } else {\n        history.push(`/add/${currencyIdA || 'MATIC'}/${newCurrencyIdB}`)\n      }\n    },\n    [currencyIdA, history, currencyIdB],\n  )\n\n  const handleDismissConfirmation = useCallback(() => {\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onFieldAInput('')\n    }\n    setTxHash('')\n  }, [onFieldAInput, txHash])\n\n  const addIsUnsupported = useIsTransactionUnsupported(currencies?.CURRENCY_A, currencies?.CURRENCY_B)\n\n  const onApproveA = async () => {\n    try {\n      setState((prev) => ({ ...prev, tokenAApprovalRequest: true }))\n      await approveACallback()\n      setState((prev) => ({ ...prev, tokenAApprovalRequest: false }))\n    } catch (e: any) {\n      setState((prev) => ({ ...prev, tokenAApprovalRequest: false }))\n    }\n  }\n\n  const onApproveB = async () => {\n    try {\n      setState((prev) => ({ ...prev, tokenBApprovalRequest: true }))\n      await approveBCallback()\n      setState((prev) => ({ ...prev, tokenBApprovalRequest: false }))\n    } catch (e: any) {\n      setState((prev) => ({ ...prev, tokenBApprovalRequest: false }))\n    }\n  }\n\n  const [onPresentAddLiquidityModal] = useModal(\n    <TransactionConfirmationModal\n      title={noLiquidity ? t('You are creating a pool') : t('You will receive')}\n      customOnDismiss={handleDismissConfirmation}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={() => <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />}\n      pendingText={pendingText}\n      currencyToAdd={pair?.liquidityToken}\n    />,\n    true,\n    true,\n    'addLiquidityModal',\n  )\n\n  return (\n    <Page>\n      <AppBody>\n        <AppHeader\n          title={t('Add Liquidity')}\n          subtitle={t('Add liquidity to receive LP tokens')}\n          helper={t(\n            'Liquidity providers earn a 0.17% trading fee on all trades made for that token pair, proportional to their share of the liquidity pool.',\n          )}\n          backTo=\"/pool\"\n        />\n        <CardBody>\n          <AutoColumn gap=\"20px\">\n            {noLiquidity && (\n              <ColumnCenter>\n                <Message variant=\"warning\">\n                  <div>\n                    <Text bold mb=\"8px\">\n                      {t('You are the first liquidity provider.')}\n                    </Text>\n                    <Text mb=\"8px\">{t('The ratio of tokens you add will set the price of this pool.')}</Text>\n                    <Text>{t('Once you are happy with the rate click supply to review.')}</Text>\n                  </div>\n                </Message>\n              </ColumnCenter>\n            )}\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_A]}\n              onUserInput={onFieldAInput}\n              onMax={() => {\n                onFieldAInput(maxAmounts[Field.CURRENCY_A]?.toExact() ?? '')\n              }}\n              onCurrencySelect={handleCurrencyASelect}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_A]}\n              currency={currencies[Field.CURRENCY_A]}\n              id=\"add-liquidity-input-tokena\"\n              showCommonBases\n            />\n            <ColumnCenter>\n              <AddIcon width=\"16px\" />\n            </ColumnCenter>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.CURRENCY_B]}\n              onUserInput={onFieldBInput}\n              onCurrencySelect={handleCurrencyBSelect}\n              onMax={() => {\n                onFieldBInput(maxAmounts[Field.CURRENCY_B]?.toExact() ?? '')\n              }}\n              showMaxButton={!atMaxAmounts[Field.CURRENCY_B]}\n              currency={currencies[Field.CURRENCY_B]}\n              id=\"add-liquidity-input-tokenb\"\n              showCommonBases\n            />\n            {currencies[Field.CURRENCY_A] && currencies[Field.CURRENCY_B] && pairState !== PairState.INVALID && (\n              <>\n                <LightCard padding=\"0px\" borderRadius=\"20px\">\n                  <RowBetween padding=\"1rem\">\n                    <Text fontSize=\"14px\">\n                      {noLiquidity ? t('Initial prices and pool share') : t('Prices and pool share')}\n                    </Text>\n                  </RowBetween>{' '}\n                  <LightCard padding=\"1rem\" borderRadius=\"20px\">\n                    <PoolPriceBar\n                      currencies={currencies}\n                      poolTokenPercentage={poolTokenPercentage}\n                      noLiquidity={noLiquidity}\n                      price={price}\n                    />\n                  </LightCard>\n                </LightCard>\n              </>\n            )}\n\n            {addIsUnsupported ? (\n              <Button disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton />\n            ) : (\n              <AutoColumn gap=\"md\">\n                {(approvalA === ApprovalState.NOT_APPROVED ||\n                  approvalA === ApprovalState.PENDING ||\n                  approvalB === ApprovalState.NOT_APPROVED ||\n                  approvalB === ApprovalState.PENDING) &&\n                  isValid && (\n                    <RowBetween>\n                      {approvalA !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={onApproveA}\n                          disabled={approvalA === ApprovalState.PENDING || state.tokenAApprovalRequest}\n                          width={approvalB !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalA === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_A]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                      {approvalB !== ApprovalState.APPROVED && (\n                        <Button\n                          onClick={onApproveB}\n                          disabled={approvalB === ApprovalState.PENDING || state.tokenBApprovalRequest}\n                          width={approvalA !== ApprovalState.APPROVED ? '48%' : '100%'}\n                        >\n                          {approvalB === ApprovalState.PENDING ? (\n                            <Dots>{t('Enabling %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })}</Dots>\n                          ) : (\n                            t('Enable %asset%', { asset: currencies[Field.CURRENCY_B]?.symbol })\n                          )}\n                        </Button>\n                      )}\n                    </RowBetween>\n                  )}\n                <Button\n                  variant={\n                    !isValid && !!parsedAmounts[Field.CURRENCY_A] && !!parsedAmounts[Field.CURRENCY_B]\n                      ? 'danger'\n                      : 'primary'\n                  }\n                  onClick={() => {\n                    if (expertMode) {\n                      onAdd()\n                    } else {\n                      onPresentAddLiquidityModal()\n                    }\n                  }}\n                  disabled={!isValid || approvalA !== ApprovalState.APPROVED || approvalB !== ApprovalState.APPROVED}\n                >\n                  {error ?? t('Supply')}\n                </Button>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n        </CardBody>\n      </AppBody>\n      {!addIsUnsupported ? (\n        pair && !noLiquidity && pairState !== PairState.INVALID ? (\n          <AutoColumn style={{ minWidth: '20rem', width: '100%', maxWidth: '400px', marginTop: '1rem' }}>\n            <MinimalPositionCard showUnwrapped={oneCurrencyIsWETH} pair={pair} />\n          </AutoColumn>\n        ) : null\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.CURRENCY_A, currencies.CURRENCY_B]} />\n      )}\n    </Page>\n  )\n}\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { LotteryTicket, LotteryStatus } from 'config/constants/types'\nimport { LotteryState, LotteryRoundGraphEntity, LotteryUserGraphEntity, LotteryResponse } from 'state/types'\nimport { fetchLottery, fetchCurrentLotteryIdAndMaxBuy } from './helpers'\nimport getLotteriesData from './getLotteriesData'\nimport getUserLotteryData, { getGraphLotteryUser } from './getUserLotteryData'\n\ninterface PublicLotteryData {\n  currentLotteryId: string\n  maxNumberTicketsPerBuyOrClaim: string\n}\n\nconst initialState: LotteryState = {\n  currentLotteryId: null,\n  isTransitioning: false,\n  maxNumberTicketsPerBuyOrClaim: null,\n  currentRound: {\n    isLoading: true,\n    lotteryId: null,\n    status: LotteryStatus.PENDING,\n    startTime: '',\n    endTime: '',\n    priceTicketInCake: '',\n    discountDivisor: '',\n    treasuryFee: '',\n    firstTicketId: '',\n    lastTicketId: '',\n    amountCollectedInCake: '',\n    finalNumber: null,\n    cakePerBracket: [],\n    countWinnersPerBracket: [],\n    rewardsBreakdown: [],\n    userTickets: {\n      isLoading: true,\n      tickets: [],\n    },\n  },\n  lotteriesData: null,\n  userLotteryData: { account: '', totalCake: '', totalTickets: '', rounds: [] },\n}\n\nexport const fetchCurrentLottery = createAsyncThunk<LotteryResponse, { currentLotteryId: string }>(\n  'lottery/fetchCurrentLottery',\n  async ({ currentLotteryId }) => {\n    const lotteryInfo = await fetchLottery(currentLotteryId)\n    return lotteryInfo\n  },\n)\n\nexport const fetchCurrentLotteryId = createAsyncThunk<PublicLotteryData>('lottery/fetchCurrentLotteryId', async () => {\n  const currentIdAndMaxBuy = await fetchCurrentLotteryIdAndMaxBuy()\n  return currentIdAndMaxBuy\n})\n\nexport const fetchUserTicketsAndLotteries = createAsyncThunk<\n  { userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity },\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserTicketsAndLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteriesRes = await getUserLotteryData(account, currentLotteryId)\n  const userParticipationInCurrentRound = userLotteriesRes.rounds?.find((round) => round.lotteryId === currentLotteryId)\n  const userTickets = userParticipationInCurrentRound?.tickets\n\n  // User has not bought tickets for the current lottery, or there has been an error\n  if (!userTickets || userTickets.length === 0) {\n    return { userTickets: null, userLotteries: userLotteriesRes }\n  }\n\n  return { userTickets, userLotteries: userLotteriesRes }\n})\n\nexport const fetchPublicLotteries = createAsyncThunk<LotteryRoundGraphEntity[], { currentLotteryId: string }>(\n  'lottery/fetchPublicLotteries',\n  async ({ currentLotteryId }) => {\n    const lotteries = await getLotteriesData(currentLotteryId)\n    return lotteries\n  },\n)\n\nexport const fetchUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; currentLotteryId: string }\n>('lottery/fetchUserLotteries', async ({ account, currentLotteryId }) => {\n  const userLotteries = await getUserLotteryData(account, currentLotteryId)\n  return userLotteries\n})\n\nexport const fetchAdditionalUserLotteries = createAsyncThunk<\n  LotteryUserGraphEntity,\n  { account: string; skip?: number }\n>('lottery/fetchAdditionalUserLotteries', async ({ account, skip }) => {\n  const additionalUserLotteries = await getGraphLotteryUser(account, undefined, skip)\n  return additionalUserLotteries\n})\n\nexport const setLotteryIsTransitioning = createAsyncThunk<{ isTransitioning: boolean }, { isTransitioning: boolean }>(\n  `lottery/setIsTransitioning`,\n  async ({ isTransitioning }) => {\n    return { isTransitioning }\n  },\n)\n\nexport const LotterySlice = createSlice({\n  name: 'Lottery',\n  initialState,\n  reducers: {\n    setLotteryPublicData: (state, action) => {\n      state = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(fetchCurrentLottery.fulfilled, (state, action: PayloadAction<LotteryResponse>) => {\n      state.currentRound = { ...state.currentRound, ...action.payload }\n    })\n    builder.addCase(fetchCurrentLotteryId.fulfilled, (state, action: PayloadAction<PublicLotteryData>) => {\n      state.currentLotteryId = action.payload.currentLotteryId\n      state.maxNumberTicketsPerBuyOrClaim = action.payload.maxNumberTicketsPerBuyOrClaim\n    })\n    builder.addCase(\n      fetchUserTicketsAndLotteries.fulfilled,\n      (state, action: PayloadAction<{ userTickets: LotteryTicket[]; userLotteries: LotteryUserGraphEntity }>) => {\n        state.currentRound.userTickets.isLoading = false\n        state.currentRound.userTickets.tickets = action.payload.userTickets\n        state.userLotteryData = action.payload.userLotteries\n      },\n    )\n    builder.addCase(fetchPublicLotteries.fulfilled, (state, action: PayloadAction<LotteryRoundGraphEntity[]>) => {\n      state.lotteriesData = action.payload\n    })\n    builder.addCase(fetchUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      state.userLotteryData = action.payload\n    })\n    builder.addCase(fetchAdditionalUserLotteries.fulfilled, (state, action: PayloadAction<LotteryUserGraphEntity>) => {\n      const mergedRounds = [...state.userLotteryData.rounds, ...action.payload.rounds]\n      state.userLotteryData.rounds = mergedRounds\n    })\n    builder.addCase(\n      setLotteryIsTransitioning.fulfilled,\n      (state, action: PayloadAction<{ isTransitioning: boolean }>) => {\n        state.isTransitioning = action.payload.isTransitioning\n      },\n    )\n  },\n})\n\n// Actions\nexport const { setLotteryPublicData } = LotterySlice.actions\n\nexport default LotterySlice.reducer\n","import React, { useState } from 'react'\nimport { JSBI, Pair, Percent } from '@wagyu-swap/sdk'\nimport { Button, Text, ChevronUpIcon, ChevronDownIcon, Card, CardBody, Flex, CardProps, AddIcon } from 'packages/uikit'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport useTotalSupply from '../../hooks/useTotalSupply'\n\nimport { useTokenBalance } from '../../state/wallet/hooks'\nimport { currencyId } from '../../utils/currencyId'\nimport { unwrappedToken } from '../../utils/wrappedCurrency'\n\nimport { LightCard } from '../Card'\nimport { AutoColumn } from '../Layout/Column'\nimport CurrencyLogo from '../Logo/CurrencyLogo'\nimport { DoubleCurrencyLogo } from '../Logo'\nimport { RowBetween, RowFixed } from '../Layout/Row'\nimport { BIG_INT_ZERO } from '../../config/constants'\nimport Dots from '../Loader/Dots'\n\nconst FixedHeightRow = styled(RowBetween)`\n  height: 24px;\n`\n\nconst LogoWrapper = styled.img`\n  width: 16px;\n  height: 16px;\n  margin-bottom: -1px;\n`\n\ninterface PositionCardProps extends CardProps {\n  pair: Pair\n  showUnwrapped?: boolean\n}\n\nexport function MinimalPositionCard({ pair, showUnwrapped = false }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const currency0 = showUnwrapped ? pair.token0 : unwrappedToken(pair.token0)\n  const currency1 = showUnwrapped ? pair.token1 : unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <>\n      {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, JSBI.BigInt(0)) ? (\n        <Card style={{ zIndex: 2 }}>\n          <CardBody>\n            <AutoColumn gap=\"16px\">\n              <FixedHeightRow>\n                <RowFixed>\n                  <Text color=\"secondary\" bold>\n                    {t('LP tokens in your wallet')}\n                  </Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <FixedHeightRow onClick={() => setShowMore(!showMore)}>\n                <RowFixed>\n                  <DoubleCurrencyLogo currency0={currency0} currency1={currency1} margin size={20} />\n                  <Text small color=\"textSubtle\">\n                    {currency0.symbol}-{currency1.symbol} LP\n                  </Text>\n                </RowFixed>\n                <RowFixed>\n                  <Text>{userPoolBalance ? userPoolBalance.toSignificant(4) : '-'}</Text>\n                </RowFixed>\n              </FixedHeightRow>\n              <AutoColumn gap=\"4px\">\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Share of Pool')}:\n                  </Text>\n                  <Text>{poolTokenPercentage ? `${poolTokenPercentage.toFixed(6)}%` : '-'}</Text>\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency0.symbol })}:\n                  </Text>\n                  {token0Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n                <FixedHeightRow>\n                  <Text color=\"textSubtle\" small>\n                    {t('Pooled %asset%', { asset: currency1.symbol })}:\n                  </Text>\n                  {token1Deposited ? (\n                    <RowFixed>\n                      <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n                    </RowFixed>\n                  ) : (\n                    '-'\n                  )}\n                </FixedHeightRow>\n              </AutoColumn>\n            </AutoColumn>\n          </CardBody>\n        </Card>\n      ) : (\n        <LightCard style={{ zIndex: 2 }}>\n          <Text fontSize=\"14px\" style={{ textAlign: 'center' }}>\n            <LogoWrapper alt=\"logo mobile\" src=\"/images/logo.png\" />\n            {t(\n              \"By adding liquidity you'll earn 0.17% of all trades on this pair proportional to your share of the pool. Fees are added to the pool, accrue in real time and can be claimed by withdrawing your liquidity.\",\n            )}\n          </Text>\n        </LightCard>\n      )}\n    </>\n  )\n}\n\nexport default function FullPositionCard({ pair, ...props }: PositionCardProps) {\n  const { account } = useActiveWeb3React()\n\n  const currency0 = unwrappedToken(pair.token0)\n  const currency1 = unwrappedToken(pair.token1)\n\n  const [showMore, setShowMore] = useState(false)\n\n  const userPoolBalance = useTokenBalance(account ?? undefined, pair.liquidityToken)\n  const totalPoolTokens = useTotalSupply(pair.liquidityToken)\n\n  const poolTokenPercentage =\n    !!userPoolBalance && !!totalPoolTokens && JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? new Percent(userPoolBalance.raw, totalPoolTokens.raw)\n      : undefined\n\n  const [token0Deposited, token1Deposited] =\n    !!pair &&\n    !!totalPoolTokens &&\n    !!userPoolBalance &&\n    // this condition is a short-circuit in the case where useTokenBalance updates sooner than useTotalSupply\n    JSBI.greaterThanOrEqual(totalPoolTokens.raw, userPoolBalance.raw)\n      ? [\n          pair.getLiquidityValue(pair.token0, totalPoolTokens, userPoolBalance, false),\n          pair.getLiquidityValue(pair.token1, totalPoolTokens, userPoolBalance, false),\n        ]\n      : [undefined, undefined]\n\n  return (\n    <Card style={{ borderRadius: '12px' }} {...props}>\n      <Flex justifyContent=\"space-between\" role=\"button\" onClick={() => setShowMore(!showMore)} p=\"16px\">\n        <Flex flexDirection=\"column\">\n          <Flex alignItems=\"center\" mb=\"4px\">\n            <DoubleCurrencyLogo currency0={currency0} currency1={currency1} size={20} />\n            <Text bold ml=\"8px\">\n              {!currency0 || !currency1 ? <Dots>Loading</Dots> : `${currency0.symbol}/${currency1.symbol}`}\n            </Text>\n          </Flex>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {userPoolBalance?.toSignificant(4)}\n          </Text>\n        </Flex>\n        {showMore ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </Flex>\n\n      {showMore && (\n        <AutoColumn gap=\"8px\" style={{ padding: '16px' }}>\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency0} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency0.symbol}\n              </Text>\n            </RowFixed>\n            {token0Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token0Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <RowFixed>\n              <CurrencyLogo size=\"20px\" currency={currency1} />\n              <Text color=\"textSubtle\" ml=\"4px\">\n                Pooled {currency1.symbol}\n              </Text>\n            </RowFixed>\n            {token1Deposited ? (\n              <RowFixed>\n                <Text ml=\"6px\">{token1Deposited?.toSignificant(6)}</Text>\n              </RowFixed>\n            ) : (\n              '-'\n            )}\n          </FixedHeightRow>\n\n          <FixedHeightRow>\n            <Text color=\"textSubtle\">Share of pool</Text>\n            <Text>\n              {poolTokenPercentage\n                ? `${poolTokenPercentage.toFixed(2) === '0.00' ? '<0.01' : poolTokenPercentage.toFixed(2)}%`\n                : '-'}\n            </Text>\n          </FixedHeightRow>\n\n          {userPoolBalance && JSBI.greaterThan(userPoolBalance.raw, BIG_INT_ZERO) && (\n            <Flex flexDirection=\"column\">\n              <Button\n                as={Link}\n                to={`/remove/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"primary\"\n                width=\"100%\"\n                mb=\"8px\"\n              >\n                Remove\n              </Button>\n              <Button\n                as={Link}\n                to={`/add/${currencyId(currency0)}/${currencyId(currency1)}`}\n                variant=\"text\"\n                startIcon={<AddIcon color=\"primary\" />}\n                width=\"100%\"\n              >\n                Add liquidity instead\n              </Button>\n            </Flex>\n          )}\n        </AutoColumn>\n      )}\n    </Card>\n  )\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_LOTTERY } from 'config/constants/endpoints'\nimport { LotteryRoundGraphEntity, LotteryResponse } from 'state/types'\nimport { getRoundIdsArray, fetchMultipleLotteries } from './helpers'\n\nexport const MAX_LOTTERIES_REQUEST_SIZE = 100\n\n/* eslint-disable camelcase */\ntype LotteriesWhere = { id_in?: string[] }\n\nconst applyNodeDataToLotteriesGraphResponse = (\n  nodeData: LotteryResponse[],\n  graphResponse: LotteryRoundGraphEntity[],\n): LotteryRoundGraphEntity[] => {\n  //   If no graph response - return node data\n  if (graphResponse.length === 0) {\n    return nodeData.map((nodeRound) => {\n      return {\n        endTime: nodeRound.endTime,\n        finalNumber: nodeRound.finalNumber.toString(),\n        startTime: nodeRound.startTime,\n        status: nodeRound.status,\n        id: nodeRound.lotteryId.toString(),\n        ticketPrice: nodeRound.priceTicketInCake,\n        totalTickets: '',\n        totalUsers: '',\n        winningTickets: '',\n      }\n    })\n  }\n\n  // Populate all nodeRound data with supplementary graphResponse round data when available\n  const nodeRoundsWithGraphData = nodeData.map((nodeRoundData) => {\n    const graphRoundData = graphResponse.find((graphResponseRound) => graphResponseRound.id === nodeRoundData.lotteryId)\n    return {\n      endTime: nodeRoundData.endTime,\n      finalNumber: nodeRoundData.finalNumber.toString(),\n      startTime: nodeRoundData.startTime,\n      status: nodeRoundData.status,\n      id: nodeRoundData.lotteryId,\n      ticketPrice: graphRoundData?.ticketPrice,\n      totalTickets: graphRoundData?.totalTickets,\n      totalUsers: graphRoundData?.totalUsers,\n      winningTickets: graphRoundData?.winningTickets,\n    }\n  })\n\n  // Return the rounds with combined node + subgraph data, plus all remaining subgraph rounds.\n  const [lastCombinedDataRound] = nodeRoundsWithGraphData.slice(-1)\n  const lastCombinedDataRoundIndex = graphResponse\n    .map((graphRound) => graphRound?.id)\n    .indexOf(lastCombinedDataRound?.id)\n\n  const remainingSubgraphRounds = graphResponse ? graphResponse.splice(lastCombinedDataRoundIndex + 1) : []\n  const mergedResponse = [...nodeRoundsWithGraphData, ...remainingSubgraphRounds]\n  return mergedResponse\n}\n\nexport const getGraphLotteries = async (\n  first = MAX_LOTTERIES_REQUEST_SIZE,\n  skip = 0,\n  where: LotteriesWhere = {},\n): Promise<LotteryRoundGraphEntity[]> => {\n  try {\n    const response = await request(\n      GRAPH_API_LOTTERY,\n      gql`\n        query getLotteries($first: Int!, $skip: Int!, $where: Lottery_filter) {\n          lotteries(first: $first, skip: $skip, where: $where, orderDirection: desc, orderBy: block) {\n            id\n            totalUsers\n            totalTickets\n            winningTickets\n            status\n            finalNumber\n            startTime\n            endTime\n            ticketPrice\n          }\n        }\n      `,\n      { skip, first, where },\n    )\n    return response.lotteries\n  } catch (error) {\n    console.error(error)\n    return []\n  }\n}\n\nconst getLotteriesData = async (currentLotteryId: string): Promise<LotteryRoundGraphEntity[]> => {\n  const idsForNodesCall = getRoundIdsArray(currentLotteryId)\n  const nodeData = await fetchMultipleLotteries(idsForNodesCall)\n  const graphResponse = await getGraphLotteries()\n  const mergedData = applyNodeDataToLotteriesGraphResponse(nodeData, graphResponse)\n  return mergedData\n}\n\nexport default getLotteriesData\n","import { TICKET_LIMIT_PER_REQUEST } from 'config/constants/lottery'\nimport { LotteryTicket } from 'config/constants/types'\nimport { UserTicketsResponse } from 'state/types'\nimport { getLotteryV2Contract } from 'utils/contractHelpers'\n\nconst lotteryContract = getLotteryV2Contract()\n\nexport const processRawTicketsResponse = (ticketsResponse: UserTicketsResponse): LotteryTicket[] => {\n  const [ticketIds, ticketNumbers, ticketStatuses] = ticketsResponse\n\n  if (ticketIds?.length > 0) {\n    return ticketIds.map((ticketId, index) => {\n      return {\n        id: ticketId.toString(),\n        number: ticketNumbers[index].toString(),\n        status: ticketStatuses[index],\n      }\n    })\n  }\n  return []\n}\n\nexport const viewUserInfoForLotteryId = async (\n  account: string,\n  lotteryId: string,\n  cursor: number,\n  perRequestLimit: number,\n): Promise<LotteryTicket[]> => {\n  try {\n    const data = await lotteryContract.viewUserInfoForLotteryId(account, lotteryId, cursor, perRequestLimit)\n    return processRawTicketsResponse(data)\n  } catch (error) {\n    console.error('viewUserInfoForLotteryId', error)\n    return null\n  }\n}\n\nexport const fetchUserTicketsForOneRound = async (account: string, lotteryId: string): Promise<LotteryTicket[]> => {\n  let cursor = 0\n  let numReturned = TICKET_LIMIT_PER_REQUEST\n  const ticketData = []\n\n  while (numReturned === TICKET_LIMIT_PER_REQUEST) {\n    // eslint-disable-next-line no-await-in-loop\n    const response = await viewUserInfoForLotteryId(account, lotteryId, cursor, TICKET_LIMIT_PER_REQUEST)\n    cursor += TICKET_LIMIT_PER_REQUEST\n    numReturned = response.length\n    ticketData.push(...response)\n  }\n\n  return ticketData\n}\n\nexport const fetchUserTicketsForMultipleRounds = async (\n  idsToCheck: string[],\n  account: string,\n): Promise<{ roundId: string; userTickets: LotteryTicket[] }[]> => {\n  const ticketsForMultipleRounds = []\n  for (let i = 0; i < idsToCheck.length; i += 1) {\n    const roundId = idsToCheck[i]\n    // eslint-disable-next-line no-await-in-loop\n    const ticketsForRound = await fetchUserTicketsForOneRound(account, roundId)\n    ticketsForMultipleRounds.push({\n      roundId,\n      userTickets: ticketsForRound,\n    })\n  }\n  return ticketsForMultipleRounds\n}\n","const ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","import BigNumber from 'bignumber.js'\nimport { SECONDS_PER_YEAR, ZOLA_PER_YEAR } from 'config'\nimport lpAprs from 'config/constants/lpAprs.json'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(SECONDS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (\n  poolWeight: BigNumber,\n  cakePriceUsd: BigNumber,\n  poolLiquidityUsd: BigNumber,\n  farmAddress: string,\n): { cakeRewardsApr: number; lpRewardsApr: number } => {\n  const yearlyCakeRewardAllocation = ZOLA_PER_YEAR.times(poolWeight)\n  const cakeRewardsApr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  let cakeRewardsAprAsNumber = null\n  if (!cakeRewardsApr.isNaN() && cakeRewardsApr.isFinite()) {\n    cakeRewardsAprAsNumber = cakeRewardsApr.toNumber()\n  }\n  const lpRewardsApr = lpAprs[farmAddress?.toLocaleLowerCase()] ?? 0\n  return { cakeRewardsApr: cakeRewardsAprAsNumber, lpRewardsApr }\n}\n\nexport default null\n","import { useEffect, useRef, useState } from 'react'\n\nconst useIntersectionObserver = () => {\n  const observerRef = useRef<HTMLDivElement>(null)\n  const intersectionObserverRef = useRef<IntersectionObserver>(null)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const [isIntersecting, setIsIntersecting] = useState(false)\n\n  useEffect(() => {\n    const checkObserverIsIntersecting = ([entry]: IntersectionObserverEntry[]) => {\n      setIsIntersecting(entry.isIntersecting)\n    }\n\n    if (!observerIsSet) {\n      intersectionObserverRef.current = new IntersectionObserver(checkObserverIsIntersecting, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      intersectionObserverRef.current.observe(observerRef.current)\n      setObserverIsSet(true)\n    }\n\n    return () => {\n      if (intersectionObserverRef.current && observerIsSet) {\n        intersectionObserverRef.current.disconnect()\n      }\n    }\n  }, [observerIsSet])\n\n  return { observerRef, isIntersecting }\n}\n\nexport default useIntersectionObserver\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Box, BoxProps, Text } from 'packages/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled(Box)<{ isOpen: boolean }>`\n  cursor: pointer;\n  width: 100%;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n  z-index: 20;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps extends BoxProps {\n  options: OptionProps[]\n  onOptionChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onOptionChange, ...props }) => {\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\n\n  const toggling = (event: React.MouseEvent<HTMLDivElement>) => {\n    setIsOpen(!isOpen)\n    event.stopPropagation()\n  }\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onOptionChange) {\n      onOptionChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    const handleClickOutside = () => {\n      setIsOpen(false)\n    }\n\n    document.addEventListener('click', handleClickOutside)\n    return () => {\n      document.removeEventListener('click', handleClickOutside)\n    }\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} {...props}>\n      <DropDownHeader onClick={toggling}>\n        <Text>{options[selectedOptionIndex].label}</Text>\n      </DropDownHeader>\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import styled from 'styled-components'\n\nconst Loading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","import React from 'react'\nimport { ChainId, Currency, currencyEquals, ETHER, Token } from '@wagyu-swap/sdk'\nimport { Text } from 'packages/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\nimport { SUGGESTED_BASES } from '../../config/constants'\nimport { AutoColumn } from '../Layout/Column'\nimport QuestionHelper from '../QuestionHelper'\nimport { AutoRow } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\n\nconst BaseWrapper = styled.div<{ disable?: boolean }>`\n  border: 1px solid ${({ theme, disable }) => (disable ? 'transparent' : theme.colors.dropdown)};\n  border-radius: 10px;\n  display: flex;\n  padding: 6px;\n\n  align-items: center;\n  :hover {\n    cursor: ${({ disable }) => !disable && 'pointer'};\n    background-color: ${({ theme, disable }) => !disable && theme.colors.background};\n  }\n\n  background-color: ${({ theme, disable }) => disable && theme.colors.dropdown};\n  opacity: ${({ disable }) => disable && '0.4'};\n`\n\nexport default function CommonBases({\n  chainId,\n  onSelect,\n  selectedCurrency,\n}: {\n  chainId?: ChainId\n  selectedCurrency?: Currency | null\n  onSelect: (currency: Currency) => void\n}) {\n  const { t } = useTranslation()\n  return (\n    <AutoColumn gap=\"md\">\n      <AutoRow>\n        <Text fontSize=\"14px\">{t('Common bases')}</Text>\n        <QuestionHelper text={t('These tokens are commonly paired with other tokens.')} ml=\"4px\" />\n      </AutoRow>\n      <AutoRow gap=\"auto\">\n        <BaseWrapper\n          onClick={() => {\n            if (!selectedCurrency || !currencyEquals(selectedCurrency, ETHER)) {\n              onSelect(ETHER)\n            }\n          }}\n          disable={selectedCurrency === ETHER}\n        >\n          <CurrencyLogo currency={ETHER} style={{ marginRight: 8 }} />\n          <Text>MATIC</Text>\n        </BaseWrapper>\n        {(chainId ? SUGGESTED_BASES[chainId] : []).map((token: Token) => {\n          const selected = selectedCurrency instanceof Token && selectedCurrency.address === token.address\n          return (\n            <BaseWrapper onClick={() => !selected && onSelect(token)} disable={selected} key={token.address}>\n              <CurrencyLogo currency={token} style={{ marginRight: 8 }} />\n              <Text>{token.symbol}</Text>\n            </BaseWrapper>\n          )\n        })}\n      </AutoRow>\n    </AutoColumn>\n  )\n}\n","import React, { CSSProperties } from 'react'\nimport { Token } from '@wagyu-swap/sdk'\nimport { Button, Text, CheckmarkCircleIcon } from 'packages/uikit'\nimport { AutoRow, RowFixed } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\nimport CurrencyLogo from 'components/Logo/CurrencyLogo'\nimport { ListLogo } from 'components/Logo'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedInactiveList } from 'state/lists/hooks'\nimport styled from 'styled-components'\nimport { useIsUserAddedToken, useIsTokenActive } from 'hooks/Tokens'\nimport { useTranslation } from 'contexts/Localization'\n\nconst TokenSection = styled.div<{ dim?: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) auto;\n  grid-gap: 16px;\n  align-items: center;\n\n  opacity: ${({ dim }) => (dim ? '0.4' : '1')};\n`\n\nconst CheckIcon = styled(CheckmarkCircleIcon)`\n  height: 16px;\n  width: 16px;\n  margin-right: 6px;\n  stroke: ${({ theme }) => theme.colors.success};\n`\n\nconst NameOverflow = styled.div`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  max-width: 140px;\n  font-size: 12px;\n`\n\nexport default function ImportRow({\n  token,\n  style,\n  dim,\n  showImportView,\n  setImportToken,\n}: {\n  token: Token\n  style?: CSSProperties\n  dim?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}) {\n  // globals\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // check if token comes from list\n  const inactiveTokenList = useCombinedInactiveList()\n  const list = chainId && inactiveTokenList?.[chainId]?.[token.address]?.list\n\n  // check if already active on list or local storage tokens\n  const isAdded = useIsUserAddedToken(token)\n  const isActive = useIsTokenActive(token)\n\n  return (\n    <TokenSection style={style}>\n      <CurrencyLogo currency={token} size=\"24px\" style={{ opacity: dim ? '0.6' : '1' }} />\n      <AutoColumn gap=\"4px\" style={{ opacity: dim ? '0.6' : '1' }}>\n        <AutoRow>\n          <Text>{token.symbol}</Text>\n          <Text color=\"textDisabled\" ml=\"8px\">\n            <NameOverflow title={token.name}>{token.name}</NameOverflow>\n          </Text>\n        </AutoRow>\n        {list && list.logoURI && (\n          <RowFixed>\n            <Text small mr=\"4px\" color=\"textSubtle\">\n              {t('via')} {list.name}\n            </Text>\n            <ListLogo logoURI={list.logoURI} size=\"12px\" />\n          </RowFixed>\n        )}\n      </AutoColumn>\n      {!isActive && !isAdded ? (\n        <Button\n          width=\"fit-content\"\n          onClick={() => {\n            if (setImportToken) {\n              setImportToken(token)\n            }\n            showImportView()\n          }}\n        >\n          {t('Import')}\n        </Button>\n      ) : (\n        <RowFixed style={{ minWidth: 'fit-content' }}>\n          <CheckIcon />\n          <Text color=\"success\">Active</Text>\n        </RowFixed>\n      )}\n    </TokenSection>\n  )\n}\n","import React, { CSSProperties, MutableRefObject, useCallback, useMemo } from 'react'\nimport { Currency, CurrencyAmount, currencyEquals, ETHER, Token } from '@wagyu-swap/sdk'\nimport { Text } from 'packages/uikit'\nimport styled from 'styled-components'\nimport { FixedSizeList } from 'react-window'\nimport { wrappedCurrency } from 'utils/wrappedCurrency'\nimport { LightGreyCard } from 'components/Card'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useCombinedActiveList } from '../../state/lists/hooks'\nimport { useCurrencyBalance } from '../../state/wallet/hooks'\nimport { useIsUserAddedToken, useAllInactiveTokens } from '../../hooks/Tokens'\nimport Column from '../Layout/Column'\nimport { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyLogo } from '../Logo'\nimport CircleLoader from '../Loader/CircleLoader'\nimport { isTokenOnList } from '../../utils'\nimport ImportRow from './ImportRow'\n\nfunction currencyKey(currency: Currency): string {\n  return currency instanceof Token ? currency.address : currency === ETHER ? 'ETHER' : ''\n}\n\nconst StyledBalanceText = styled(Text)`\n  white-space: nowrap;\n  overflow: hidden;\n  max-width: 5rem;\n  text-overflow: ellipsis;\n`\n\nconst FixedContentRow = styled.div`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-gap: 16px;\n  align-items: center;\n`\n\nfunction Balance({ balance }: { balance: CurrencyAmount }) {\n  return <StyledBalanceText title={balance.toExact()}>{balance.toSignificant(4)}</StyledBalanceText>\n}\n\nconst MenuItem = styled(RowBetween)<{ disabled: boolean; selected: boolean }>`\n  padding: 4px 20px;\n  height: 56px;\n  display: grid;\n  grid-template-columns: auto minmax(auto, 1fr) minmax(0, 72px);\n  grid-gap: 8px;\n  cursor: ${({ disabled }) => !disabled && 'pointer'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n  :hover {\n    background-color: ${({ theme, disabled }) => !disabled && theme.colors.background};\n  }\n  opacity: ${({ disabled, selected }) => (disabled || selected ? 0.5 : 1)};\n`\n\nfunction CurrencyRow({\n  currency,\n  onSelect,\n  isSelected,\n  otherSelected,\n  style,\n}: {\n  currency: Currency\n  onSelect: () => void\n  isSelected: boolean\n  otherSelected: boolean\n  style: CSSProperties\n}) {\n  const { account } = useActiveWeb3React()\n  const key = currencyKey(currency)\n  const selectedTokenList = useCombinedActiveList()\n  const isOnSelectedList = isTokenOnList(selectedTokenList, currency)\n  const customAdded = useIsUserAddedToken(currency)\n  const balance = useCurrencyBalance(account ?? undefined, currency)\n\n  // only show add or remove buttons if not on selected list\n  return (\n    <MenuItem\n      style={style}\n      className={`token-item-${key}`}\n      onClick={() => (isSelected ? null : onSelect())}\n      disabled={isSelected}\n      selected={otherSelected}\n    >\n      <CurrencyLogo currency={currency} size=\"24px\" />\n      <Column>\n        <Text bold>{currency.symbol}</Text>\n        <Text color=\"textSubtle\" small ellipsis maxWidth=\"200px\">\n          {!isOnSelectedList && customAdded && 'Added by user •'} {currency.name}\n        </Text>\n      </Column>\n      <RowFixed style={{ justifySelf: 'flex-end' }}>\n        {balance ? <Balance balance={balance} /> : account ? <CircleLoader /> : null}\n      </RowFixed>\n    </MenuItem>\n  )\n}\n\nexport default function CurrencyList({\n  height,\n  currencies,\n  selectedCurrency,\n  onCurrencySelect,\n  otherCurrency,\n  fixedListRef,\n  showETH,\n  showImportView,\n  setImportToken,\n  breakIndex,\n}: {\n  height: number\n  currencies: Currency[]\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherCurrency?: Currency | null\n  fixedListRef?: MutableRefObject<FixedSizeList | undefined>\n  showETH: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n  breakIndex: number | undefined\n}) {\n  const itemData: (Currency | undefined)[] = useMemo(() => {\n    let formatted: (Currency | undefined)[] = showETH ? [Currency.ETHER, ...currencies] : currencies\n    if (breakIndex !== undefined) {\n      formatted = [...formatted.slice(0, breakIndex), undefined, ...formatted.slice(breakIndex, formatted.length)]\n    }\n    return formatted\n  }, [breakIndex, currencies, showETH])\n\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const inactiveTokens: {\n    [address: string]: Token\n  } = useAllInactiveTokens()\n\n  const Row = useCallback(\n    ({ data, index, style }) => {\n      const currency: Currency = data[index]\n      const isSelected = Boolean(selectedCurrency && currencyEquals(selectedCurrency, currency))\n      const otherSelected = Boolean(otherCurrency && currencyEquals(otherCurrency, currency))\n      const handleSelect = () => onCurrencySelect(currency)\n\n      const token = wrappedCurrency(currency, chainId)\n\n      const showImport = inactiveTokens && token && Object.keys(inactiveTokens).includes(token.address)\n\n      if (index === breakIndex || !data) {\n        return (\n          <FixedContentRow style={style}>\n            <LightGreyCard padding=\"8px 12px\" borderRadius=\"8px\">\n              <RowBetween>\n                <Text small>{t('Expanded results from inactive Token Lists')}</Text>\n                <QuestionHelper\n                  text={t(\n                    \"Tokens from inactive lists. Import specific tokens below or click 'Manage' to activate more lists.\",\n                  )}\n                  ml=\"4px\"\n                />\n              </RowBetween>\n            </LightGreyCard>\n          </FixedContentRow>\n        )\n      }\n\n      if (showImport && token) {\n        return (\n          <ImportRow style={style} token={token} showImportView={showImportView} setImportToken={setImportToken} dim />\n        )\n      }\n      return (\n        <CurrencyRow\n          style={style}\n          currency={currency}\n          isSelected={isSelected}\n          onSelect={handleSelect}\n          otherSelected={otherSelected}\n        />\n      )\n    },\n    [\n      chainId,\n      inactiveTokens,\n      onCurrencySelect,\n      otherCurrency,\n      selectedCurrency,\n      setImportToken,\n      showImportView,\n      breakIndex,\n      t,\n    ],\n  )\n\n  const itemKey = useCallback((index: number, data: any) => currencyKey(data[index]), [])\n\n  return (\n    <FixedSizeList\n      height={height}\n      ref={fixedListRef as any}\n      width=\"100%\"\n      itemData={itemData}\n      itemCount={itemData.length}\n      itemSize={56}\n      itemKey={itemKey}\n    >\n      {Row}\n    </FixedSizeList>\n  )\n}\n","import { Token, TokenAmount } from '@wagyu-swap/sdk'\nimport { useMemo } from 'react'\nimport { useAllTokenBalances } from '../../state/wallet/hooks'\n\n// compare two token amounts with highest one coming first\nfunction balanceComparator(balanceA?: TokenAmount, balanceB?: TokenAmount) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  }\n  if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  }\n  if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(balances: {\n  [tokenAddress: string]: TokenAmount | undefined\n}): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[tokenA.address]\n    const balanceB = balances[tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    }\n    return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n  }\n}\n\nfunction useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    }\n    return comparator\n  }, [inverted, comparator])\n}\n\nexport default useTokenComparator\n","import React, { KeyboardEvent, RefObject, useCallback, useMemo, useRef, useState, useEffect } from 'react'\nimport { Currency, ETHER, Token } from '@wagyu-swap/sdk'\nimport { Text, Input, Box } from 'packages/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { FixedSizeList } from 'react-window'\nimport { useAudioModeManager } from 'state/user/hooks'\nimport useDebounce from 'hooks/useDebounce'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useAllTokens, useToken, useIsUserAddedToken, useFoundOnInactiveList } from '../../hooks/Tokens'\nimport { isAddress } from '../../utils'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport Row from '../Layout/Row'\nimport CommonBases from './CommonBases'\nimport CurrencyList from './CurrencyList'\nimport { filterTokens, useSortedTokensByQuery } from './filtering'\nimport useTokenComparator from './sorting'\n\nimport ImportRow from './ImportRow'\n\ninterface CurrencySearchProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n  showImportView: () => void\n  setImportToken: (token: Token) => void\n}\n\nconst swapSound = new Audio('swap.mp3')\n\nfunction CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showCommonBases,\n  showImportView,\n  setImportToken,\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n\n  // refs for fixed size lists\n  const fixedList = useRef<FixedSizeList>()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(searchQuery, 200)\n\n  const [invertSearchOrder] = useState<boolean>(false)\n\n  const allTokens = useAllTokens()\n\n  // if they input an address, use it\n  const searchToken = useToken(debouncedQuery)\n  const searchTokenIsAdded = useIsUserAddedToken(searchToken)\n\n  const [audioPlay] = useAudioModeManager()\n\n  const showETH: boolean = useMemo(() => {\n    const s = debouncedQuery.toLowerCase().trim()\n    return s === '' || s === 'b' || s === 'bn' || s === 'bnb'\n  }, [debouncedQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    return filterTokens(Object.values(allTokens), debouncedQuery)\n  }, [allTokens, debouncedQuery])\n\n  const sortedTokens: Token[] = useMemo(() => {\n    return filteredTokens.sort(tokenComparator)\n  }, [filteredTokens, tokenComparator])\n\n  const filteredSortedTokens = useSortedTokensByQuery(sortedTokens, debouncedQuery)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      if (audioPlay) {\n        swapSound.play()\n      }\n    },\n    [audioPlay, onCurrencySelect],\n  )\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n\n  useEffect(() => {\n    inputRef.current.focus()\n  }, [])\n\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = debouncedQuery.toLowerCase().trim()\n        if (s === 'bnb') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === debouncedQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, debouncedQuery],\n  )\n\n  // if no results on main list, show option to expand into inactive\n  const inactiveTokens = useFoundOnInactiveList(debouncedQuery)\n  const filteredInactiveTokens: Token[] = useSortedTokensByQuery(inactiveTokens, debouncedQuery)\n\n  return (\n    <>\n      <div>\n        <AutoColumn gap=\"16px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              placeholder={t('Search name or paste address')}\n              scale=\"lg\"\n              autoComplete=\"off\"\n              value={searchQuery}\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              onKeyDown={handleEnter}\n            />\n          </Row>\n          {showCommonBases && (\n            <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\n          )}\n        </AutoColumn>\n        {searchToken && !searchTokenIsAdded ? (\n          <Column style={{ padding: '20px 0', height: '100%' }}>\n            <ImportRow token={searchToken} showImportView={showImportView} setImportToken={setImportToken} />\n          </Column>\n        ) : filteredSortedTokens?.length > 0 || filteredInactiveTokens?.length > 0 ? (\n          <Box margin=\"24px -24px\">\n            <CurrencyList\n              height={390}\n              showETH={showETH}\n              currencies={\n                filteredInactiveTokens ? filteredSortedTokens.concat(filteredInactiveTokens) : filteredSortedTokens\n              }\n              breakIndex={inactiveTokens && filteredSortedTokens ? filteredSortedTokens.length : undefined}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n              showImportView={showImportView}\n              setImportToken={setImportToken}\n            />\n          </Box>\n        ) : (\n          <Column style={{ padding: '20px', height: '100%' }}>\n            <Text color=\"textSubtle\" textAlign=\"center\" mb=\"20px\">\n              {t('No results found.')}\n            </Text>\n          </Column>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default CurrencySearch\n","export enum CurrencyModalView {\n  search,\n  manage,\n  importToken,\n  importList,\n}\n\nexport default CurrencyModalView\n","import React, { memo, useCallback, useMemo, useState, useEffect } from 'react'\nimport { Button, Text, CheckmarkIcon, CogIcon, Input, Toggle, LinkExternal, useTooltip } from 'packages/uikit'\nimport { useDispatch, useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport { TokenList, Version } from '@uniswap/token-lists'\nimport Card from 'components/Card'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport { parseENSAddress } from 'utils/ENS/parseENSAddress'\nimport { useTranslation } from 'contexts/Localization'\nimport useFetchListCallback from '../../hooks/useFetchListCallback'\n\nimport { AppDispatch, AppState } from '../../state'\nimport { acceptListUpdate, removeList, disableList, enableList } from '../../state/lists/actions'\nimport { useIsListActive, useAllLists, useActiveListUrls } from '../../state/lists/hooks'\nimport uriToHttp from '../../utils/uriToHttp'\n\nimport Column, { AutoColumn } from '../Layout/Column'\nimport { ListLogo } from '../Logo'\nimport Row, { RowFixed, RowBetween } from '../Layout/Row'\nimport { CurrencyModalView } from './types'\n\nfunction listVersionLabel(version: Version): string {\n  return `v${version.major}.${version.minor}.${version.patch}`\n}\n\nconst Wrapper = styled(Column)`\n  width: 100%;\n  height: 100%;\n`\n\nconst RowWrapper = styled(Row)<{ active: boolean }>`\n  background-color: ${({ active, theme }) => (active ? `${theme.colors.success}19` : 'transparent')};\n  border: solid 1px;\n  border-color: ${({ active, theme }) => (active ? theme.colors.success : theme.colors.tertiary)};\n  transition: 200ms;\n  align-items: center;\n  padding: 1rem;\n  border-radius: 20px;\n`\n\nfunction listUrlRowHTMLId(listUrl: string) {\n  return `list-row-${listUrl.replace(/\\./g, '-')}`\n}\n\nconst ListRow = memo(function ListRow({ listUrl }: { listUrl: string }) {\n  const listsByUrl = useSelector<AppState, AppState['lists']['byUrl']>((state) => state.lists.byUrl)\n  const dispatch = useDispatch<AppDispatch>()\n  const { current: list, pendingUpdate: pending } = listsByUrl[listUrl]\n\n  const isActive = useIsListActive(listUrl)\n\n  const { t } = useTranslation()\n\n  const handleAcceptListUpdate = useCallback(() => {\n    if (!pending) return\n    dispatch(acceptListUpdate(listUrl))\n  }, [dispatch, listUrl, pending])\n\n  const handleRemoveList = useCallback(() => {\n    // eslint-disable-next-line no-alert\n    if (window.confirm('Please confirm you would like to remove this list')) {\n      dispatch(removeList(listUrl))\n    }\n  }, [dispatch, listUrl])\n\n  const handleEnableList = useCallback(() => {\n    dispatch(enableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const handleDisableList = useCallback(() => {\n    dispatch(disableList(listUrl))\n  }, [dispatch, listUrl])\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <div>\n      <Text>{list && listVersionLabel(list.version)}</Text>\n      <LinkExternal external href={`https://tokenlists.org/token-list?url=${listUrl}`}>\n        {t('See')}\n      </LinkExternal>\n      <Button variant=\"danger\" scale=\"xs\" onClick={handleRemoveList} disabled={Object.keys(listsByUrl).length === 1}>\n        {t('Remove')}\n      </Button>\n      {pending && (\n        <Button variant=\"text\" onClick={handleAcceptListUpdate} style={{ fontSize: '12px' }}>\n          {t('Update list')}\n        </Button>\n      )}\n    </div>,\n    { placement: 'right-end', trigger: 'click' },\n  )\n\n  if (!list) return null\n\n  return (\n    <RowWrapper active={isActive} key={listUrl} id={listUrlRowHTMLId(listUrl)}>\n      {tooltipVisible && tooltip}\n      {list.logoURI ? (\n        <ListLogo size=\"40px\" style={{ marginRight: '1rem' }} logoURI={list.logoURI} alt={`${list.name} list logo`} />\n      ) : (\n        <div style={{ width: '24px', height: '24px', marginRight: '1rem' }} />\n      )}\n      <Column style={{ flex: '1' }}>\n        <Row>\n          <Text bold>{list.name}</Text>\n        </Row>\n        <RowFixed mt=\"4px\">\n          <Text fontSize=\"12px\" mr=\"6px\" textTransform=\"lowercase\">\n            {list.tokens.length} {t('Tokens')}\n          </Text>\n          <span ref={targetRef}>\n            <CogIcon color=\"text\" width=\"12px\" />\n          </span>\n        </RowFixed>\n      </Column>\n      <Toggle\n        checked={isActive}\n        onChange={() => {\n          if (isActive) {\n            handleDisableList()\n          } else {\n            handleEnableList()\n          }\n        }}\n      />\n    </RowWrapper>\n  )\n})\n\nconst ListContainer = styled.div`\n  padding: 1rem 0;\n  height: 100%;\n  overflow: auto;\n`\n\nfunction ManageLists({\n  setModalView,\n  setImportList,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [listUrlInput, setListUrlInput] = useState<string>('')\n\n  const { t } = useTranslation()\n\n  const lists = useAllLists()\n\n  // sort by active but only if not visible\n  const activeListUrls = useActiveListUrls()\n  const [activeCopy, setActiveCopy] = useState<string[] | undefined>()\n  useEffect(() => {\n    if (!activeCopy && activeListUrls) {\n      setActiveCopy(activeListUrls)\n    }\n  }, [activeCopy, activeListUrls])\n\n  const handleInput = useCallback((e) => {\n    setListUrlInput(e.target.value)\n  }, [])\n\n  const fetchList = useFetchListCallback()\n\n  const validUrl: boolean = useMemo(() => {\n    return uriToHttp(listUrlInput).length > 0 || Boolean(parseENSAddress(listUrlInput))\n  }, [listUrlInput])\n\n  const sortedLists = useMemo(() => {\n    const listUrls = Object.keys(lists)\n    return listUrls\n      .filter((listUrl) => {\n        // only show loaded lists, hide unsupported lists\n        return Boolean(lists[listUrl].current) && !UNSUPPORTED_LIST_URLS.includes(listUrl)\n      })\n      .sort((u1, u2) => {\n        const { current: l1 } = lists[u1]\n        const { current: l2 } = lists[u2]\n\n        // first filter on active lists\n        if (activeCopy?.includes(u1) && !activeCopy?.includes(u2)) {\n          return -1\n        }\n        if (!activeCopy?.includes(u1) && activeCopy?.includes(u2)) {\n          return 1\n        }\n\n        if (l1 && l2) {\n          return l1.name.toLowerCase() < l2.name.toLowerCase()\n            ? -1\n            : l1.name.toLowerCase() === l2.name.toLowerCase()\n            ? 0\n            : 1\n        }\n        if (l1) return -1\n        if (l2) return 1\n        return 0\n      })\n  }, [lists, activeCopy])\n\n  // temporary fetched list for import flow\n  const [tempList, setTempList] = useState<TokenList>()\n  const [addError, setAddError] = useState<string | undefined>()\n\n  useEffect(() => {\n    async function fetchTempList() {\n      fetchList(listUrlInput, false)\n        .then((list) => setTempList(list))\n        .catch(() => setAddError('Error importing list'))\n    }\n    // if valid url, fetch details for card\n    if (validUrl) {\n      fetchTempList()\n    } else {\n      setTempList(undefined)\n      if (listUrlInput !== '') {\n        setAddError('Enter valid list location')\n      }\n    }\n\n    // reset error\n    if (listUrlInput === '') {\n      setAddError(undefined)\n    }\n  }, [fetchList, listUrlInput, validUrl])\n\n  // check if list is already imported\n  const isImported = Object.keys(lists).includes(listUrlInput)\n\n  // set list values and have parent modal switch to import list view\n  const handleImport = useCallback(() => {\n    if (!tempList) return\n    setImportList(tempList)\n    setModalView(CurrencyModalView.importList)\n    setListUrl(listUrlInput)\n  }, [listUrlInput, setImportList, setListUrl, setModalView, tempList])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"14px\">\n        <Row>\n          <Input\n            id=\"list-add-input\"\n            scale=\"lg\"\n            placeholder={t('https:// or ipfs:// or ENS name')}\n            value={listUrlInput}\n            onChange={handleInput}\n          />\n        </Row>\n        {addError ? (\n          <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n            {addError}\n          </Text>\n        ) : null}\n      </AutoColumn>\n      {tempList && (\n        <AutoColumn style={{ paddingTop: 0 }}>\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {tempList.logoURI && <ListLogo logoURI={tempList.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"4px\" style={{ marginLeft: '20px' }}>\n                  <Text bold>{tempList.name}</Text>\n                  <Text color=\"textSubtle\" small textTransform=\"lowercase\">\n                    {tempList.tokens.length} {t('Tokens')}\n                  </Text>\n                </AutoColumn>\n              </RowFixed>\n              {isImported ? (\n                <RowFixed>\n                  <CheckmarkIcon width=\"16px\" mr=\"10px\" />\n                  <Text>{t('Loaded')}</Text>\n                </RowFixed>\n              ) : (\n                <Button width=\"fit-content\" onClick={handleImport}>\n                  {t('Import')}\n                </Button>\n              )}\n            </RowBetween>\n          </Card>\n        </AutoColumn>\n      )}\n      <ListContainer>\n        <AutoColumn gap=\"md\">\n          {sortedLists.map((listUrl) => (\n            <ListRow key={listUrl} listUrl={listUrl} />\n          ))}\n        </AutoColumn>\n      </ListContainer>\n    </Wrapper>\n  )\n}\n\nexport default ManageLists\n","import React, { useRef, RefObject, useCallback, useState, useMemo } from 'react'\nimport { Token } from '@wagyu-swap/sdk'\nimport { Text, Button, CloseIcon, IconButton, LinkExternal, Input, Link } from 'packages/uikit'\nimport styled from 'styled-components'\nimport Row, { RowBetween, RowFixed } from 'components/Layout/Row'\nimport { useToken } from 'hooks/Tokens'\nimport { useRemoveUserAddedToken } from 'state/user/hooks'\nimport useUserAddedTokens from 'state/user/hooks/useUserAddedTokens'\nimport { CurrencyLogo } from 'components/Logo'\nimport { getVelasScanLink, isAddress } from 'utils'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useTranslation } from 'contexts/Localization'\nimport Column, { AutoColumn } from '../Layout/Column'\nimport ImportRow from './ImportRow'\nimport { CurrencyModalView } from './types'\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: calc(100% - 60px);\n  position: relative;\n  padding-bottom: 60px;\n`\n\nconst Footer = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nexport default function ManageTokens({\n  setModalView,\n  setImportToken,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const [searchQuery, setSearchQuery] = useState<string>('')\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback((event) => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n  }, [])\n\n  // if they input an address, use it\n  const searchToken = useToken(searchQuery)\n\n  // all tokens for local list\n  const userAddedTokens: Token[] = useUserAddedTokens()\n  const removeToken = useRemoveUserAddedToken()\n\n  const handleRemoveAll = useCallback(() => {\n    if (chainId && userAddedTokens) {\n      userAddedTokens.map((token) => {\n        return removeToken(chainId, token.address)\n      })\n    }\n  }, [removeToken, userAddedTokens, chainId])\n\n  const tokenList = useMemo(() => {\n    return (\n      chainId &&\n      userAddedTokens.map((token) => (\n        <RowBetween key={token.address} width=\"100%\">\n          <RowFixed>\n            <CurrencyLogo currency={token} size=\"20px\" />\n            <Link external href={getVelasScanLink(token.address, 'address', chainId)} color=\"textSubtle\" ml=\"10px\">\n              {token.symbol}\n            </Link>\n          </RowFixed>\n          <RowFixed>\n            <IconButton variant=\"text\" onClick={() => removeToken(chainId, token.address)}>\n              <CloseIcon />\n            </IconButton>\n            <LinkExternal href={getVelasScanLink(token.address, 'address', chainId)} />\n          </RowFixed>\n        </RowBetween>\n      ))\n    )\n  }, [userAddedTokens, chainId, removeToken])\n\n  const isAddressValid = searchQuery === '' || isAddress(searchQuery)\n\n  return (\n    <Wrapper>\n      <Column style={{ width: '100%', flex: '1 1' }}>\n        <AutoColumn gap=\"14px\">\n          <Row>\n            <Input\n              id=\"token-search-input\"\n              scale=\"lg\"\n              placeholder=\"0x0000\"\n              value={searchQuery}\n              autoComplete=\"off\"\n              ref={inputRef as RefObject<HTMLInputElement>}\n              onChange={handleInput}\n              isWarning={!isAddressValid}\n            />\n          </Row>\n          {!isAddressValid && <Text color=\"failure\">{t('Enter valid token address')}</Text>}\n          {searchToken && (\n            <ImportRow\n              token={searchToken}\n              showImportView={() => setModalView(CurrencyModalView.importToken)}\n              setImportToken={setImportToken}\n              style={{ height: 'fit-content' }}\n            />\n          )}\n        </AutoColumn>\n        {tokenList}\n        <Footer>\n          <Text bold color=\"textSubtle\">\n            {userAddedTokens?.length} {userAddedTokens.length === 1 ? t('Custom Token') : t('Custom Tokens')}\n          </Text>\n          {userAddedTokens.length > 0 && (\n            <Button variant=\"tertiary\" onClick={handleRemoveAll}>\n              {t('Clear all')}\n            </Button>\n          )}\n        </Footer>\n      </Column>\n    </Wrapper>\n  )\n}\n","import React, { useState } from 'react'\nimport { Token } from '@wagyu-swap/sdk'\nimport { ButtonMenu, ButtonMenuItem, ModalBody } from 'packages/uikit'\nimport styled from 'styled-components'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport ManageLists from './ManageLists'\nimport ManageTokens from './ManageTokens'\nimport { CurrencyModalView } from './types'\n\nconst StyledButtonMenu = styled(ButtonMenu)`\n  width: 100%;\n`\n\nexport default function Manage({\n  setModalView,\n  setImportList,\n  setImportToken,\n  setListUrl,\n}: {\n  setModalView: (view: CurrencyModalView) => void\n  setImportToken: (token: Token) => void\n  setImportList: (list: TokenList) => void\n  setListUrl: (url: string) => void\n}) {\n  const [showLists, setShowLists] = useState(false)\n\n  const { t } = useTranslation()\n\n  return (\n    <ModalBody>\n      <StyledButtonMenu\n        activeIndex={showLists ? 0 : 1}\n        onItemClick={() => setShowLists((prev) => !prev)}\n        scale=\"sm\"\n        variant=\"subtle\"\n        mb=\"32px\"\n      >\n        <ButtonMenuItem width=\"50%\">{t('Lists')}</ButtonMenuItem>\n        <ButtonMenuItem width=\"50%\">{t('Tokens')}</ButtonMenuItem>\n      </StyledButtonMenu>\n      {showLists ? (\n        <ManageLists setModalView={setModalView} setImportList={setImportList} setListUrl={setListUrl} />\n      ) : (\n        <ManageTokens setModalView={setModalView} setImportToken={setImportToken} />\n      )}\n    </ModalBody>\n  )\n}\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text, Link, Flex, Checkbox, Message } from 'packages/uikit'\nimport Card from 'components/Card'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport useTheme from 'hooks/useTheme'\nimport { ListLogo } from 'components/Logo'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from 'state'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport { removeList, enableList } from 'state/lists/actions'\nimport { useAllLists } from 'state/lists/hooks'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface ImportProps {\n  listURL: string\n  list: TokenList\n  onImport: () => void\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\n\nconst TextDot = styled.div`\n  height: 3px;\n  width: 3px;\n  background-color: ${({ theme }) => theme.colors.text};\n  border-radius: 50%;\n`\n\nfunction ImportList({ listURL, list, onImport }: ImportProps) {\n  const { theme } = useTheme()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { t } = useTranslation()\n\n  // user must accept\n  const [confirmed, setConfirmed] = useState(false)\n\n  const lists = useAllLists()\n  const fetchList = useFetchListCallback()\n\n  // monitor is list is loading\n  const adding = Boolean(lists[listURL]?.loadingRequestId)\n  const [addError, setAddError] = useState<string | null>(null)\n\n  const handleAddList = useCallback(() => {\n    if (adding) return\n    setAddError(null)\n    fetchList(listURL)\n      .then(() => {\n        dispatch(enableList(listURL))\n        onImport()\n      })\n      .catch((error) => {\n        setAddError(error.message)\n        dispatch(removeList(listURL))\n      })\n  }, [adding, dispatch, fetchList, listURL, onImport])\n\n  return (\n    <Wrapper>\n      <AutoColumn gap=\"md\">\n        <AutoColumn gap=\"md\">\n          <Card padding=\"12px 20px\">\n            <RowBetween>\n              <RowFixed>\n                {list.logoURI && <ListLogo logoURI={list.logoURI} size=\"40px\" />}\n                <AutoColumn gap=\"sm\" style={{ marginLeft: '20px' }}>\n                  <RowFixed>\n                    <Text bold mr=\"6px\">\n                      {list.name}\n                    </Text>\n                    <TextDot />\n                    <Text small color=\"textSubtle\" ml=\"6px\">\n                      {list.tokens.length} tokens\n                    </Text>\n                  </RowFixed>\n                  <Link\n                    small\n                    external\n                    ellipsis\n                    maxWidth=\"90%\"\n                    href={`https://tokenlists.org/token-list?url=${listURL}`}\n                  >\n                    {listURL}\n                  </Link>\n                </AutoColumn>\n              </RowFixed>\n            </RowBetween>\n          </Card>\n\n          <Message variant=\"danger\">\n            <Flex flexDirection=\"column\">\n              <Text fontSize=\"20px\" textAlign=\"center\" color={theme.colors.failure} mb=\"16px\">\n                {t('Import at your own risk')}\n              </Text>\n              <Text color={theme.colors.failure} mb=\"8px\">\n                {t(\n                  'By adding this list you are implicitly trusting that the data is correct. Anyone can create a list, including creating fake versions of existing lists and lists that claim to represent projects that do not have one.',\n                )}\n              </Text>\n              <Text bold color={theme.colors.failure} mb=\"16px\">\n                {typeof 'If you purchase a token from this list, you may not be able to sell it back.'}\n              </Text>\n              <Flex alignItems=\"center\">\n                <Checkbox\n                  name=\"confirmed\"\n                  type=\"checkbox\"\n                  checked={confirmed}\n                  onChange={() => setConfirmed(!confirmed)}\n                  scale=\"sm\"\n                />\n                <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n                  {t('I understand')}\n                </Text>\n              </Flex>\n            </Flex>\n          </Message>\n\n          <Button disabled={!confirmed} onClick={handleAddList}>\n            {t('Import')}\n          </Button>\n          {addError ? (\n            <Text color=\"failure\" style={{ textOverflow: 'ellipsis', overflow: 'hidden' }}>\n              {addError}\n            </Text>\n          ) : null}\n        </AutoColumn>\n      </AutoColumn>\n    </Wrapper>\n  )\n}\n\nexport default ImportList\n","import React, { useCallback, useState } from 'react'\nimport { Currency, Token } from '@wagyu-swap/sdk'\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalTitle,\n  ModalBackButton,\n  ModalCloseButton,\n  ModalBody,\n  InjectedModalProps,\n  Heading,\n  Button,\n} from 'packages/uikit'\nimport styled from 'styled-components'\nimport usePrevious from 'hooks/usePreviousValue'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useTranslation } from 'contexts/Localization'\nimport CurrencySearch from './CurrencySearch'\nimport ImportToken from './ImportToken'\nimport Manage from './Manage'\nimport ImportList from './ImportList'\nimport { CurrencyModalView } from './types'\n\nconst Footer = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  text-align: center;\n`\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 420px;\n  width: 100%;\n`\n\nconst StyledModalBody = styled(ModalBody)`\n  padding: 24px;\n`\n\ninterface CurrencySearchModalProps extends InjectedModalProps {\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n}\n\nexport default function CurrencySearchModal({\n  onDismiss = () => null,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n  showCommonBases = false,\n}: CurrencySearchModalProps) {\n  const [modalView, setModalView] = useState<CurrencyModalView>(CurrencyModalView.search)\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onDismiss()\n      onCurrencySelect(currency)\n    },\n    [onDismiss, onCurrencySelect],\n  )\n\n  // for token import view\n  const prevView = usePrevious(modalView)\n\n  // used for import token flow\n  const [importToken, setImportToken] = useState<Token | undefined>()\n\n  // used for import list\n  const [importList, setImportList] = useState<TokenList | undefined>()\n  const [listURL, setListUrl] = useState<string | undefined>()\n\n  const { t } = useTranslation()\n\n  const config = {\n    [CurrencyModalView.search]: { title: t('Select a Token'), onBack: undefined },\n    [CurrencyModalView.manage]: { title: t('Manage'), onBack: () => setModalView(CurrencyModalView.search) },\n    [CurrencyModalView.importToken]: {\n      title: t('Import Tokens'),\n      onBack: () =>\n        setModalView(prevView && prevView !== CurrencyModalView.importToken ? prevView : CurrencyModalView.search),\n    },\n    [CurrencyModalView.importList]: { title: t('Import List'), onBack: () => setModalView(CurrencyModalView.search) },\n  }\n\n  return (\n    <StyledModalContainer minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          {config[modalView].onBack && <ModalBackButton onBack={config[modalView].onBack} />}\n          <Heading>{config[modalView].title}</Heading>\n        </ModalTitle>\n        <ModalCloseButton onDismiss={onDismiss} />\n      </ModalHeader>\n      <StyledModalBody>\n        {modalView === CurrencyModalView.search ? (\n          <CurrencySearch\n            onCurrencySelect={handleCurrencySelect}\n            selectedCurrency={selectedCurrency}\n            otherSelectedCurrency={otherSelectedCurrency}\n            showCommonBases={showCommonBases}\n            showImportView={() => setModalView(CurrencyModalView.importToken)}\n            setImportToken={setImportToken}\n          />\n        ) : modalView === CurrencyModalView.importToken && importToken ? (\n          <ImportToken tokens={[importToken]} handleCurrencySelect={handleCurrencySelect} />\n        ) : modalView === CurrencyModalView.importList && importList && listURL ? (\n          <ImportList list={importList} listURL={listURL} onImport={() => setModalView(CurrencyModalView.manage)} />\n        ) : modalView === CurrencyModalView.manage ? (\n          <Manage\n            setModalView={setModalView}\n            setImportToken={setImportToken}\n            setImportList={setImportList}\n            setListUrl={setListUrl}\n          />\n        ) : (\n          ''\n        )}\n        {modalView === CurrencyModalView.search && (\n          <Footer>\n            <Button\n              scale=\"sm\"\n              variant=\"text\"\n              onClick={() => setModalView(CurrencyModalView.manage)}\n              className=\"list-token-manage-button\"\n            >\n              {t('Manage Tokens')}\n            </Button>\n          </Footer>\n        )}\n      </StyledModalBody>\n    </StyledModalContainer>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from 'packages/uikit'\nimport Container from '../Layout/Container'\n\nconst Outer = styled(Box)<{ background?: string }>`\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","import React, { useState, useMemo } from 'react'\nimport { Input } from 'packages/uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 16px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <InputWrapper>\n      <StyledInput value={searchText} onChange={onChange} placeholder={t(placeholder)} />\n    </InputWrapper>\n  )\n}\n\nexport default SearchInput\n","import { useAllLists } from 'state/lists/hooks'\nimport { getVersionUpgrade, VersionUpgrade } from '@uniswap/token-lists'\nimport { useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useAllInactiveTokens } from 'hooks/Tokens'\nimport { UNSUPPORTED_LIST_URLS } from 'config/constants/lists'\nimport useWeb3Provider from 'hooks/useActiveWeb3React'\nimport useFetchListCallback from 'hooks/useFetchListCallback'\nimport useInterval from 'hooks/useInterval'\nimport useIsWindowVisible from 'hooks/useIsWindowVisible'\nimport { AppDispatch } from '../index'\nimport { acceptListUpdate } from './actions'\nimport { useActiveListUrls } from './hooks'\n\nexport default function Updater(): null {\n  const { library } = useWeb3Provider()\n  const dispatch = useDispatch<AppDispatch>()\n  const isWindowVisible = useIsWindowVisible()\n\n  // get all loaded lists, and the active urls\n  const lists = useAllLists()\n  const activeListUrls = useActiveListUrls()\n\n  // initiate loading\n  useAllInactiveTokens()\n\n  const fetchList = useFetchListCallback()\n  const fetchAllListsCallback = useCallback(() => {\n    if (!isWindowVisible) return\n    Object.keys(lists).forEach((url) =>\n      fetchList(url).catch((error) => console.debug('interval list fetching error', error)),\n    )\n  }, [fetchList, isWindowVisible, lists])\n\n  // fetch all lists every 10 minutes, but only after we initialize library\n  useInterval(fetchAllListsCallback, library ? 1000 * 60 * 10 : null)\n\n  // whenever a list is not loaded and not loading, try again to load it\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list.current && !list.loadingRequestId && !list.error) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // if any lists from unsupported lists are loaded, check them too (in case new updates since last visit)\n  useEffect(() => {\n    Object.keys(UNSUPPORTED_LIST_URLS).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (!list || (!list.current && !list.loadingRequestId && !list.error)) {\n        fetchList(listUrl).catch((error) => console.debug('list added fetching error', error))\n      }\n    })\n  }, [dispatch, fetchList, library, lists])\n\n  // automatically update lists if versions are minor/patch\n  useEffect(() => {\n    Object.keys(lists).forEach((listUrl) => {\n      const list = lists[listUrl]\n      if (list.current && list.pendingUpdate) {\n        const bump = getVersionUpgrade(list.current.version, list.pendingUpdate.version)\n        // eslint-disable-next-line default-case\n        switch (bump) {\n          case VersionUpgrade.NONE:\n            throw new Error('unexpected no version bump')\n          // update any active or inactive lists\n          case VersionUpgrade.PATCH:\n          case VersionUpgrade.MINOR:\n          case VersionUpgrade.MAJOR:\n            dispatch(acceptListUpdate(listUrl))\n        }\n      }\n    })\n  }, [dispatch, lists, activeListUrls])\n\n  return null\n}\n","import { useEffect, useRef } from 'react'\n\nexport default function useInterval(callback: () => void, delay: null | number, leading = true) {\n  const savedCallback = useRef<() => void>()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const { current } = savedCallback\n      if (current) {\n        current()\n      }\n    }\n\n    if (delay !== null) {\n      if (leading) tick()\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n    return undefined\n  }, [delay, leading])\n}\n","/* eslint-disable */\n\nfunction wait(ms: number): Promise<void> {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nfunction waitRandom(min: number, max: number): Promise<void> {\n  return wait(min + Math.round(Math.random() * Math.max(0, max - min)))\n}\n\n/**\n * This error is thrown if the function is cancelled before completing\n */\nexport class CancelledError extends Error {\n  constructor() {\n    super('Cancelled')\n  }\n}\n\n/**\n * Throw this error if the function should retry\n */\nexport class RetryableError extends Error {}\n\n/**\n * Retries the function that returns the promise until the promise successfully resolves up to n retries\n * @param fn function to retry\n * @param n how many times to retry\n * @param minWait min wait between retries in ms\n * @param maxWait max wait between retries in ms\n */\nexport function retry<T>(\n  fn: () => Promise<T>,\n  { n, minWait, maxWait }: { n: number; minWait: number; maxWait: number },\n): { promise: Promise<T>; cancel: () => void } {\n  let completed = false\n  let rejectCancelled: (error: Error) => void\n  const promise = new Promise<T>(async (resolve, reject) => {\n    rejectCancelled = reject\n    while (true) {\n      let result: T\n      try {\n        result = await fn()\n        if (!completed) {\n          resolve(result)\n          completed = true\n        }\n        break\n      } catch (error) {\n        if (completed) {\n          break\n        }\n        if (n <= 0 || !(error instanceof RetryableError)) {\n          reject(error)\n          completed = true\n          break\n        }\n        n--\n      }\n      await waitRandom(minWait, maxWait)\n    }\n  })\n  return {\n    promise,\n    cancel: () => {\n      if (completed) return\n      completed = true\n      rejectCancelled(new CancelledError())\n    },\n  }\n}\n\n/* eslint-enable */\n","import { Contract } from '@ethersproject/contracts'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useBlock } from 'state/block/hooks'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useMulticallContract } from '../../hooks/useContract'\nimport useDebounce from '../../hooks/useDebounce'\nimport { CancelledError, retry, RetryableError } from './retry'\nimport { AppDispatch, AppState } from '../index'\nimport {\n  Call,\n  errorFetchingMulticallResults,\n  fetchingMulticallResults,\n  parseCallKey,\n  updateMulticallResults,\n} from './actions'\nimport chunkArray from './chunkArray'\n\n// chunk calls so we do not exceed the gas limit\nconst CALL_CHUNK_SIZE = 500\n\n/**\n * Fetches a chunk of calls, enforcing a minimum block number constraint\n * @param multicallContract multicall contract to fetch against\n * @param chunk chunk of calls to make\n * @param minBlockNumber minimum block number of the result set\n */\nasync function fetchChunk(\n  multicallContract: Contract,\n  chunk: Call[],\n  minBlockNumber: number,\n): Promise<{ results: string[]; blockNumber: number }> {\n  console.debug('Fetching chunk', multicallContract, chunk, minBlockNumber)\n  let resultsBlockNumber\n  let returnData\n  try {\n    // prettier-ignore\n    [resultsBlockNumber, returnData] = await multicallContract.aggregate(\n      chunk.map((obj) => [obj.address, obj.callData])\n    )\n  } catch (error) {\n    console.debug('Failed to fetch chunk inside retry', error)\n    throw error\n  }\n  if (resultsBlockNumber.toNumber() < minBlockNumber) {\n    console.debug(`Fetched results for old block number: ${resultsBlockNumber.toString()} vs. ${minBlockNumber}`)\n    throw new RetryableError('Fetched for old block number')\n  }\n  return { results: returnData, blockNumber: resultsBlockNumber.toNumber() }\n}\n\n/**\n * From the current all listeners state, return each call key mapped to the\n * minimum number of blocks per fetch. This is how often each key must be fetched.\n * @param allListeners the all listeners state\n * @param chainId the current chain id\n */\nexport function activeListeningKeys(\n  allListeners: AppState['multicall']['callListeners'],\n  chainId?: number,\n): { [callKey: string]: number } {\n  if (!allListeners || !chainId) return {}\n  const listeners = allListeners[chainId]\n  if (!listeners) return {}\n\n  return Object.keys(listeners).reduce<{ [callKey: string]: number }>((memo, callKey) => {\n    const keyListeners = listeners[callKey]\n\n    memo[callKey] = Object.keys(keyListeners)\n      .filter((key) => {\n        const blocksPerFetch = parseInt(key)\n        if (blocksPerFetch <= 0) return false\n        return keyListeners[blocksPerFetch] > 0\n      })\n      .reduce((previousMin, current) => {\n        return Math.min(previousMin, parseInt(current))\n      }, Infinity)\n    return memo\n  }, {})\n}\n\n/**\n * Return the keys that need to be refetched\n * @param callResults current call result state\n * @param listeningKeys each call key mapped to how old the data can be in blocks\n * @param chainId the current chain id\n * @param currentBlock the latest block number\n */\nexport function outdatedListeningKeys(\n  callResults: AppState['multicall']['callResults'],\n  listeningKeys: { [callKey: string]: number },\n  chainId: number | undefined,\n  currentBlock: number | undefined,\n): string[] {\n  if (!chainId || !currentBlock) return []\n  const results = callResults[chainId]\n  // no results at all, load everything\n  if (!results) return Object.keys(listeningKeys)\n\n  return Object.keys(listeningKeys).filter((callKey) => {\n    const blocksPerFetch = listeningKeys[callKey]\n\n    const data = callResults[chainId][callKey]\n    // no data, must fetch\n    if (!data) return true\n\n    const minDataBlockNumber = currentBlock - (blocksPerFetch - 1)\n\n    // already fetching it for a recent enough block, don't refetch it\n    if (data.fetchingBlockNumber && data.fetchingBlockNumber >= minDataBlockNumber) return false\n\n    // if data is older than minDataBlockNumber, fetch it\n    return !data.blockNumber || data.blockNumber < minDataBlockNumber\n  })\n}\n\nexport default function Updater(): null {\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['multicall']>((s) => s.multicall)\n  // wait for listeners to settle before triggering updates\n  const debouncedListeners = useDebounce(state.callListeners, 100)\n  const { currentBlock } = useBlock()\n  const { chainId } = useActiveWeb3React()\n  const multicallContract = useMulticallContract()\n  const cancellations = useRef<{ blockNumber: number; cancellations: (() => void)[] }>()\n\n  const listeningKeys: { [callKey: string]: number } = useMemo(() => {\n    return activeListeningKeys(debouncedListeners, chainId)\n  }, [debouncedListeners, chainId])\n\n  const unserializedOutdatedCallKeys = useMemo(() => {\n    return outdatedListeningKeys(state.callResults, listeningKeys, chainId, currentBlock)\n  }, [chainId, state.callResults, listeningKeys, currentBlock])\n\n  const serializedOutdatedCallKeys = useMemo(\n    () => JSON.stringify(unserializedOutdatedCallKeys.sort()),\n    [unserializedOutdatedCallKeys],\n  )\n\n  useEffect(() => {\n    if (!currentBlock || !chainId || !multicallContract) return\n\n    const outdatedCallKeys: string[] = JSON.parse(serializedOutdatedCallKeys)\n    if (outdatedCallKeys.length === 0) return\n    const calls = outdatedCallKeys.map((key) => parseCallKey(key))\n\n    const chunkedCalls = chunkArray(calls, CALL_CHUNK_SIZE)\n\n    if (cancellations.current?.blockNumber !== currentBlock) {\n      cancellations.current?.cancellations?.forEach((c) => c())\n    }\n\n    dispatch(\n      fetchingMulticallResults({\n        calls,\n        chainId,\n        fetchingBlockNumber: currentBlock,\n      }),\n    )\n\n    cancellations.current = {\n      blockNumber: currentBlock,\n      cancellations: chunkedCalls.map((chunk, index) => {\n        const { cancel, promise } = retry(() => fetchChunk(multicallContract, chunk, currentBlock), {\n          n: Infinity,\n          minWait: 2500,\n          maxWait: 3500,\n        })\n        promise\n          .then(({ results: returnData, blockNumber: fetchBlockNumber }) => {\n            cancellations.current = { cancellations: [], blockNumber: currentBlock }\n\n            // accumulates the length of all previous indices\n            const firstCallKeyIndex = chunkedCalls.slice(0, index).reduce<number>((memo, curr) => memo + curr.length, 0)\n            const lastCallKeyIndex = firstCallKeyIndex + returnData.length\n\n            dispatch(\n              updateMulticallResults({\n                chainId,\n                results: outdatedCallKeys\n                  .slice(firstCallKeyIndex, lastCallKeyIndex)\n                  .reduce<{ [callKey: string]: string | null }>((memo, callKey, i) => {\n                    memo[callKey] = returnData[i] ?? null\n                    return memo\n                  }, {}),\n                blockNumber: fetchBlockNumber,\n              }),\n            )\n          })\n          .catch((error: any) => {\n            if (error instanceof CancelledError) {\n              console.debug('Cancelled fetch for blockNumber', currentBlock)\n              return\n            }\n            console.error('Failed to fetch multicall chunk', chunk, chainId, error)\n            dispatch(\n              errorFetchingMulticallResults({\n                calls: chunk,\n                chainId,\n                fetchingBlockNumber: currentBlock,\n              }),\n            )\n          })\n        return cancel\n      }),\n    }\n  }, [chainId, multicallContract, dispatch, serializedOutdatedCallKeys, currentBlock])\n\n  return null\n}\n","// chunks array into chunks of maximum size\n// evenly distributes items among the chunks\nexport default function chunkArray<T>(items: T[], maxChunkSize: number): T[][] {\n  if (maxChunkSize < 1) throw new Error('maxChunkSize must be gte 1')\n  if (items.length <= maxChunkSize) return [items]\n\n  const numChunks: number = Math.ceil(items.length / maxChunkSize)\n  const chunkSize = Math.ceil(items.length / numChunks)\n\n  return [...Array(numChunks).keys()].map((ix) => items.slice(ix * chunkSize, ix * chunkSize + chunkSize))\n}\n","import React, { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Text, Flex, Link } from 'packages/uikit'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getVelasScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport useToast from 'hooks/useToast'\nimport { AppDispatch, AppState } from '../index'\nimport { checkedTransaction, finalizeTransaction } from './actions'\n\nexport function shouldCheck(\n  currentBlock: number,\n  tx: { addedTime: number; receipt?: any; lastCheckedBlockNumber?: number },\n): boolean {\n  if (tx.receipt) return false\n  if (!tx.lastCheckedBlockNumber) return true\n  const blocksSinceCheck = currentBlock - tx.lastCheckedBlockNumber\n  if (blocksSinceCheck < 1) return false\n  const minutesPending = (new Date().getTime() - tx.addedTime) / 1000 / 60\n  if (minutesPending > 60) {\n    // every 10 blocks if pending for longer than an hour\n    return blocksSinceCheck > 9\n  }\n  if (minutesPending > 5) {\n    // every 3 blocks if pending more than 5 minutes\n    return blocksSinceCheck > 2\n  }\n  // otherwise every block\n  return true\n}\n\nexport default function Updater(): null {\n  const { library, chainId } = useActiveWeb3React()\n\n  const { currentBlock } = useBlock()\n\n  const dispatch = useDispatch<AppDispatch>()\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n\n  const transactions = useMemo(() => (chainId ? state[chainId] ?? {} : {}), [chainId, state])\n\n  const { toastError, toastSuccess } = useToast()\n\n  useEffect(() => {\n    if (!chainId || !library || !currentBlock) return\n\n    Object.keys(transactions)\n      .filter((hash) => shouldCheck(currentBlock, transactions[hash]))\n      .forEach((hash) => {\n        library\n          .getTransactionReceipt(hash)\n          .then((receipt) => {\n            if (receipt) {\n              dispatch(\n                finalizeTransaction({\n                  chainId,\n                  hash,\n                  receipt: {\n                    blockHash: receipt.blockHash,\n                    blockNumber: receipt.blockNumber,\n                    contractAddress: receipt.contractAddress,\n                    from: receipt.from,\n                    status: receipt.status,\n                    to: receipt.to,\n                    transactionHash: receipt.transactionHash,\n                    transactionIndex: receipt.transactionIndex,\n                  },\n                }),\n              )\n\n              const toast = receipt.status === 1 ? toastSuccess : toastError\n              toast(\n                'Transaction receipt',\n                <Flex flexDirection=\"column\">\n                  <Text>{transactions[hash]?.summary ?? `Hash: ${hash.slice(0, 8)}...${hash.slice(58, 65)}`}</Text>\n                  {chainId && (\n                    <Link external href={getVelasScanLink(hash, 'transaction', chainId)}>\n                      View on Polygon Explorer\n                    </Link>\n                  )}\n                </Flex>,\n              )\n            } else {\n              dispatch(checkedTransaction({ chainId, hash, blockNumber: currentBlock }))\n            }\n          })\n          .catch((error) => {\n            console.error(`failed to check transaction hash: ${hash}`, error)\n          })\n      })\n  }, [chainId, library, transactions, currentBlock, dispatch, toastSuccess, toastError])\n\n  return null\n}\n","import React, { useState } from 'react'\nimport {\n  ButtonMenu,\n  ButtonMenuItem,\n  CloseIcon,\n  Heading,\n  IconButton,\n  InjectedModalProps,\n  ModalBody,\n  ModalContainer,\n  ModalHeader as UIKitModalHeader,\n  ModalTitle,\n} from 'packages/uikit'\nimport { parseUnits } from 'ethers/lib/utils'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport WalletInfo from './WalletInfo'\nimport WalletTransactions from './WalletTransactions'\n\nexport enum WalletView {\n  WALLET_INFO,\n  TRANSACTIONS,\n}\n\ninterface WalletModalProps extends InjectedModalProps {\n  initialView?: WalletView\n}\n\nexport const LOW_BNB_BALANCE = parseUnits('2', 'gwei')\n\nconst ModalHeader = styled(UIKitModalHeader)`\n  background: ${({ theme }) => theme.colors.gradients.bubblegum};\n`\n\nconst Tabs = styled.div`\n  background-color: ${({ theme }) => theme.colors.dropdown};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  padding: 16px 24px;\n`\n\nconst WalletModal: React.FC<WalletModalProps> = ({ initialView = WalletView.WALLET_INFO, onDismiss }) => {\n  const [view, setView] = useState(initialView)\n  const { t } = useTranslation()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  const handleClick = (newIndex: number) => {\n    setView(newIndex)\n  }\n\n  return (\n    <ModalContainer title={t('Welcome!')} minWidth=\"320px\">\n      <ModalHeader>\n        <ModalTitle>\n          <Heading>{t('Your Wallet')}</Heading>\n        </ModalTitle>\n        <IconButton variant=\"text\" onClick={onDismiss}>\n          <CloseIcon width=\"24px\" color=\"text\" />\n        </IconButton>\n      </ModalHeader>\n      <Tabs>\n        <ButtonMenu scale=\"sm\" variant=\"subtle\" onItemClick={handleClick} activeIndex={view} fullWidth>\n          <ButtonMenuItem>{t('Wallet')}</ButtonMenuItem>\n          <ButtonMenuItem>{t('Transactions')}</ButtonMenuItem>\n        </ButtonMenu>\n      </Tabs>\n      <ModalBody p=\"24px\" maxWidth=\"400px\" width=\"100%\">\n        {view === WalletView.WALLET_INFO && <WalletInfo hasLowBnbBalance={hasLowBnbBalance} onDismiss={onDismiss} />}\n        {view === WalletView.TRANSACTIONS && <WalletTransactions />}\n      </ModalBody>\n    </ModalContainer>\n  )\n}\n\nexport default WalletModal\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from 'packages/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      // const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isConnectorBinanceChain = false\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import { useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { isAddress } from 'utils'\nimport { useAppDispatch } from 'state'\nimport { State, ProfileState } from '../types'\nimport { fetchProfile, fetchProfileAvatar, fetchProfileUsername } from '.'\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n\nexport const useGetProfileAvatar = (account: string) => {\n  const profileAvatar = useSelector((state: State) => state.profile.profileAvatars[account])\n  const { username, nft } = profileAvatar || {}\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    const address = isAddress(account)\n\n    if (!nft && address) {\n      dispatch(fetchProfileAvatar(account))\n    }\n\n    if (!username && nft && address) {\n      dispatch(fetchProfileUsername(account))\n    }\n  }, [account, nft, username, dispatch])\n\n  return { username, nft }\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst StyledDatePickerPortal = styled.div`\n  .react-datepicker-wrapper,\n  .react-datepicker__input-container {\n    display: block;\n  }\n\n  .react-datepicker {\n    background: ${({ theme }) => theme.card.background};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n    color: ${({ theme }) => theme.colors.text};\n    font-family: 'Kanit', sans-serif;\n  }\n\n  .react-datepicker__header {\n    background: ${({ theme }) => theme.colors.input};\n    border-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__current-month,\n  .react-datepicker-time__header,\n  .react-datepicker-year-header,\n  .react-datepicker__day-name,\n  .react-datepicker__day,\n  .react-datepicker__time-name {\n    color: ${({ theme }) => theme.colors.text};\n  }\n\n  .react-datepicker__day:hover,\n  .react-datepicker__month-text:hover,\n  .react-datepicker__quarter-text:hover,\n  .react-datepicker__year-text:hover {\n    background-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::before,\n  .react-datepicker-popper[data-placement^='bottom'] .react-datepicker__triangle::after {\n    border-bottom-color: ${({ theme }) => theme.colors.cardBorder};\n  }\n\n  .react-datepicker__day--selected,\n  .react-datepicker__day--in-selecting-range,\n  .react-datepicker__day--in-range,\n  .react-datepicker__month-text--selected,\n  .react-datepicker__month-text--in-selecting-range,\n  .react-datepicker__month-text--in-range,\n  .react-datepicker__quarter-text--selected,\n  .react-datepicker__quarter-text--in-selecting-range,\n  .react-datepicker__quarter-text--in-range,\n  .react-datepicker__year-text--selected,\n  .react-datepicker__year-text--in-selecting-range,\n  .react-datepicker__year-text--in-range {\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  .react-datepicker__day--selected:hover,\n  .react-datepicker__day--in-selecting-range:hover,\n  .react-datepicker__day--in-range:hover,\n  .react-datepicker__month-text--selected:hover,\n  .react-datepicker__month-text--in-selecting-range:hover,\n  .react-datepicker__month-text--in-range:hover,\n  .react-datepicker__quarter-text--selected:hover,\n  .react-datepicker__quarter-text--in-selecting-range:hover,\n  .react-datepicker__quarter-text--in-range:hover,\n  .react-datepicker__year-text--selected:hover,\n  .react-datepicker__year-text--in-selecting-range:hover,\n  .react-datepicker__year-text--in-range:hover {\n    background-color: ${({ theme }) => theme.colors.primaryBright};\n  }\n\n  .react-datepicker__day--keyboard-selected,\n  .react-datepicker__month-text--keyboard-selected,\n  .react-datepicker__quarter-text--keyboard-selected,\n  .react-datepicker__year-text--keyboard-selected {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__day--keyboard-selected:hover,\n  .react-datepicker__month-text--keyboard-selected:hover,\n  .react-datepicker__quarter-text--keyboard-selected:hover,\n  .react-datepicker__year-text--keyboard-selected:hover {\n    background-color: ${({ theme }) => theme.colors.secondary};\n    color: #ffffff;\n  }\n\n  .react-datepicker__time-container,\n  .react-datepicker__time-container .react-datepicker__time .react-datepicker__time-box {\n    width: 120px;\n  }\n\n  .react-datepicker__header--time {\n    padding: 8px;\n  }\n\n  .react-datepicker__time-container\n    .react-datepicker__time\n    .react-datepicker__time-box\n    ul.react-datepicker__time-list\n    li.react-datepicker__time-list-item {\n    height: auto;\n    padding: 8px;\n  }\n`\n\nconst DatePickerPortal = () => {\n  return <StyledDatePickerPortal id=\"reactDatePicker\" />\n}\n\nexport default DatePickerPortal\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\n// import { PancakeTheme } from 'packages/uikit/dist/theme'\nimport { PancakeTheme } from 'packages/uikit'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import { MenuEntry } from 'packages/uikit'\nimport { ContextApi } from 'contexts/Localization/types'\n\nconst config: (t: ContextApi['t']) => MenuEntry[] = (t) => [\n  // {\n  //   label: t('Home'),\n  //   icon: 'HomeIcon',\n  //   href: '/',\n  // },\n  {\n    label: t('Trade'),\n    icon: 'TradeIcon',\n    items: [\n      {\n        label: t('Exchange'),\n        href: '/swap',\n      },\n      {\n        label: t('Liquidity'),\n        href: '/liquidity',\n      },\n      // {\n      //   label: t('LP Migration'),\n      //   href: 'https://v1exchange.pancakeswap.finance/#/migrate',\n      // },\n    ],\n  },\n  {\n    label: t('Farms'),\n    icon: 'FarmIcon',\n    href: '/farms',\n  },\n  {\n    label: t('Pools'),\n    icon: 'PoolIcon',\n    href: '/pools',\n  },\n  // {\n  //   label: t('Prediction (BETA)'),\n  //   icon: 'PredictionsIcon',\n  //   href: '/prediction',\n  // },\n  {\n    label: t('Lottery'),\n    icon: 'TicketIcon',\n    href: '/lottery',\n  },\n  // {\n  //   label: t('Collectibles'),\n  //   icon: 'NftIcon',\n  //   href: '/collectibles',\n  // },\n  // {\n  //   label: t('Team Battle'),\n  //   icon: 'TeamBattleIcon',\n  //   href: '/competition',\n  // },\n  // {\n  //   label: t('Teams & Profile'),\n  //   icon: 'GroupsIcon',\n  //   items: [\n  //     {\n  //       label: t('Leaderboard'),\n  //       href: '/teams',\n  //     },\n  //     {\n  //       label: t('Task Center'),\n  //       href: '/profile/tasks',\n  //     },\n  //     {\n  //       label: t('Your Profile'),\n  //       href: '/profile',\n  //     },\n  //   ],\n  // },\n  {\n    label: t('Info'),\n    icon: 'InfoIcon',\n    href: '/info',\n  },\n  // {\n  //   label: t('IFO'),\n  //   icon: 'IfoIcon',\n  //   href: '/ifo',\n  // },\n  {\n    label: t('More'),\n    icon: 'MoreIcon',\n    items: [\n      // {\n      //   label: t('Contact'),\n      //   href: 'https://docs.wagyuswap.app/wagyuswap/',\n      // },\n      // {\n      //   label: t('Voting'),\n      //   href: '/voting',\n      // },\n      {\n        label: t('Github'),\n        href: 'https://github.com/zolaswap-frontend',\n      },\n      //  {\n      //    label: t('Cross chain swapz'),\n      //    href: 'https://cross2.swapz.app',\n      //  },\n      {\n        label: t('Docs'),\n        href: 'https://docs.zolaswap.app/zolaswap/',\n      },\n      {\n        label: t('Blog'),\n        href: 'https://medium.com/@zolaswap.app',\n      },\n      {\n        label: t('Support'),\n        href: 'mailto:support@zolaswap.app',\n      },\n      // {\n      //   label: t('Merch'),\n      //   href: 'https://pancakeswap.creator-spring.com/',\n      // },\n    ],\n  },\n]\n\nexport default config\n","import React, { useState } from 'react'\nimport { Box, CopyIcon, Flex, FlexProps, IconButton } from 'packages/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface CopyAddressProps extends FlexProps {\n  account: string\n}\n\nconst Wrapper = styled(Flex)`\n  align-items: center;\n  background-color: ${({ theme }) => theme.colors.dropdown};\n  border-radius: 16px;\n  position: relative;\n`\n\nconst Address = styled.div`\n  flex: 1;\n  position: relative;\n  padding-left: 16px;\n\n  & > input {\n    background: transparent;\n    border: 0;\n    color: ${({ theme }) => theme.colors.text};\n    display: block;\n    font-weight: 600;\n    font-size: 16px;\n    padding: 0;\n    width: 100%;\n\n    &:focus {\n      outline: 0;\n    }\n  }\n\n  &:after {\n    background: linear-gradient(\n      to right,\n      ${({ theme }) => theme.colors.background}00,\n      ${({ theme }) => theme.colors.background}E6\n    );\n    content: '';\n    height: 100%;\n    pointer-events: none;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 40px;\n  }\n`\n\nconst Tooltip = styled.div<{ isTooltipDisplayed: boolean }>`\n  display: ${({ isTooltipDisplayed }) => (isTooltipDisplayed ? 'inline-block' : 'none')};\n  position: absolute;\n  padding: 8px;\n  top: -38px;\n  right: 0;\n  text-align: center;\n  background-color: ${({ theme }) => theme.colors.contrast};\n  color: ${({ theme }) => theme.colors.invertedContrast};\n  border-radius: 16px;\n  opacity: 0.7;\n  width: 100px;\n`\n\nconst CopyAddress: React.FC<CopyAddressProps> = ({ account, ...props }) => {\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false)\n  const { t } = useTranslation()\n\n  const copyAddress = () => {\n    if (navigator.clipboard && navigator.permissions) {\n      navigator.clipboard.writeText(account).then(() => displayTooltip())\n    } else if (document.queryCommandSupported('copy')) {\n      const ele = document.createElement('textarea')\n      ele.value = account\n      document.body.appendChild(ele)\n      ele.select()\n      document.execCommand('copy')\n      document.body.removeChild(ele)\n      displayTooltip()\n    }\n  }\n\n  function displayTooltip() {\n    setIsTooltipDisplayed(true)\n    setTimeout(() => {\n      setIsTooltipDisplayed(false)\n    }, 1000)\n  }\n\n  return (\n    <Box position=\"relative\" {...props}>\n      <Wrapper>\n        <Address title={account}>\n          <input type=\"text\" readOnly value={account} />\n        </Address>\n        <IconButton variant=\"text\" onClick={copyAddress}>\n          <CopyIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n      </Wrapper>\n      <Tooltip isTooltipDisplayed={isTooltipDisplayed}>{t('Copied')}</Tooltip>\n    </Box>\n  )\n}\n\nexport default CopyAddress\n","import React from 'react'\nimport { Box, Button, Flex, InjectedModalProps, LinkExternal, Message, Skeleton, Text } from 'packages/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport useTokenBalance, { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\nimport { getVelasScanLink } from 'utils'\nimport { getFullDisplayBalance, formatBigNumber } from 'utils/formatBalance'\nimport tokens from 'config/constants/tokens'\nimport CopyAddress from './CopyAddress'\n\ninterface WalletInfoProps {\n  hasLowBnbBalance: boolean\n  onDismiss: InjectedModalProps['onDismiss']\n}\n\nconst WalletInfo: React.FC<WalletInfoProps> = ({ hasLowBnbBalance, onDismiss }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const { balance: cakeBalance, fetchStatus: cakeFetchStatus } = useTokenBalance(tokens.cake.address)\n  const { logout } = useAuth()\n\n  const handleLogout = () => {\n    onDismiss()\n    logout()\n  }\n\n  return (\n    <>\n      <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\" mb=\"8px\">\n        {t('Your Address')}\n      </Text>\n      <CopyAddress account={account} mb=\"24px\" />\n      {hasLowBnbBalance && (\n        <Message variant=\"warning\" mb=\"24px\">\n          <Box>\n            <Text fontWeight=\"bold\">{t('MATIC Balance Low')}</Text>\n            <Text as=\"p\">{t('You need MATIC for transaction fees.')}</Text>\n          </Box>\n        </Message>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text color=\"textSubtle\">{t('MATIC Balance')}</Text>\n        {fetchStatus !== FetchStatus.SUCCESS ? (\n          <Skeleton height=\"22px\" width=\"60px\" />\n        ) : (\n          <Text>{formatBigNumber(balance, 6)}</Text>\n        )}\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text color=\"textSubtle\">{t('ZOLA Balance')}</Text>\n        {cakeFetchStatus !== FetchStatus.SUCCESS ? (\n          <Skeleton height=\"22px\" width=\"60px\" />\n        ) : (\n          <Text>{getFullDisplayBalance(cakeBalance, 18, 3)}</Text>\n        )}\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"end\" mb=\"24px\">\n        <LinkExternal href={getVelasScanLink(account, 'address')}>{t('View on Velas Explorer')}</LinkExternal>\n      </Flex>\n      <Button variant=\"secondary\" width=\"100%\" onClick={handleLogout}>\n        {t('Disconnect Wallet')}\n      </Button>\n    </>\n  )\n}\n\nexport default WalletInfo\n","import React from 'react'\nimport { BlockIcon, CheckmarkCircleIcon, Flex, Link, OpenNewIcon, RefreshIcon } from 'packages/uikit'\nimport styled from 'styled-components'\nimport { TransactionDetails } from 'state/transactions/reducer'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { getVelasScanLink } from 'utils'\n\ninterface TransactionRowProps {\n  txn: TransactionDetails\n}\n\nconst TxnIcon = styled(Flex)`\n  align-items: center;\n  flex: none;\n  width: 24px;\n`\n\nconst Summary = styled.div`\n  flex: 1;\n  padding: 0 8px;\n`\n\nconst TxnLink = styled(Link)`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  margin-bottom: 16px;\n  width: 100%;\n\n  &:hover {\n    text-decoration: none;\n  }\n`\n\nconst renderIcon = (txn: TransactionDetails) => {\n  if (!txn.receipt) {\n    return <RefreshIcon spin width=\"24px\" />\n  }\n\n  return txn.receipt?.status === 1 || typeof txn.receipt?.status === 'undefined' ? (\n    <CheckmarkCircleIcon color=\"success\" width=\"24px\" />\n  ) : (\n    <BlockIcon color=\"failure\" width=\"24px\" />\n  )\n}\n\nconst TransactionRow: React.FC<TransactionRowProps> = ({ txn }) => {\n  const { chainId } = useActiveWeb3React()\n\n  if (!txn) {\n    return null\n  }\n\n  return (\n    <TxnLink href={getVelasScanLink(txn.hash, 'transaction', chainId)} external>\n      <TxnIcon>{renderIcon(txn)}</TxnIcon>\n      <Summary>{txn.summary ?? txn.hash}</Summary>\n      <TxnIcon>\n        <OpenNewIcon width=\"24px\" color=\"primary\" />\n      </TxnIcon>\n    </TxnLink>\n  )\n}\n\nexport default TransactionRow\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { Box, Button, Flex, Text } from 'packages/uikit'\nimport { AppDispatch } from 'state'\nimport { useAllTransactions } from 'state/transactions/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { clearAllTransactions } from 'state/transactions/actions'\nimport { orderBy } from 'lodash'\nimport TransactionRow from './TransactionRow'\n\nconst WalletTransactions: React.FC = () => {\n  const { chainId } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n  const { t } = useTranslation()\n  const allTransactions = useAllTransactions()\n  const sortedTransactions = orderBy(allTransactions, 'addedTime', 'desc')\n\n  const handleClearAll = () => {\n    if (chainId) {\n      dispatch(clearAllTransactions({ chainId }))\n    }\n  }\n\n  return (\n    <Box minHeight=\"120px\">\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text color=\"secondary\" fontSize=\"12px\" textTransform=\"uppercase\" fontWeight=\"bold\">\n          {t('Recent Transactions')}\n        </Text>\n        {sortedTransactions.length > 0 && (\n          <Button scale=\"sm\" onClick={handleClearAll} variant=\"text\" px=\"0\">\n            {t('Clear all')}\n          </Button>\n        )}\n      </Flex>\n      {sortedTransactions.length > 0 ? (\n        sortedTransactions.map((txn) => <TransactionRow key={txn.hash} txn={txn} />)\n      ) : (\n        <Text textAlign=\"center\">{t('No recent transactions')}</Text>\n      )}\n    </Box>\n  )\n}\n\nexport default WalletTransactions\n","import React from 'react'\nimport { Flex, UserMenuItem, WarningIcon } from 'packages/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface WalletUserMenuItemProps {\n  hasLowBnbBalance: boolean\n  onPresentWalletModal: () => void\n}\n\nconst WalletUserMenuItem: React.FC<WalletUserMenuItemProps> = ({ hasLowBnbBalance, onPresentWalletModal }) => {\n  const { t } = useTranslation()\n\n  return (\n    <UserMenuItem as=\"button\" onClick={onPresentWalletModal}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n        {t('Wallet')}\n        {hasLowBnbBalance && <WarningIcon color=\"warning\" width=\"24px\" />}\n      </Flex>\n    </UserMenuItem>\n  )\n}\n\nexport default WalletUserMenuItem\n","import React from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Flex, LogoutIcon, useModal, UserMenu as UIKitUserMenu, UserMenuDivider, UserMenuItem } from 'packages/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useProfile } from 'state/profile/hooks'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { FetchStatus, useGetBnbBalance } from 'hooks/useTokenBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport WalletModal, { WalletView, LOW_BNB_BALANCE } from './WalletModal'\nimport ProfileUserMenuItem from './ProfileUserMenutItem'\nimport WalletUserMenuItem from './WalletUserMenuItem'\n\nconst UserMenu = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { logout } = useAuth()\n  const { balance, fetchStatus } = useGetBnbBalance()\n  const { isInitialized, isLoading, profile } = useProfile()\n  const [onPresentWalletModal] = useModal(<WalletModal initialView={WalletView.WALLET_INFO} />)\n  const [onPresentTransactionModal] = useModal(<WalletModal initialView={WalletView.TRANSACTIONS} />)\n  const hasProfile = isInitialized && !!profile\n  const avatarSrc = profile && profile.nft ? `/images/nfts/${profile.nft.images.sm}` : undefined\n  const hasLowBnbBalance = fetchStatus === FetchStatus.SUCCESS && balance.lte(LOW_BNB_BALANCE)\n\n  if (!account) {\n    return <ConnectWalletButton scale=\"sm\" />\n  }\n\n  return (\n    <UIKitUserMenu account={account} avatarSrc={avatarSrc}>\n      <WalletUserMenuItem hasLowBnbBalance={hasLowBnbBalance} onPresentWalletModal={onPresentWalletModal} />\n      <UserMenuItem as=\"button\" onClick={onPresentTransactionModal}>\n        {t('Transactions')}\n      </UserMenuItem>\n      {/* <UserMenuDivider />\n      <ProfileUserMenuItem isLoading={isLoading} hasProfile={hasProfile} /> */}\n      <UserMenuDivider />\n      <UserMenuItem as=\"button\" onClick={logout}>\n        <Flex alignItems=\"center\" justifyContent=\"space-between\" width=\"100%\">\n          {t('Disconnect')}\n          <LogoutIcon />\n        </Flex>\n      </UserMenuItem>\n    </UIKitUserMenu>\n  )\n}\n\nexport default UserMenu\n","import React, { useMemo } from 'react'\nimport { Menu as UikitMenu } from 'packages/uikit'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { useProfile } from 'state/profile/hooks'\nimport { useCakeBusdPrice } from 'hooks/useBUSDPrice'\nimport config from './config'\nimport UserMenu from './UserMenu'\nimport GlobalSettings from './GlobalSettings'\n\nconst Menu = (props) => {\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = useCakeBusdPrice()\n  const cakePriceUsdDisplay = cakePriceUsd ? `${cakePriceUsd.toFixed(3)}` : ''\n\n  const { profile } = useProfile()\n  const { currentLanguage, setLanguage, t } = useTranslation()\n\n  return (\n    <UikitMenu\n      userMenu={<UserMenu />}\n      globalMenu={<GlobalSettings />}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      cakePriceUsd={cakePriceUsdDisplay}\n      links={config(t)}\n      profile={{\n        username: profile?.username,\n        image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n        profileLink: '/profile',\n        noProfileLink: '/profile',\n        showPip: !profile?.username,\n      }}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from 'packages/uikit'\nimport Page from '../Layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from 'packages/uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { simpleRpcProvider } from 'utils/providers'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  fetchPoolsStakingLimitsAsync,\n} from '.'\nimport { State, DeserializedPool } from '../types'\nimport { transformPool } from './helpers'\n\nexport const useFetchPublicPoolsData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh])\n}\n\nexport const useFetchUserPools = (account) => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n}\n\nexport const usePools = (): { pools: DeserializedPool[]; userDataLoaded: boolean } => {\n  const { pools, userDataLoaded } = useSelector((state: State) => ({\n    pools: state.pools.data,\n    userDataLoaded: state.pools.userDataLoaded,\n  }))\n  return { pools: pools.map(transformPool), userDataLoaded }\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n    amountInFarm: amountInFarmString,\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  const amountInFarm = useMemo(() => {\n    return new BigNumber(amountInFarmString)\n  }, [amountInFarmString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n    amountInFarm,\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from 'packages/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { DeserializedPool } from 'state/types'\nimport { getAprData } from 'views/Pools/helpers'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nconst ApyLabelContainer = styled(Flex)`\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\ninterface AprRowProps {\n  pool: DeserializedPool\n  stakedBalance: BigNumber\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, stakedBalance, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, isFinished, apr, earningTokenPrice, stakingTokenPrice, userData, isAutoVault } =\n    pool\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s ZOLA is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const { apr: earningsPercentageToDisplay, autoCompoundFrequency } = getAprData(pool, performanceFee)\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <RoiCalculatorModal\n      earningTokenPrice={earningTokenPrice}\n      stakingTokenPrice={stakingTokenPrice}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      stakingTokenBalance={stakedBalance.plus(stakingTokenBalance)}\n      stakingTokenSymbol={stakingToken.symbol}\n      earningTokenSymbol={earningToken.symbol}\n      autoCompoundFrequency={autoCompoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <ApyLabelContainer alignItems=\"center\" onClick={onPresentApyModal}>\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n            onClick={onPresentApyModal}\n          />\n          <IconButton variant=\"text\" scale=\"sm\">\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n          </IconButton>\n        </ApyLabelContainer>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled from 'styled-components'\nimport { Card } from 'packages/uikit'\n\nexport const StyledCard = styled(Card)<{ isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport default StyledCard\n","import React, { useEffect, useRef, useState } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from 'packages/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  isDisabled?: boolean\n}\n\nconst RemainingTime: React.FC<BalanceProps> = ({ value: duration, color = 'text', isDisabled = false, ...props }) => {\n  const [secs, setSecs] = useState(duration)\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setSecs((prev) => (prev === 0 ? 0 : prev - 1))\n    }, 1000)\n    return () => {\n      clearInterval(interval)\n    }\n  }, [])\n\n  if (secs === 0) return null\n\n  const timeStr = (() => {\n    let str = ''\n    const sec = secs % 60\n    str = `${sec}S`\n\n    const mins = Math.floor(secs / 60)\n\n    if (mins === 0) return str\n\n    const min = mins % 60\n    str = `${min}M ${str}`\n\n    const hours = Math.floor(mins / 60)\n    if (hours === 0) return str\n    const hour = hours % 24\n    str = `${hour}H ${str}`\n\n    const days = Math.floor(hours / 24)\n    if (days === 0) return str\n\n    return `${days}D ${str}`\n  })()\n\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} {...props}>\n      {timeStr}\n    </Text>\n  )\n}\n\nexport default RemainingTime\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n  Link,\n  HelpIcon,\n} from 'packages/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { DeserializedPool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport { getVelasScanLink } from 'utils'\nimport Balance from 'components/Balance'\nimport RemainingTime from 'components/RemainingTime'\n\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\n\ninterface ExpandedFooterProps {\n  pool: DeserializedPool\n  account: string\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const {\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    sousId,\n    isAutoVault,\n  } = pool\n\n  const tokenAddress = earningToken.address || ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked && totalStaked.gte(0) ? (\n            <>\n              <Balance small value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n              <span ref={totalStakedTargetRef}>\n                <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"6px\" mt=\"4px\" />\n              </span>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n          {totalStakedTooltipVisible && totalStakedTooltip}\n        </Flex>\n      </Flex>\n      {stakingLimit && stakingLimit.gt(0) && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\">\n          <Text small>{t('Max. stake per user')}:</Text>\n          <Text small>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n        </Flex>\n      )}\n      {shouldShowBlockCountdown && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Text small>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n          {blocksRemaining || blocksUntilStart ? (\n            <Flex alignItems=\"center\">\n              {/* <Link external href={getVelasScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}> */}\n              <RemainingTime small value={blocksToDisplay} color=\"primary\" />\n              {/* <Text small ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n                  {t('Blocks')}\n                </Text> */}\n              <TimerIcon ml=\"4px\" color=\"primary\" />\n              {/* </Link> */}\n            </Flex>\n          ) : (\n            <Skeleton width=\"54px\" height=\"21px\" />\n          )}\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            {performanceFee ? (\n              <Text ml=\"4px\" small>\n                {performanceFee / 100}%\n              </Text>\n            ) : (\n              <Skeleton width=\"90px\" height=\"21px\" />\n            )}\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={`/info/token/${earningToken.address}`} bold={false} small>\n          {t('See Token Info')}\n        </LinkExternal>\n      </Flex>\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal href={earningToken.projectLink} bold={false} small>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n            bold={false}\n            small\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from 'packages/uikit'\nimport { DeserializedPool } from 'state/types'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: DeserializedPool\n  account: string\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account }) => {\n  const { isAutoVault } = pool\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { TokenPairImage, ImageProps } from 'packages/uikit'\nimport { serializeTokens } from 'config/constants/tokens'\nimport getTokenLogoURL from 'utils/getTokenLogoURL'\n\nconst CakeVaultTokenPairImage: React.FC<Omit<ImageProps, 'src'>> = (props) => {\n  // const primaryTokenSrc = `/images/tokens/${mainnetTokens.cake.address}.svg`\n  const primaryTokenSrc = getTokenLogoURL(serializeTokens().cake.address)\n\n  return <TokenPairImage primarySrc={primaryTokenSrc} secondarySrc=\"/images/tokens/autorenew.svg\" {...props} />\n}\n\nexport default CakeVaultTokenPairImage\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex } from 'packages/uikit'\nimport { Token } from '@wagyu-swap/sdk'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../CakeVaultCard/CakeVaultTokenPairImage'\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme }) => `${theme.radii.card} ${theme.radii.card} 0 0`};\n`\n\nconst StyledCardHeader: React.FC<{\n  earningToken: Token\n  stakingToken: Token\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n}> = ({ earningToken, stakingToken, isFinished = false, isAutoVault = false, isStaking = false }) => {\n  const { t } = useTranslation()\n  const isCakePool = earningToken.symbol === 'ZOLA' && stakingToken.symbol === 'ZOLA'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn ZOLA, stake ZOLA')\n    }\n    return t('Stake %symbol%', { symbol: stakingToken.symbol })\n  }\n\n  return (\n    <Wrapper isFinished={isFinished} background={background}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Flex flexDirection=\"column\">\n          <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\n            {`${getHeadingPrefix()} ${earningToken.symbol}`}\n          </Heading>\n          <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n        </Flex>\n        {isAutoVault ? (\n          <CakeVaultTokenPairImage width={64} height={64} />\n        ) : (\n          <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} width={64} height={64} />\n        )}\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers, Contract } from 'ethers'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance } from 'state/actions'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useSousChef, useCakeVaultContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport useLastUpdated from 'hooks/useLastUpdated'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport { ToastDescriptionWithTx } from 'components/Toast'\n\nexport const useApprovePool = (lpContract: Contract, sousId, earningTokenSymbol) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const tx = await callWithGasPrice(lpContract, 'approve', [sousChefContract.address, ethers.constants.MaxUint256])\n      const receipt = await tx.wait()\n\n      dispatch(updateUserAllowance(sousId, account))\n      if (receipt.status) {\n        toastSuccess(\n          t('Contract Enabled'),\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol })}\n          </ToastDescriptionWithTx>,\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n    }\n  }, [\n    account,\n    dispatch,\n    lpContract,\n    sousChefContract,\n    sousId,\n    earningTokenSymbol,\n    t,\n    toastError,\n    toastSuccess,\n    callWithGasPrice,\n  ])\n\n  return { handleApprove, requestedApproval }\n}\n\n// Approve ZOLA auto pool\nexport const useVaultApprove = (setLastUpdated: () => void) => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { t } = useTranslation()\n  const { toastSuccess, toastError } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const cakeContract = useCake()\n\n  const handleApprove = async () => {\n    const tx = await callWithGasPrice(cakeContract, 'approve', [cakeVaultContract.address, ethers.constants.MaxUint256])\n    setRequestedApproval(true)\n    const receipt = await tx.wait()\n    if (receipt.status) {\n      toastSuccess(\n        t('Contract Enabled'),\n        <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n          {t('You can now stake in the %symbol% vault!', { symbol: 'ZOLA' })}\n        </ToastDescriptionWithTx>,\n      )\n      setLastUpdated()\n      setRequestedApproval(false)\n    } else {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setRequestedApproval(false)\n    }\n  }\n\n  return { handleApprove, requestedApproval }\n}\n\nexport const useCheckVaultApprovalStatus = () => {\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const currentAllowance = await cakeContract.allowance(account, cakeVaultContract.address)\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return { isVaultApproved, setLastUpdated }\n}\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from 'packages/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { DeserializedPool } from 'state/types'\nimport { useApprovePool } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  pool: DeserializedPool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address || '')\n  const { handleApprove, requestedApproval } = useApprovePool(stakingTokenContract, sousId, earningToken.symbol)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from 'packages/uikit'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href=\"/swap\">\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      {/* <StyledLink href=\"https://yieldwatch.net\" external>\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\n          {t('Locate Assets')}\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\n        </Button>\n      </StyledLink> */}\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from 'packages/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stakeFarm } from 'utils/calls'\nimport BigNumber from 'bignumber.js'\nimport { DEFAULT_TOKEN_DECIMAL, DEFAULT_GAS_LIMIT } from 'config'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport getGasPrice from 'utils/getGasPrice'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT * 2,\n}\n\nconst sousStake = async (sousChefContract, amount, decimals = 18) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString(), {\n    ...options,\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousStakeBnb = async (sousChefContract, amount) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(), {\n    ...options,\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useStakePool = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stakeFarm(masterChefContract, 0, amount)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount)\n      } else {\n        await sousStake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStakePool\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { parseUnits } from 'ethers/lib/utils'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { unstakeFarm } from 'utils/calls'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport getGasPrice from 'utils/getGasPrice'\n\nconst sousUnstake = async (sousChefContract: any, amount: string, decimals: number) => {\n  const gasPrice = getGasPrice()\n  const units = parseUnits(amount, decimals)\n\n  const tx = await sousChefContract.withdraw(units.toString(), {\n    gasPrice,\n  })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst sousEmergencyUnstake = async (sousChefContract: any) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.emergencyWithdraw({ gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useUnstakePool = (sousId: number, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await unstakeFarm(masterChefContract, 0, amount)\n      } else if (enableEmergencyWithdraw) {\n        await sousEmergencyUnstake(sousChefContract)\n      } else {\n        await sousUnstake(sousChefContract, amount, decimals)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstakePool\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Flex,\n  Image,\n  Button,\n  Slider,\n  BalanceInput,\n  AutoRenewIcon,\n  Link,\n  CalculateIcon,\n  IconButton,\n} from 'packages/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { DeserializedPool } from 'state/types'\nimport { getInterestBreakdown } from 'utils/compoundApyHelpers'\nimport getTokenLogoURL from 'utils/getTokenLogoURL'\nimport PercentageButton from './PercentageButton'\nimport useStakePool from '../../../hooks/useStakePool'\nimport useUnstakePool from '../../../hooks/useUnstakePool'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: DeserializedPool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst AnnualRoiContainer = styled(Flex)`\n  cursor: pointer;\n`\n\nconst AnnualRoiDisplay = styled(Text)`\n  width: 72px;\n  max-width: 72px;\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, earningTokenPrice, apr, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const { onUnstake } = useUnstakePool(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n  const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n  const userNotEnoughToken = isRemovingStake\n    ? userData.stakedBalance.lt(fullDecimalStakeAmount)\n    : userData.stakingTokenBalance.lt(fullDecimalStakeAmount)\n\n  const usdValueStaked = new BigNumber(stakeAmount).times(stakingTokenPrice)\n  const formattedUsdValueStaked = !usdValueStaked.isNaN() && formatNumber(usdValueStaked.toNumber())\n\n  const interestBreakdown = getInterestBreakdown({\n    principalInUSD: !usdValueStaked.isNaN() ? usdValueStaked.toNumber() : 0,\n    apr,\n    earningTokenPrice,\n  })\n  const annualRoi = interestBreakdown[3] * pool.earningTokenPrice\n  const formattedAnnualRoi = formatNumber(annualRoi, annualRoi > 10000 ? 0 : 2, annualRoi > 10000 ? 0 : 2)\n\n  const getTokenLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [\n    stakeAmount,\n    stakingLimit,\n    userData,\n    stakingToken,\n    isRemovingStake,\n    setHasReachedStakedLimit,\n    fullDecimalStakeAmount,\n  ])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n    try {\n      if (isRemovingStake) {\n        // unstaking\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n      } else {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n      }\n      setPendingTx(false)\n      onDismiss()\n    } catch (e) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  if (showRoiCalculator) {\n    return (\n      <RoiCalculatorModal\n        earningTokenPrice={earningTokenPrice}\n        stakingTokenPrice={stakingTokenPrice}\n        apr={apr}\n        linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n        linkHref={getTokenLink}\n        stakingTokenBalance={userData.stakedBalance.plus(stakingTokenBalance)}\n        stakingTokenSymbol={stakingToken.symbol}\n        earningTokenSymbol={earningToken.symbol}\n        onBack={() => setShowRoiCalculator(false)}\n        initialValue={stakeAmount}\n      />\n    )\n  }\n\n  return (\n    <Modal\n      minWidth=\"346px\"\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image src={getTokenLogoURL(stakingToken.address)} width={24} height={24} alt={stakingToken.symbol} />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${formattedUsdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit || userNotEnoughToken}\n        decimals={stakingToken.decimals}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      {userNotEnoughToken && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Insufficient %symbol% balance', {\n            symbol: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>{t('Max')}</PercentageButton>\n      </Flex>\n      {!isRemovingStake && (\n        <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Text mr=\"8px\" color=\"textSubtle\">\n            {t('Annual ROI at current rates')}:\n          </Text>\n          <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\n            <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\n            <IconButton variant=\"text\" scale=\"sm\">\n              <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n            </IconButton>\n          </AnnualRoiContainer>\n        </Flex>\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit || userNotEnoughToken}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href={getTokenLink}>\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from 'packages/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { DeserializedPool } from 'state/types'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: DeserializedPool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingTokenPrice, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPrice !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { harvestFarm } from 'utils/calls'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport getGasPrice from 'utils/getGasPrice'\nimport { useMasterchef, useSousChef } from 'hooks/useContract'\nimport { DEFAULT_GAS_LIMIT } from 'config'\n\nconst options = {\n  gasLimit: DEFAULT_GAS_LIMIT * 2,\n}\n\nconst harvestPool = async (sousChefContract) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit('0', { ...options, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst harvestPoolBnb = async (sousChefContract) => {\n  const gasPrice = getGasPrice()\n  const tx = await sousChefContract.deposit({ ...options, value: BIG_ZERO, gasPrice })\n  const receipt = await tx.wait()\n  return receipt.status\n}\n\nconst useHarvestPool = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvestFarm(masterChefContract, 0)\n    } else if (isUsingBnb) {\n      await harvestPoolBnb(sousChefContract)\n    } else {\n      await harvestPool(sousChefContract)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n\nexport default useHarvestPool\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from 'packages/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { Token } from '@wagyu-swap/sdk'\nimport { formatNumber } from 'utils/formatBalance'\nimport useHarvestPool from '../../../hooks/useHarvestPool'\nimport useStakePool from '../../../hooks/useStakePool'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: number\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useHarvestPool(sousId, isBnbPool)\n  const { onStake } = useStakePool(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake ZOLA into pool.')}</Text>\n      <Text>{t('Harvest: collect ZOLA and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        console.error(e)\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          {earningsDollarValue > 0 && (\n            <Text fontSize=\"12px\" color=\"textSubtle\">{`~${formatNumber(earningsDollarValue)} USD`}</Text>\n          )}\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from 'packages/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from '@wagyu-swap/sdk'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  earningTokenPrice: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  earningTokenPrice,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"16px\">\n      <Flex flexDirection=\"column\">\n        {isLoading ? (\n          <Skeleton width=\"80px\" height=\"48px\" />\n        ) : (\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        )}\n      </Flex>\n      <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n        {isCompoundPool ? t('Collect') : t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from 'packages/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { DeserializedPool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: DeserializedPool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData, earningTokenPrice } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              earningTokenPrice={earningTokenPrice}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon } from 'packages/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { DeserializedPool } from 'state/types'\nimport AprRow from './AprRow'\nimport { StyledCard } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard: React.FC<{ pool: DeserializedPool; account: string }> = ({ pool, account }) => {\n  const { sousId, stakingToken, earningToken, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardHeader\n        isStaking={accountHasStakedBalance}\n        earningToken={earningToken}\n        stakingToken={stakingToken}\n        isFinished={isFinished && sousId !== 0}\n      />\n      <CardBody>\n        <AprRow pool={pool} stakedBalance={stakedBalance} />\n        <Flex mt=\"24px\" flexDirection=\"column\">\n          {account ? (\n            <CardActions pool={pool} stakedBalance={stakedBalance} />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </CardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import React from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from 'packages/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useVaultApprove } from '../../../hooks/useApprove'\n\ninterface ApprovalActionProps {\n  setLastUpdated: () => void\n  isLoading?: boolean\n}\n\nconst VaultApprovalAction: React.FC<ApprovalActionProps> = ({ isLoading = false, setLastUpdated }) => {\n  const { t } = useTranslation()\n\n  const { handleApprove, requestedApproval } = useVaultApprove(setLastUpdated)\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default VaultApprovalAction\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useState } from 'react'\n\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\n\n  useEffect(() => {\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\n    const secondsRemainingCalc = feeEndTime - currentSeconds\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\n\n    const tick = () => {\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\n    }\n    const timerInterval = setInterval(() => tick(), 1000)\n    if (doesUnstakingFeeApply) {\n      setSecondsRemaining(secondsRemainingCalc)\n      setHasUnstakingFee(true)\n    } else {\n      setHasUnstakingFee(false)\n      clearInterval(timerInterval)\n    }\n\n    return () => clearInterval(timerInterval)\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\n\n  return { hasUnstakingFee, secondsRemaining }\n}\n\nexport default useWithdrawalFeeTimer\n","import React from 'react'\nimport { Text } from 'packages/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\n  const { t } = useTranslation()\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\n}\n\nexport default WithdrawalFeeTimer\n","import React from 'react'\nimport { Flex, Text, TooltipText, useTooltip } from 'packages/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport { useCakeVault } from 'state/pools/hooks'\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\n\ninterface UnstakingFeeCountdownRowProps {\n  isTableVariant?: boolean\n}\n\nconst UnstakingFeeCountdownRow: React.FC<UnstakingFeeCountdownRowProps> = ({ isTableVariant }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFee, withdrawalFeePeriod },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100 || '-'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new ZOLA in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom-start' },\n  )\n\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime, 10),\n    userShares,\n    withdrawalFeePeriod,\n  )\n\n  // The user has made a deposit, but has no fee\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\n\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\n\n  const getRowText = () => {\n    if (noFeeToPay) {\n      return t('Unstaking Fee').toLowerCase()\n    }\n    if (shouldShowTimer) {\n      return t('unstaking fee until')\n    }\n    return t('unstaking fee if withdrawn within 72h')\n  }\n\n  return (\n    <Flex\n      alignItems={isTableVariant ? 'flex-start' : 'center'}\n      justifyContent=\"space-between\"\n      flexDirection={isTableVariant ? 'column' : 'row'}\n    >\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\n      </TooltipText>\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\n    </Flex>\n  )\n}\n\nexport default UnstakingFeeCountdownRow\n","import React from 'react'\nimport { Text, Flex, useTooltip, TooltipText } from 'packages/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n\ninterface FeeSummaryProps {\n  stakingTokenSymbol: string\n  stakeAmount: string\n}\n\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\n  const { t } = useTranslation()\n  const {\n    fees: { withdrawalFee },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new ZOLA in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'top-start' },\n  )\n\n  return (\n    <>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} small>\n          {t('Unstaking Fee')}\n        </TooltipText>\n        <Text fontSize=\"14px\">\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\n        </Text>\n      </Flex>\n      <UnstakingFeeCountdownRow />\n    </>\n  )\n}\n\nexport default FeeSummary\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport {\n  Modal,\n  Text,\n  Flex,\n  Image,\n  Button,\n  Slider,\n  BalanceInput,\n  AutoRenewIcon,\n  CalculateIcon,\n  IconButton,\n} from 'packages/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'views/Pools/hooks/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools'\nimport { DeserializedPool } from 'state/types'\nimport { getInterestBreakdown } from 'utils/compoundApyHelpers'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\nimport getTokenLogoURL from 'utils/getTokenLogoURL'\nimport { convertCakeToShares, convertSharesToCake } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: DeserializedPool\n  stakingMax: BigNumber\n  performanceFee?: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst AnnualRoiContainer = styled(Flex)`\n  cursor: pointer;\n`\n\nconst AnnualRoiDisplay = styled(Text)`\n  width: 72px;\n  max-width: 72px;\n  overflow: hidden;\n  text-align: right;\n  text-overflow: ellipsis;\n`\n\nconst callOptions = {\n  gasLimit: 900000,\n}\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({\n  pool,\n  stakingMax,\n  performanceFee,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken, earningToken, apr, stakingTokenPrice, earningTokenPrice } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const [showRoiCalculator, setShowRoiCalculator] = useState(false)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceBusd = usePriceCakeBusd()\n  const usdValueStaked = new BigNumber(stakeAmount).times(cakePriceBusd)\n  const formattedUsdValueStaked = cakePriceBusd.gt(0) && stakeAmount ? formatNumber(usdValueStaked.toNumber()) : ''\n\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n\n  const interestBreakdown = getInterestBreakdown({\n    principalInUSD: !usdValueStaked.isNaN() ? usdValueStaked.toNumber() : 0,\n    apr,\n    earningTokenPrice,\n    performanceFee,\n  })\n  const annualRoi = interestBreakdown[3] * pool.earningTokenPrice\n  const formattedAnnualRoi = formatNumber(annualRoi, annualRoi > 10000 ? 0 : 2, annualRoi > 10000 ? 0 : 2)\n\n  const getTokenLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 ZOLA or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      try {\n        const tx = await callWithGasPrice(cakeVaultContract, 'withdrawAll', undefined, callOptions)\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(\n            t('Unstaked!'),\n            <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n              {t('Your earnings have also been harvested to your wallet')}\n            </ToastDescriptionWithTx>,\n          )\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    } else {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      try {\n        const tx = await callWithGasPrice(\n          cakeVaultContract,\n          'withdraw',\n          [shareStakeToWithdraw.sharesAsBigNumber.toString()],\n          callOptions,\n        )\n        const receipt = await tx.wait()\n        if (receipt.status) {\n          toastSuccess(\n            t('Unstaked!'),\n            <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n              {t('Your earnings have also been harvested to your wallet')}\n            </ToastDescriptionWithTx>,\n          )\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        }\n      } catch (error) {\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    try {\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      const tx = await callWithGasPrice(cakeVaultContract, 'deposit', [convertedStakeAmount.toString()], callOptions)\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(\n          t('Staked!'),\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('Your funds have been staked in the pool')}\n          </ToastDescriptionWithTx>,\n        )\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    if (isRemovingStake) {\n      // unstaking\n      handleWithdrawal(convertedStakeAmount)\n    } else {\n      // staking\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  if (showRoiCalculator) {\n    return (\n      <RoiCalculatorModal\n        earningTokenPrice={earningTokenPrice}\n        stakingTokenPrice={stakingTokenPrice}\n        apr={apr}\n        linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n        linkHref={getTokenLink}\n        stakingTokenBalance={cakeAsBigNumber.plus(stakingMax)}\n        stakingTokenSymbol={stakingToken.symbol}\n        earningTokenSymbol={earningToken.symbol}\n        onBack={() => setShowRoiCalculator(false)}\n        initialValue={stakeAmount}\n        performanceFee={performanceFee}\n      />\n    )\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image src={getTokenLogoURL(stakingToken.address)} width={24} height={24} alt={stakingToken.symbol} />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={cakePriceBusd.gt(0) && `~${formattedUsdValueStaked || 0} USD`}\n        decimals={stakingToken.decimals}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          {t('Max')}\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      {!isRemovingStake && (\n        <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n          <Text mr=\"8px\" color=\"textSubtle\">\n            {t('Annual ROI at current rates')}:\n          </Text>\n          <AnnualRoiContainer alignItems=\"center\" onClick={() => setShowRoiCalculator(true)}>\n            <AnnualRoiDisplay>${formattedAnnualRoi}</AnnualRoiDisplay>\n            <IconButton variant=\"text\" scale=\"sm\">\n              <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n            </IconButton>\n          </AnnualRoiContainer>\n        </Flex>\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href={getTokenLink} variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from 'packages/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { DeserializedPool } from 'state/types'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport { convertSharesToCake } from '../../../helpers'\nimport VaultStakeModal from '../VaultStakeModal'\n\ninterface HasStakeActionProps {\n  pool: DeserializedPool\n  stakingTokenBalance: BigNumber\n  performanceFee: number\n}\n\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance, performanceFee }) => {\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { stakingToken } = pool\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const cakePriceBusd = usePriceCakeBusd()\n  const stakedDollarValue = cakePriceBusd.gt(0)\n    ? getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\n    : 0\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(\n    <VaultStakeModal stakingMax={stakingTokenBalance} performanceFee={performanceFee} pool={pool} />,\n  )\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\">\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {cakePriceBusd.gt(0) ? (\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\n          ) : (\n            <Skeleton mt=\"1px\" height={16} width={64} />\n          )}\n        </Text>\n      </Flex>\n      <Flex>\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HasSharesActions\n","import React from 'react'\nimport { Flex, Button, useModal, Skeleton } from 'packages/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { DeserializedPool } from 'state/types'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport VaultStakeModal from '../VaultStakeModal'\nimport HasSharesActions from './HasSharesActions'\n\ninterface VaultStakeActionsProps {\n  pool: DeserializedPool\n  stakingTokenBalance: BigNumber\n  accountHasSharesStaked: boolean\n  performanceFee: number\n  isLoading?: boolean\n}\n\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  accountHasSharesStaked,\n  performanceFee,\n  isLoading = false,\n}) => {\n  const { stakingToken } = pool\n  const { t } = useTranslation()\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(\n    <VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} performanceFee={performanceFee} />,\n  )\n\n  const renderStakeAction = () => {\n    return accountHasSharesStaked ? (\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} performanceFee={performanceFee} />\n    ) : (\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default VaultStakeActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Box } from 'packages/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { DeserializedPool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport VaultApprovalAction from './VaultApprovalAction'\nimport VaultStakeActions from './VaultStakeActions'\nimport { useCheckVaultApprovalStatus } from '../../../hooks/useApprove'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\nconst CakeVaultCardActions: React.FC<{\n  pool: DeserializedPool\n  accountHasSharesStaked: boolean\n  isLoading: boolean\n  performanceFee: number\n}> = ({ pool, accountHasSharesStaked, isLoading, performanceFee }) => {\n  const { stakingToken, userData } = pool\n  const { t } = useTranslation()\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        <Box display=\"inline\">\n          <InlineText\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {isVaultApproved ? (\n          <VaultStakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            accountHasSharesStaked={accountHasSharesStaked}\n            performanceFee={performanceFee}\n          />\n        ) : (\n          <VaultApprovalAction isLoading={isLoading} setLastUpdated={setLastUpdated} />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CakeVaultCardActions\n","import React from 'react'\nimport { Text, TooltipText, useTooltip } from 'packages/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\n\ninterface RecentCakeProfitBalanceProps {\n  cakeToDisplay: number\n  dollarValueToDisplay: number\n  dateStringToDisplay: string\n}\n\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\n  cakeToDisplay,\n  dollarValueToDisplay,\n  dateStringToDisplay,\n}) => {\n  const { t } = useTranslation()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" ZOLA\" />\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    {\n      placement: 'bottom-end',\n    },\n  )\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\n      </TooltipText>\n    </>\n  )\n}\n\nexport default RecentCakeProfitBalance\n","import React from 'react'\nimport { Flex, Text } from 'packages/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\n\nconst RecentCakeProfitCountdownRow = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    pricePerFullShare,\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    cakePriceBusd.toNumber(),\n  )\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Text fontSize=\"14px\">{`${t('Recent ZOLA profit')}:`}</Text>\n      {hasAutoEarnings && (\n        <RecentCakeProfitBalance\n          cakeToDisplay={autoCakeToDisplay}\n          dollarValueToDisplay={autoUsdToDisplay}\n          dateStringToDisplay={dateStringToDisplay}\n        />\n      )}\n    </Flex>\n  )\n}\n\nexport default RecentCakeProfitCountdownRow\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, CardBody, Flex, Text } from 'packages/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport tokens from 'config/constants/tokens'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { DeserializedPool } from 'state/types'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\nimport VaultCardActions from './VaultCardActions'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\n\ninterface CakeVaultProps {\n  pool: DeserializedPool\n  showStakedOnly: boolean\n}\n\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { userShares, isLoading: isVaultUserDataLoading },\n    fees: { performanceFee },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n\n  const accountHasSharesStaked = userShares && userShares.gt(0)\n  const isLoading = !pool.userData || isVaultUserDataLoading\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard isActive>\n      <StyledCardHeader\n        isStaking={accountHasSharesStaked}\n        isAutoVault\n        earningToken={tokens.cake}\n        stakingToken={tokens.cake}\n      />\n      <StyledCardBody isLoading={isLoading}>\n        <AprRow pool={pool} stakedBalance={cakeAsBigNumber} performanceFee={performanceFeeAsDecimal} />\n        <Box mt=\"24px\">\n          <RecentCakeProfitRow />\n        </Box>\n        <Box mt=\"8px\">\n          <UnstakingFeeCountdownRow />\n        </Box>\n        <Flex mt=\"32px\" flexDirection=\"column\">\n          {account ? (\n            <VaultCardActions\n              pool={pool}\n              accountHasSharesStaked={accountHasSharesStaked}\n              isLoading={isLoading}\n              performanceFee={performanceFeeAsDecimal}\n            />\n          ) : (\n            <>\n              <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                {t('Start earning')}\n              </Text>\n              <ConnectWalletButton />\n            </>\n          )}\n        </Flex>\n      </StyledCardBody>\n      <CardFooter pool={pool} account={account} />\n    </StyledCard>\n  )\n}\n\nexport default CakeVaultCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ListViewIcon, CardViewIcon, IconButton } from 'packages/uikit'\nimport { ViewMode } from 'state/user/actions'\n\ninterface ToggleViewProps {\n  viewMode: ViewMode\n  onToggle: (mode: ViewMode) => void\n}\n\nconst Container = styled.div`\n  margin-right: 0px;\n  margin-left: -8px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n`\n\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\n  const handleToggle = (mode: ViewMode) => {\n    if (viewMode !== mode) {\n      onToggle(mode)\n    }\n  }\n\n  return (\n    <Container>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolCardView\" onClick={() => handleToggle(ViewMode.CARD)}>\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\n      </IconButton>\n      <IconButton variant=\"text\" scale=\"sm\" id=\"clickPoolTableView\" onClick={() => handleToggle(ViewMode.TABLE)}>\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\n      </IconButton>\n    </Container>\n  )\n}\n\nexport default ToggleView\n","import React from 'react'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ViewMode } from 'state/user/actions'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem, Toggle, Text, NotificationDot } from 'packages/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport ToggleView from './ToggleView/ToggleView'\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  a {\n    padding-left: 12px;\n    padding-right: 12px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 16px;\n  }\n`\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools, viewMode, setViewMode }) => {\n  const { url, isExact } = useRouteMatch()\n  const { t } = useTranslation()\n\n  const viewModeToggle = <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\n\n  const liveOrFinishedSwitch = (\n    <Wrapper>\n      <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {t('Live')}\n        </ButtonMenuItem>\n        <NotificationDot show={hasStakeInFinishedPools}>\n          <ButtonMenuItem id=\"finished-pools-button\" as={Link} to={`${url}/history`}>\n            {t('Finished')}\n          </ButtonMenuItem>\n        </NotificationDot>\n      </ButtonMenu>\n    </Wrapper>\n  )\n\n  const stakedOnlySwitch = (\n    <ToggleWrapper>\n      <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n      <Text> {t('Staked only')}</Text>\n    </ToggleWrapper>\n  )\n\n  return (\n    <ViewControls>\n      {viewModeToggle}\n      {stakedOnlySwitch}\n      {liveOrFinishedSwitch}\n    </ViewControls>\n  )\n}\n\nexport default PoolTabButtons\n","import React, { useMemo, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from 'packages/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { ToastDescriptionWithTx } from 'components/Toast'\nimport Balance from 'components/Balance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useCallWithGasPrice } from 'hooks/useCallWithGasPrice'\n\ninterface BountyModalProps {\n  onDismiss?: () => void\n  TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\n\nconst BountyModal: React.FC<BountyModalProps> = ({ onDismiss, TooltipComponent }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n  const { toastError, toastSuccess } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const [pendingTx, setPendingTx] = useState(false)\n  const {\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: { callFee },\n  } = useCakeVault()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const cakePriceBusd = usePriceCakeBusd()\n  const callFeeAsDecimal = callFee / 100\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom',\n    tooltipPadding: { right: 15 },\n  })\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n    try {\n      const tx = await callWithGasPrice(cakeVaultContract, 'harvest', undefined, { gasLimit: 700000 })\n      const receipt = await tx.wait()\n      if (receipt.status) {\n        toastSuccess(\n          t('Bounty collected!'),\n          <ToastDescriptionWithTx txHash={receipt.transactionHash}>\n            {t('ZOLA bounty has been sent to your wallet.')}\n          </ToastDescriptionWithTx>,\n        )\n        setPendingTx(false)\n        onDismiss()\n      }\n    } catch (error) {\n      toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n      setPendingTx(false)\n    }\n  }\n\n  return (\n    <Modal title={t('Claim Bounty')} onDismiss={onDismiss} headerBackground={theme.colors.gradients.cardHeader}>\n      {tooltipVisible && tooltip}\n      <Flex alignItems=\"flex-start\" justifyContent=\"space-between\">\n        <Text>{t('You’ll claim')}</Text>\n        <Flex flexDirection=\"column\">\n          <Balance bold value={cakeBountyToDisplay} decimals={7} unit=\" ZOLA\" />\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            <Balance\n              fontSize=\"12px\"\n              color=\"textSubtle\"\n              value={dollarBountyToDisplay}\n              decimals={2}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Text>\n        </Flex>\n      </Flex>\n      <Divider />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Pool total pending yield')}\n        </Text>\n        <Balance color=\"textSubtle\" value={totalYieldToDisplay} unit=\" ZOLA\" />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Bounty')}\n        </Text>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {callFeeAsDecimal}%\n        </Text>\n      </Flex>\n      {account ? (\n        <Button\n          isLoading={pendingTx}\n          disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          onClick={handleConfirmClick}\n          mb=\"28px\"\n          id=\"autoCakeConfirmBounty\"\n        >\n          {pendingTx ? t('Confirming') : t('Confirm')}\n        </Button>\n      ) : (\n        <ConnectWalletButton mb=\"28px\" />\n      )}\n      <Flex justifyContent=\"center\" alignItems=\"center\">\n        <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n          {t('What’s this?')}\n        </Text>\n        <span ref={targetRef}>\n          <HelpIcon color=\"textSubtle\" />\n        </span>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default BountyModal\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Text,\n  Flex,\n  HelpIcon,\n  Button,\n  Heading,\n  Skeleton,\n  useModal,\n  Box,\n  useTooltip,\n} from 'packages/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { usePriceCakeBusd } from 'state/farms/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport Balance from 'components/Balance'\nimport BountyModal from './BountyModal'\n\nconst StyledCard = styled(Card)`\n  width: 100%;\n  flex: 1;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 240px;\n  }\n`\n\nconst BountyCard = () => {\n  const { t } = useTranslation()\n  const {\n    estimatedCakeBountyReward,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusd)\n  }, [cakePriceBusd, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty = estimatedDollarBountyReward.gte(0)\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const TooltipComponent = ({ fee }: { fee: number }) => (\n    <>\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\n      <Text mb=\"16px\">\n        {t(\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto ZOLA Pool’s compounding function for everyone.',\n        )}\n      </Text>\n      <Text style={{ fontWeight: 'bold' }}>\n        {t('Auto-Compound Bounty: %fee%% of all Auto ZOLA pool users pending yield', { fee: fee / 100 })}\n      </Text>\n    </>\n  )\n\n  const [onPresentBountyModal] = useModal(<BountyModal TooltipComponent={TooltipComponent} />)\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent fee={callFee} />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <StyledCard>\n        <CardBody>\n          <Flex flexDirection=\"column\">\n            <Flex alignItems=\"center\" mb=\"12px\">\n              <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n                {t('Auto ZOLA Bounty')}\n              </Text>\n              <Box ref={targetRef}>\n                <HelpIcon color=\"textSubtle\" />\n              </Box>\n            </Flex>\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <Flex flexDirection=\"column\" mr=\"12px\">\n              <Heading>\n                {hasFetchedCakeBounty ? (\n                  <Balance fontSize=\"20px\" bold value={cakeBountyToDisplay} decimals={3} />\n                ) : (\n                  <Skeleton height={20} width={96} mb=\"2px\" />\n                )}\n              </Heading>\n              {hasFetchedDollarBounty ? (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  value={dollarBountyToDisplay}\n                  decimals={2}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              ) : (\n                <Skeleton height={16} width={62} />\n              )}\n            </Flex>\n            <Button\n              disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n              onClick={onPresentBountyModal}\n              scale=\"sm\"\n              id=\"clickClaimVaultBounty\"\n            >\n              {t('Claim')}\n            </Button>\n          </Flex>\n        </CardBody>\n      </StyledCard>\n    </>\n  )\n}\n\nexport default BountyCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, HelpIcon, Link } from 'packages/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ButtonText = styled(Text)`\n  display: none;\n  ${({ theme }) => theme.mediaQueries.xs} {\n    display: block;\n  }\n`\n\nconst StyledLink = styled(Link)`\n  margin-right: 16px;\n  display: flex;\n  justify-content: flex-end;\n\n  &:hover {\n    text-decoration: none;\n  }\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1;\n  }\n`\n\nconst HelpButton = () => {\n  const { t } = useTranslation()\n  return (\n    <StyledLink external href=\"https://docs.wagyuswap.app/wagyuswap/products/syrup-pool\">\n      <Button px={['14px', null, null, null, '20px']} variant=\"subtle\">\n        <ButtonText color=\"backgroundAlt\" bold fontSize=\"16px\">\n          {t('Help')}\n        </ButtonText>\n        <HelpIcon color=\"backgroundAlt\" ml={[null, null, null, 0, '6px']} />\n      </Button>\n    </StyledLink>\n  )\n}\n\nexport default HelpButton\n","import { Flex, Text } from 'packages/uikit'\nimport styled from 'styled-components'\n\nconst BaseCell = styled.div`\n  color: black;\n\n  padding: 24px 8px;\n\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\n\nexport const CellContent = styled(Flex)`\n  flex-direction: column;\n  justify-content: center;\n  max-height: 40px;\n  ${Text} {\n    line-height: 1;\n  }\n`\n\nexport default BaseCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, useMatchBreakpoints } from 'packages/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { DeserializedPool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { TokenPairImage } from 'components/TokenImage'\nimport CakeVaultTokenPairImage from '../../CakeVaultCard/CakeVaultTokenPairImage'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface NameCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 5;\n  flex-direction: row;\n  padding-left: 12px;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 150px;\n    padding-left: 32px;\n  }\n`\n\nconst NameCell: React.FC<NameCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { sousId, stakingToken, earningToken, userData, isFinished, isAutoVault } = pool\n  const {\n    userData: { userShares },\n  } = useCakeVault()\n  const hasVaultShares = userShares && userShares.gt(0)\n\n  const stakingTokenSymbol = stakingToken.symbol\n  const earningTokenSymbol = earningToken.symbol\n\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isStaked = stakedBalance.gt(0)\n  const isManualCakePool = sousId === 0\n\n  const showStakedTag = isAutoVault ? hasVaultShares : isStaked\n\n  let title = `${t('Earn')} ${earningTokenSymbol}`\n  let subtitle = `${t('Stake')} ${stakingTokenSymbol}`\n  const showSubtitle = sousId !== 0 || (sousId === 0 && !isMobile)\n\n  if (isAutoVault) {\n    title = t('Auto ZOLA')\n    subtitle = t('Automatic restaking')\n  } else if (isManualCakePool) {\n    title = t('Manual ZOLA')\n    subtitle = `${t('Earn')} ZOLA ${t('Stake').toLocaleLowerCase()} ZOLA`\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      {isAutoVault ? (\n        <CakeVaultTokenPairImage mr=\"8px\" width={40} height={40} />\n      ) : (\n        <TokenPairImage primaryToken={earningToken} secondaryToken={stakingToken} mr=\"8px\" width={40} height={40} />\n      )}\n      <CellContent>\n        {showStakedTag && (\n          <Text fontSize=\"12px\" bold color={isFinished ? 'failure' : 'secondary'} textTransform=\"uppercase\">\n            {t('Staked')}\n          </Text>\n        )}\n        <Text bold={!isMobile} small={isMobile}>\n          {title}\n        </Text>\n        {showSubtitle && (\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            {subtitle}\n          </Text>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default NameCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, Flex, Box, useModal, useMatchBreakpoints } from 'packages/uikit'\nimport { DeserializedPool } from 'state/types'\nimport BigNumber from 'bignumber.js'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface EarningsCellProps {\n  pool: DeserializedPool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst EarningsCell: React.FC<EarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { sousId, earningToken, poolCategory, userData, earningTokenPrice } = pool\n  const isManualCakePool = sousId === 0\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  const hasEarnings = account && earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  const labelText = t('%asset% Earned', { asset: earningToken.symbol })\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isManualCakePool}\n    />,\n  )\n\n  const handleEarningsClick = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentCollect()\n  }\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\" onClick={hasEarnings ? handleEarningsClick : undefined}>\n                <Balance\n                  mt=\"4px\"\n                  bold={!isMobile}\n                  fontSize={isMobile ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EarningsCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, useModal, CalculateIcon, Skeleton, FlexProps, Button } from 'packages/uikit'\nimport RoiCalculatorModal from 'components/RoiCalculatorModal'\nimport Balance from 'components/Balance'\nimport { DeserializedPool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getAprData } from 'views/Pools/helpers'\nimport BigNumber from 'bignumber.js'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\nconst AprLabelContainer = styled(Flex)`\n  &:hover {\n    opacity: 0.5;\n  }\n`\n\ninterface AprProps extends FlexProps {\n  pool: DeserializedPool\n  stakedBalance: BigNumber\n  showIcon: boolean\n  performanceFee?: number\n}\n\nconst Apr: React.FC<AprProps> = ({ pool, showIcon, stakedBalance, performanceFee = 0, ...props }) => {\n  const { stakingToken, earningToken, isFinished, earningTokenPrice, stakingTokenPrice, userData, apr } = pool\n  const { t } = useTranslation()\n\n  const { apr: earningsPercentageToDisplay, autoCompoundFrequency } = getAprData(pool, performanceFee)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const apyModalLink = stakingToken.address ? `/swap?outputCurrency=${stakingToken.address}` : '/swap'\n\n  const [onPresentApyModal] = useModal(\n    <RoiCalculatorModal\n      earningTokenPrice={earningTokenPrice}\n      stakingTokenPrice={stakingTokenPrice}\n      stakingTokenBalance={stakedBalance.plus(stakingTokenBalance)}\n      apr={apr}\n      stakingTokenSymbol={stakingToken.symbol}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink}\n      earningTokenSymbol={earningToken.symbol}\n      autoCompoundFrequency={autoCompoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  const openRoiModal = (event: React.MouseEvent<HTMLElement>) => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <AprLabelContainer alignItems=\"center\" justifyContent=\"space-between\" {...props}>\n      {earningsPercentageToDisplay || isFinished ? (\n        <>\n          <Balance\n            onClick={openRoiModal}\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={isFinished ? 0 : earningsPercentageToDisplay}\n            decimals={2}\n            unit=\"%\"\n          />\n          {!isFinished && showIcon && (\n            <Button onClick={openRoiModal} variant=\"text\" width=\"20px\" height=\"20px\" padding=\"0px\" marginLeft=\"4px\">\n              <CalculateIcon color=\"textSubtle\" width=\"20px\" />\n            </Button>\n          )}\n        </>\n      ) : (\n        <Skeleton width=\"80px\" height=\"16px\" />\n      )}\n    </AprLabelContainer>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Text, useMatchBreakpoints } from 'packages/uikit'\nimport BigNumber from 'bignumber.js'\nimport { DeserializedPool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\n\ninterface AprCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AprCell: React.FC<AprCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { userData } = pool\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('APR')}\n        </Text>\n        <Apr pool={pool} stakedBalance={stakedBalance} showIcon={!isMobile} />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AprCell\n","import React, { useMemo } from 'react'\nimport { Flex, Skeleton, Text } from 'packages/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\nimport Balance from 'components/Balance'\nimport { DeserializedPool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface TotalStakedCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst TotalStakedCell: React.FC<TotalStakedCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { sousId, stakingToken, totalStaked, isAutoVault } = pool\n  const { totalCakeInVault, amountInFarm } = useCakeVault()\n\n  const isManualCakePool = sousId === 0\n  const totalStakedBalance = useMemo(() => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      // const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(amountInFarm)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }, [isAutoVault, totalCakeInVault, isManualCakePool, totalStaked, stakingToken.decimals, amountInFarm])\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('Total staked')}\n        </Text>\n        {totalStaked && totalStaked.gte(0) ? (\n          <Flex height=\"20px\" alignItems=\"center\">\n            <Balance fontSize=\"16px\" value={totalStakedBalance} decimals={0} unit={` ${stakingToken.symbol}`} />\n          </Flex>\n        ) : (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Link, Skeleton, Text, TimerIcon } from 'packages/uikit'\nimport { getVelasScanLink } from 'utils'\nimport { DeserializedPool } from 'state/types'\nimport { useBlock } from 'state/block/hooks'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getPoolBlockInfo } from 'views/Pools/helpers'\nimport RemainingTime from 'components/RemainingTime'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface FinishCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 2 0 100px;\n`\n\nconst EndsInCell: React.FC<FinishCellProps> = ({ pool }) => {\n  const { sousId, totalStaked, startBlock, endBlock, isFinished } = pool\n  const { currentBlock } = useBlock()\n  const { t } = useTranslation()\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isCakePool = sousId === 0\n\n  const renderBlocks = shouldShowBlockCountdown ? (\n    <Flex alignItems=\"center\">\n      <Flex flex=\"1.3\">\n        <RemainingTime fontSize=\"16px\" value={blocksToDisplay} />\n        {/* <Text ml=\"4px\" textTransform=\"lowercase\">\n          {t('Blocks')}\n        </Text> */}\n      </Flex>\n      <Flex flex=\"1\">\n        {/* <Link\n          external\n          href={getVelasScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}\n          onClick={(e) => e.stopPropagation()}\n        > */}\n        <TimerIcon ml=\"4px\" />\n        {/* </Link> */}\n      </Flex>\n    </Flex>\n  ) : (\n    <Text>-</Text>\n  )\n\n  // A bit hacky way to determine if public data is loading relying on totalStaked\n  // Opted to go for this since we don't really need a separate publicDataLoaded flag\n  // anywhere else\n  const isLoadingPublicData = !totalStaked.gt(0) || !currentBlock || (!blocksRemaining && !blocksUntilStart)\n  const showLoading = isLoadingPublicData && !isCakePool && !isFinished\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {hasPoolStarted || !shouldShowBlockCountdown ? t('Ends in') : t('Starts in')}\n        </Text>\n        {showLoading ? <Skeleton width=\"80px\" height=\"16px\" /> : renderBlocks}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default EndsInCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, ChevronDownIcon } from 'packages/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell from './BaseCell'\n\ninterface ExpandActionCellProps {\n  expanded: boolean\n  isFullLayout: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex-direction: row;\n  justify-content: flex-end;\n  align-items: center;\n  flex: 1;\n  padding-right: 12px;\n  padding-left: 0px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n    padding-right: 32px;\n    padding-left: 8px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 24px;\n`\n\nconst TotalStakedCell: React.FC<ExpandActionCellProps> = ({ expanded, isFullLayout }) => {\n  const { t } = useTranslation()\n  return (\n    <StyledCell role=\"cell\">\n      {isFullLayout && (\n        <Text color=\"primary\" bold>\n          {expanded ? t('Hide') : t('Details')}\n        </Text>\n      )}\n      <ArrowIcon color=\"primary\" toggled={expanded} />\n    </StyledCell>\n  )\n}\n\nexport default TotalStakedCell\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div<{ isAutoVault?: boolean }>`\n  padding: 16px;\n  border: 2px solid ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    height: ${({ isAutoVault }) => (isAutoVault ? '130px' : 'auto')};\n  }\n}\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 32px;\n    margin-right: 0;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  font-weight: 600;\n  font-size: 12px;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n","import React from 'react'\nimport { Button, Text, useModal, Flex, Skeleton, Heading } from 'packages/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { PoolCategory } from 'config/constants/types'\nimport { formatNumber, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { DeserializedPool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport CollectModal from '../../PoolCard/Modals/CollectModal'\n\ninterface HarvestActionProps extends DeserializedPool {\n  userDataLoaded: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({\n  sousId,\n  poolCategory,\n  earningToken,\n  userData,\n  userDataLoaded,\n  earningTokenPrice,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const earningTokenDollarBalance = getBalanceNumber(earnings.multipliedBy(earningTokenPrice), earningToken.decimals)\n  const hasEarnings = earnings.gt(0)\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n  const isCompoundPool = sousId === 0\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningTokenDollarBalance}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  const actionTitle = (\n    <>\n      <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n        {earningToken.symbol}{' '}\n      </Text>\n      <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n        {t('Earned')}\n      </Text>\n    </>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n          <Button disabled>{isCompoundPool ? t('Collect') : t('Harvest')}</Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n          {isCompoundPool ? t('Collect') : t('Harvest')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, useTooltip, Flex, Text } from 'packages/uikit'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport { useWeb3React } from '@web3-react/core'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { DeserializedPool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { PoolCategory } from 'config/constants/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useERC20 } from 'hooks/useContract'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport StakeModal from '../../PoolCard/Modals/StakeModal'\nimport VaultStakeModal from '../../CakeVaultCard/VaultStakeModal'\nimport { useCheckVaultApprovalStatus, useApprovePool, useVaultApprove } from '../../../hooks/useApprove'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps {\n  pool: DeserializedPool\n  userDataLoaded: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({ pool, userDataLoaded }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    stakingLimit,\n    isFinished,\n    poolCategory,\n    userData,\n    stakingTokenPrice,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const stakingTokenContract = useERC20(stakingToken.address || '')\n  const { handleApprove: handlePoolApprove, requestedApproval: requestedPoolApproval } = useApprovePool(\n    stakingTokenContract,\n    sousId,\n    earningToken.symbol,\n  )\n\n  const { isVaultApproved, setLastUpdated } = useCheckVaultApprovalStatus()\n  const { handleApprove: handleVaultApprove, requestedApproval: requestedVaultApproval } =\n    useVaultApprove(setLastUpdated)\n\n  const handleApprove = isAutoVault ? handleVaultApprove : handlePoolApprove\n  const requestedApproval = isAutoVault ? requestedVaultApproval : requestedPoolApproval\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const isNotVaultAndHasStake = !isAutoVault && stakedBalance.gt(0)\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPrice),\n    stakingToken.decimals,\n  )\n\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const hasSharesStaked = userShares && userShares.gt(0)\n  const isVaultWithShares = isAutoVault && hasSharesStaked\n  const stakedAutoDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(stakingTokenPrice), stakingToken.decimals)\n\n  const needsApproval = isAutoVault ? !isVaultApproved : !allowance.gt(0) && !isBnbPool\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPrice}\n    />,\n  )\n\n  const [onPresentVaultStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPrice}\n      isRemovingStake\n    />,\n  )\n\n  const [onPresentVaultUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  const onStake = () => {\n    if (isAutoVault) {\n      onPresentVaultStake()\n    } else {\n      onPresentStake()\n    }\n  }\n\n  const onUnstake = () => {\n    if (isAutoVault) {\n      onPresentVaultUnstake()\n    } else {\n      onPresentUnstake()\n    }\n  }\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t(\"You've already staked the maximum amount you can stake in this pool!\"),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <ConnectWalletButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Start staking')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (needsApproval) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {t('Enable pool')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n            {t('Enable')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  // Wallet connected, user data loaded and approved\n  if (isNotVaultAndHasStake || isVaultWithShares) {\n    return (\n      <ActionContainer isAutoVault={isAutoVault}>\n        <ActionTitles>\n          <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n            {stakingToken.symbol}{' '}\n          </Text>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n            {isAutoVault ? t('Staked (compounding)') : t('Staked')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n            <Balance\n              lineHeight=\"1\"\n              bold\n              fontSize=\"20px\"\n              decimals={5}\n              value={isAutoVault ? cakeAsNumberBalance : stakedTokenBalance}\n            />\n            <Balance\n              fontSize=\"12px\"\n              display=\"inline\"\n              color=\"textSubtle\"\n              decimals={2}\n              value={isAutoVault ? stakedAutoDollarValue : stakedTokenDollarBalance}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Flex>\n          <IconButtonWrapper>\n            <IconButton variant=\"secondary\" onClick={onUnstake} mr=\"6px\">\n              <MinusIcon color=\"primary\" width=\"14px\" />\n            </IconButton>\n            {reachStakingLimit ? (\n              <span ref={targetRef}>\n                <IconButton variant=\"secondary\" disabled>\n                  <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n                </IconButton>\n              </span>\n            ) : (\n              <IconButton\n                variant=\"secondary\"\n                onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n                disabled={isFinished}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            )}\n          </IconButtonWrapper>\n          {tooltipVisible && tooltip}\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n          {t('Stake')}{' '}\n        </Text>\n        <Text fontSize=\"12px\" bold color=\"textSubtle\" as=\"span\" textTransform=\"uppercase\">\n          {stakingToken.symbol}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button\n          width=\"100%\"\n          onClick={stakingTokenBalance.gt(0) ? onStake : onPresentTokenRequired}\n          variant=\"secondary\"\n          disabled={isFinished}\n        >\n          {t('Stake')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React from 'react'\nimport { Text, Flex, TooltipText, useTooltip, Skeleton, Heading } from 'packages/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { DeserializedPool } from 'state/types'\n\nimport { ActionContainer, ActionTitles, ActionContent } from './styles'\nimport UnstakingFeeCountdownRow from '../../CakeVaultCard/UnstakingFeeCountdownRow'\n\ninterface AutoHarvestActionProps extends DeserializedPool {\n  userDataLoaded: boolean\n}\n\nconst AutoHarvestAction: React.FunctionComponent<AutoHarvestActionProps> = ({ userDataLoaded, earningTokenPrice }) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    pricePerFullShare,\n    fees: { performanceFee },\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const earningTokenBalance = autoCakeToDisplay\n  const earningTokenDollarBalance = autoUsdToDisplay\n  const hasEarnings = hasAutoEarnings\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const actionTitle = (\n    <Text fontSize=\"12px\" bold color=\"secondary\" as=\"span\" textTransform=\"uppercase\">\n      {t('Recent ZOLA profit')}\n    </Text>\n  )\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Heading>0</Heading>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataLoaded) {\n    return (\n      <ActionContainer>\n        <ActionTitles>{actionTitle}</ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} height=\"32px\" marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer isAutoVault>\n      <ActionTitles>{actionTitle}</ActionTitles>\n      <ActionContent>\n        <Flex flex=\"1\" pt=\"16px\" flexDirection=\"column\" alignSelf=\"flex-start\">\n          <>\n            {hasEarnings ? (\n              <>\n                <Balance lineHeight=\"1\" bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n                {earningTokenPrice > 0 && (\n                  <Balance\n                    display=\"inline\"\n                    fontSize=\"12px\"\n                    color=\"textSubtle\"\n                    decimals={2}\n                    prefix=\"~\"\n                    value={earningTokenDollarBalance}\n                    unit=\" USD\"\n                  />\n                )}\n              </>\n            ) : (\n              <>\n                <Heading color=\"textDisabled\">0</Heading>\n                <Text fontSize=\"12px\" color=\"textDisabled\">\n                  0 USD\n                </Text>\n              </>\n            )}\n          </>\n        </Flex>\n        <Flex flex=\"1.3\" flexDirection=\"column\" alignSelf=\"flex-start\" alignItems=\"flex-start\">\n          <UnstakingFeeCountdownRow isTableVariant />\n          <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n            {tooltipVisible && tooltip}\n            <TooltipText ref={targetRef} small>\n              {t('Performance Fee')}\n            </TooltipText>\n            <Flex alignItems=\"center\">\n              <Text ml=\"4px\" small>\n                {performanceFee / 100}%\n              </Text>\n            </Flex>\n          </Flex>\n        </Flex>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default AutoHarvestAction\n","import React from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport {\n  Box,\n  Button,\n  Flex,\n  HelpIcon,\n  Link,\n  LinkExternal,\n  MetamaskIcon,\n  Skeleton,\n  Text,\n  TimerIcon,\n  useTooltip,\n} from 'packages/uikit'\nimport { BASE_BSC_SCAN_URL } from 'config'\nimport { getVelasScanLink } from 'utils'\nimport { useBlock } from 'state/block/hooks'\nimport { useCakeVault } from 'state/pools/hooks'\nimport BigNumber from 'bignumber.js'\nimport { DeserializedPool } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\nimport RemainingTime from 'components/RemainingTime'\n\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { registerToken } from 'utils/wallet'\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport { convertSharesToCake, getPoolBlockInfo } from 'views/Pools/helpers'\nimport Harvest from './Harvest'\nimport Stake from './Stake'\nimport Apr from '../Apr'\nimport AutoHarvest from './AutoHarvest'\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 700px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 700px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst StyledActionPanel = styled.div<{ expanded: boolean }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.dropdown};\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  padding: 12px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\ntype MediaBreakpoints = {\n  isXs: boolean\n  isSm: boolean\n  isMd: boolean\n  isLg: boolean\n  isXl: boolean\n  isXxl: boolean\n}\n\ninterface ActionPanelProps {\n  account: string\n  pool: DeserializedPool\n  userDataLoaded: boolean\n  expanded: boolean\n  breakpoints: MediaBreakpoints\n}\n\nconst InfoSection = styled(Box)`\n  flex-grow: 0;\n  flex-shrink: 0;\n  flex-basis: auto;\n  padding: 8px 8px;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding: 0;\n    flex-basis: 230px;\n  }\n`\n\nconst ActionPanel: React.FC<ActionPanelProps> = ({ account, pool, userDataLoaded, expanded, breakpoints }) => {\n  const {\n    sousId,\n    stakingToken,\n    earningToken,\n    totalStaked,\n    startBlock,\n    endBlock,\n    stakingLimit,\n    contractAddress,\n    userData,\n    isAutoVault,\n  } = pool\n  const { t } = useTranslation()\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const { currentBlock } = useBlock()\n  const { isXs, isSm, isMd } = breakpoints\n  const showSubtitle = (isXs || isSm) && sousId === 0\n\n  const { shouldShowBlockCountdown, blocksUntilStart, blocksRemaining, hasPoolStarted, blocksToDisplay } =\n    getPoolBlockInfo(pool, currentBlock)\n\n  const isMetaMaskInScope = !!window.ethereum?.isMetaMask\n  const tokenAddress = earningToken.address || ''\n\n  const {\n    totalCakeInVault,\n    userData: { userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const poolStakingTokenBalance = isAutoVault\n    ? cakeAsBigNumber.plus(stakingTokenBalance)\n    : stakedBalance.plus(stakingTokenBalance)\n\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n  const isManualCakePool = sousId === 0\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  const {\n    targetRef: totalStakedTargetRef,\n    tooltip: totalStakedTooltip,\n    tooltipVisible: totalStakedTooltipVisible,\n  } = useTooltip(t('Total amount of %symbol% staked in this pool', { symbol: stakingToken.symbol }), {\n    placement: 'bottom',\n  })\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const {\n    targetRef: tagTargetRef,\n    tooltip: tagTooltip,\n    tooltipVisible: tagTooltipVisible,\n  } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom-start',\n  })\n\n  const maxStakeRow = stakingLimit.gt(0) ? (\n    <Flex mb=\"8px\" justifyContent=\"space-between\">\n      <Text>{t('Max. stake per user')}:</Text>\n      <Text>{`${getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0)} ${stakingToken.symbol}`}</Text>\n    </Flex>\n  ) : null\n\n  const blocksRow =\n    blocksRemaining || blocksUntilStart ? (\n      <Flex mb=\"8px\" justifyContent=\"space-between\">\n        <Text>{hasPoolStarted ? t('Ends in') : t('Starts in')}:</Text>\n        <Flex>\n          {/* <Link external href={getVelasScanLink(hasPoolStarted ? endBlock : startBlock, 'countdown')}> */}\n          <RemainingTime fontSize=\"16px\" value={blocksToDisplay} color=\"primary\" />\n          {/* <Text ml=\"4px\" color=\"primary\" textTransform=\"lowercase\">\n              {t('Blocks')}\n            </Text> */}\n          <TimerIcon ml=\"4px\" color=\"primary\" />\n          {/* </Link> */}\n        </Flex>\n      </Flex>\n    ) : (\n      <Skeleton width=\"56px\" height=\"16px\" />\n    )\n\n  const aprRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text>{isAutoVault ? t('APY') : t('APR')}:</Text>\n      <Apr\n        pool={pool}\n        showIcon\n        stakedBalance={poolStakingTokenBalance}\n        performanceFee={isAutoVault ? performanceFeeAsDecimal : 0}\n      />\n    </Flex>\n  )\n\n  const totalStakedRow = (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"8px\">\n      <Text maxWidth={['50px', '100%']}>{t('Total staked')}:</Text>\n      <Flex alignItems=\"center\">\n        {totalStaked && totalStaked.gte(0) ? (\n          <>\n            <Balance fontSize=\"16px\" value={getTotalStakedBalance()} decimals={0} unit={` ${stakingToken.symbol}`} />\n            <span ref={totalStakedTargetRef}>\n              <HelpIcon color=\"textSubtle\" width=\"20px\" ml=\"4px\" />\n            </span>\n          </>\n        ) : (\n          <Skeleton width=\"56px\" height=\"16px\" />\n        )}\n        {totalStakedTooltipVisible && totalStakedTooltip}\n      </Flex>\n    </Flex>\n  )\n\n  return (\n    <StyledActionPanel expanded={expanded}>\n      <InfoSection>\n        {maxStakeRow}\n        {(isXs || isSm) && aprRow}\n        {(isXs || isSm || isMd) && totalStakedRow}\n        {shouldShowBlockCountdown && blocksRow}\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={`/info/token/${earningToken.address}`} bold={false}>\n            {t('See Token Info')}\n          </LinkExternal>\n        </Flex>\n        <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n          <LinkExternal href={earningToken.projectLink} bold={false}>\n            {t('View Project Site')}\n          </LinkExternal>\n        </Flex>\n        {poolContractAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <LinkExternal\n              href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n              bold={false}\n            >\n              {t('View Contract')}\n            </LinkExternal>\n          </Flex>\n        )}\n        {account && isMetaMaskInScope && tokenAddress && (\n          <Flex mb=\"8px\" justifyContent={['flex-end', 'flex-end', 'flex-start']}>\n            <Button\n              variant=\"text\"\n              p=\"0\"\n              height=\"auto\"\n              onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals)}\n            >\n              <Text color=\"primary\">{t('Add to Metamask')}</Text>\n              <MetamaskIcon ml=\"4px\" />\n            </Button>\n          </Flex>\n        )}\n        {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n        {tagTooltipVisible && tagTooltip}\n        <span ref={tagTargetRef}>\n          <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n        </span>\n      </InfoSection>\n      <ActionContainer>\n        {showSubtitle && (\n          <Text mt=\"4px\" mb=\"16px\" color=\"textSubtle\">\n            {isAutoVault ? t('Automatic restaking') : `${t('Earn')} ZOLA ${t('Stake').toLocaleLowerCase()} ZOLA`}\n          </Text>\n        )}\n        {pool.isAutoVault ? (\n          <AutoHarvest {...pool} userDataLoaded={userDataLoaded} />\n        ) : (\n          <Harvest {...pool} userDataLoaded={userDataLoaded} />\n        )}\n        <Stake pool={pool} userDataLoaded={userDataLoaded} />\n      </ActionContainer>\n    </StyledActionPanel>\n  )\n}\n\nexport default ActionPanel\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton, Text, useTooltip, HelpIcon, Flex, Box, useMatchBreakpoints } from 'packages/uikit'\nimport { DeserializedPool } from 'state/types'\nimport Balance from 'components/Balance'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { getCakeVaultEarnings } from 'views/Pools/helpers'\nimport BaseCell, { CellContent } from './BaseCell'\n\ninterface AutoEarningsCellProps {\n  pool: DeserializedPool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 4.5;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex: 1 0 120px;\n  }\n`\n\nconst HelpIconWrapper = styled.div`\n  align-self: center;\n`\n\nconst AutoEarningsCell: React.FC<AutoEarningsCellProps> = ({ pool, account, userDataLoaded }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n  const { earningTokenPrice } = pool\n\n  const {\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { hasAutoEarnings, autoCakeToDisplay, autoUsdToDisplay } = getCakeVaultEarnings(\n    account,\n    cakeAtLastUserAction,\n    userShares,\n    pricePerFullShare,\n    earningTokenPrice,\n  )\n\n  const labelText = t('Recent ZOLA profit')\n  const earningTokenBalance = autoCakeToDisplay\n  const hasEarnings = hasAutoEarnings\n  const earningTokenDollarBalance = autoUsdToDisplay\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={autoCakeToDisplay} decimals={3} bold unit=\" ZOLA\" />\n      <Balance fontSize=\"16px\" value={autoUsdToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    { placement: 'bottom' },\n  )\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {labelText}\n        </Text>\n        {!userDataLoaded && account ? (\n          <Skeleton width=\"80px\" height=\"16px\" />\n        ) : (\n          <>\n            {tooltipVisible && tooltip}\n            <Flex>\n              <Box mr=\"8px\" height=\"32px\">\n                <Balance\n                  mt=\"4px\"\n                  bold={!isMobile}\n                  fontSize={isMobile ? '14px' : '16px'}\n                  color={hasEarnings ? 'primary' : 'textDisabled'}\n                  decimals={hasEarnings ? 5 : 1}\n                  value={hasEarnings ? earningTokenBalance : 0}\n                />\n                {hasEarnings ? (\n                  <>\n                    {earningTokenPrice > 0 && (\n                      <Balance\n                        display=\"inline\"\n                        fontSize=\"12px\"\n                        color=\"textSubtle\"\n                        decimals={2}\n                        prefix=\"~\"\n                        value={earningTokenDollarBalance}\n                        unit=\" USD\"\n                      />\n                    )}\n                  </>\n                ) : (\n                  <Text mt=\"4px\" fontSize=\"12px\" color=\"textDisabled\">\n                    0 USD\n                  </Text>\n                )}\n              </Box>\n              {hasEarnings && !isMobile && (\n                <HelpIconWrapper ref={targetRef}>\n                  <HelpIcon color=\"textSubtle\" />\n                </HelpIconWrapper>\n              )}\n            </Flex>\n          </>\n        )}\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AutoEarningsCell\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, useMatchBreakpoints } from 'packages/uikit'\nimport { DeserializedPool } from 'state/types'\nimport { useCakeVault } from 'state/pools/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport BaseCell, { CellContent } from './BaseCell'\nimport Apr from '../Apr'\nimport { convertSharesToCake } from '../../../helpers'\n\ninterface AprCellProps {\n  pool: DeserializedPool\n}\n\nconst StyledCell = styled(BaseCell)`\n  flex: 1 0 50px;\n  ${({ theme }) => theme.mediaQueries.md} {\n    flex: 0 0 120px;\n  }\n`\n\nconst AutoAprCell: React.FC<AprCellProps> = ({ pool }) => {\n  const { t } = useTranslation()\n  const { isMobile } = useMatchBreakpoints()\n\n  const {\n    userData: { userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n  } = useCakeVault()\n\n  const { cakeAsBigNumber } = convertSharesToCake(userShares, pricePerFullShare)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  return (\n    <StyledCell role=\"cell\">\n      <CellContent>\n        <Text fontSize=\"12px\" color=\"textSubtle\" textAlign=\"left\">\n          {t('APY')}\n        </Text>\n        <Apr\n          pool={pool}\n          stakedBalance={cakeAsBigNumber}\n          performanceFee={performanceFeeAsDecimal}\n          showIcon={!isMobile}\n        />\n      </CellContent>\n    </StyledCell>\n  )\n}\n\nexport default AutoAprCell\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { useMatchBreakpoints } from 'packages/uikit'\nimport { DeserializedPool } from 'state/types'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport NameCell from './Cells/NameCell'\nimport EarningsCell from './Cells/EarningsCell'\nimport AprCell from './Cells/AprCell'\nimport TotalStakedCell from './Cells/TotalStakedCell'\nimport EndsInCell from './Cells/EndsInCell'\nimport ExpandActionCell from './Cells/ExpandActionCell'\nimport ActionPanel from './ActionPanel/ActionPanel'\nimport AutoEarningsCell from './Cells/AutoEarningsCell'\nimport AutoAprCell from './Cells/AutoAprCell'\n\ninterface PoolRowProps {\n  pool: DeserializedPool\n  account: string\n  userDataLoaded: boolean\n}\n\nconst StyledRow = styled.div`\n  background-color: transparent;\n  display: flex;\n  cursor: pointer;\n`\n\nconst PoolRow: React.FC<PoolRowProps> = ({ pool, account, userDataLoaded }) => {\n  const { isXs, isSm, isMd, isLg, isXl, isXxl, isTablet, isDesktop } = useMatchBreakpoints()\n  const isLargerScreen = isLg || isXl || isXxl\n  const [expanded, setExpanded] = useState(false)\n  const shouldRenderActionPanel = useDelayedUnmount(expanded, 300)\n\n  const toggleExpanded = () => {\n    setExpanded((prev) => !prev)\n  }\n\n  return (\n    <>\n      <StyledRow role=\"row\" onClick={toggleExpanded}>\n        <NameCell pool={pool} />\n        {pool.isAutoVault ? (\n          <AutoEarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        ) : (\n          <EarningsCell pool={pool} account={account} userDataLoaded={userDataLoaded} />\n        )}\n        {pool.isAutoVault ? <AutoAprCell pool={pool} /> : <AprCell pool={pool} />}\n        {isLargerScreen && <TotalStakedCell pool={pool} />}\n        {isDesktop && <EndsInCell pool={pool} />}\n        <ExpandActionCell expanded={expanded} isFullLayout={isTablet || isDesktop} />\n      </StyledRow>\n      {shouldRenderActionPanel && (\n        <ActionPanel\n          account={account}\n          pool={pool}\n          userDataLoaded={userDataLoaded}\n          expanded={expanded}\n          breakpoints={{ isXs, isSm, isMd, isLg, isXl, isXxl }}\n        />\n      )}\n    </>\n  )\n}\n\nexport default PoolRow\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { Button, ChevronUpIcon } from 'packages/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { DeserializedPool } from 'state/types'\nimport PoolRow from './PoolRow'\n\ninterface PoolsTableProps {\n  pools: DeserializedPool[]\n  userDataLoaded: boolean\n  account: string\n}\n\nconst StyledTable = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n\n  background-color: ${({ theme }) => theme.card.background};\n  > div:not(:last-child) {\n    border-bottom: 2px solid ${({ theme }) => theme.colors.disabled};\n  }\n`\n\nconst StyledTableBorder = styled.div`\n  border-radius: ${({ theme }) => theme.radii.card};\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  padding: 1px 1px 3px 1px;\n  background-size: 400% 400%;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst PoolsTable: React.FC<PoolsTableProps> = ({ pools, userDataLoaded, account }) => {\n  const { t } = useTranslation()\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n  return (\n    <StyledTableBorder>\n      <StyledTable id=\"pools-table\" role=\"table\" ref={tableWrapperEl}>\n        {pools.map((pool) => (\n          <PoolRow\n            key={pool.isAutoVault ? 'auto-cake' : pool.sousId}\n            pool={pool}\n            account={account}\n            userDataLoaded={userDataLoaded}\n          />\n        ))}\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            {t('To Top')}\n            <ChevronUpIcon color=\"primary\" />\n          </Button>\n        </ScrollButtonContainer>\n      </StyledTable>\n    </StyledTableBorder>\n  )\n}\n\nexport default PoolsTable\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ethers } from 'ethers'\nimport { formatUnits } from 'ethers/lib/utils'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Image, Text } from 'packages/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport useIntersectionObserver from 'hooks/useIntersectionObserver'\nimport {\n  useFetchPublicPoolsData,\n  usePools,\n  useFetchUserPools,\n  useFetchCakeVault,\n  useCakeVault,\n} from 'state/pools/hooks'\nimport { usePollFarmsPublicData } from 'state/farms/hooks'\nimport { latinise } from 'utils/latinise'\nimport FlexLayout from 'components/Layout/Flex'\nimport Page from 'components/Layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport { DeserializedPool } from 'state/types'\nimport { useUserPoolStakedOnly, useUserPoolsViewMode } from 'state/user/hooks'\nimport { ViewMode } from 'state/user/actions'\nimport Loading from 'components/Loading'\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport BountyCard from './components/BountyCard'\nimport HelpButton from './components/HelpButton'\nimport PoolsTable from './components/PoolsTable/PoolsTable'\nimport { getAprData, getCakeVaultEarnings } from './helpers'\n\nconst CardLayout = styled(FlexLayout)`\n  justify-content: center;\n`\n\nconst PoolControls = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    margin-bottom: 0;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst ControlStretch = styled(Flex)`\n  > div {\n    flex: 1;\n  }\n`\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Pools: React.FC = () => {\n  const location = useLocation()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { pools: poolsWithoutAutoVault, userDataLoaded } = usePools()\n  const [stakedOnly, setStakedOnly] = useUserPoolStakedOnly()\n  const [viewMode, setViewMode] = useUserPoolsViewMode()\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const { observerRef, isIntersecting } = useIntersectionObserver()\n  const [searchQuery, setSearchQuery] = useState('')\n  const [sortOption, setSortOption] = useState('hot')\n  const chosenPoolsLength = useRef(0)\n  const {\n    userData: { cakeAtLastUserAction, userShares },\n    fees: { performanceFee },\n    pricePerFullShare,\n    totalCakeInVault,\n    amountInFarm: vaultWagInFarm,\n  } = useCakeVault()\n  const accountHasVaultShares = userShares && userShares.gt(0)\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  const pools = useMemo(() => {\n    const cakePool = poolsWithoutAutoVault.find((pool) => pool.sousId === 0)\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\n    return [cakeAutoVault, ...poolsWithoutAutoVault]\n  }, [poolsWithoutAutoVault])\n\n  // TODO aren't arrays in dep array checked just by reference, i.e. it will rerender every time reference changes?\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () =>\n      finishedPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [finishedPools, accountHasVaultShares],\n  )\n  const stakedOnlyOpenPools = useMemo(\n    () =>\n      openPools.filter((pool) => {\n        if (pool.isAutoVault) {\n          return accountHasVaultShares\n        }\n        return pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)\n      }),\n    [openPools, accountHasVaultShares],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  usePollFarmsPublicData()\n  useFetchCakeVault()\n  useFetchPublicPoolsData()\n  useFetchUserPools(account)\n\n  useEffect(() => {\n    if (isIntersecting) {\n      setNumberOfPoolsVisible((poolsCurrentlyVisible) => {\n        if (poolsCurrentlyVisible <= chosenPoolsLength.current) {\n          return poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE\n        }\n        return poolsCurrentlyVisible\n      })\n    }\n  }, [isIntersecting])\n\n  const showFinishedPools = location.pathname.includes('history')\n\n  const handleChangeSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value)\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  const sortPools = (poolsToSort: DeserializedPool[]) => {\n    switch (sortOption) {\n      case 'apr':\n        // Ternary is needed to prevent pools without APR (like MIX) getting top spot\n        return orderBy(\n          poolsToSort,\n          (pool: DeserializedPool) => (pool.apr ? getAprData(pool, performanceFeeAsDecimal).apr : 0),\n          'desc',\n        )\n      case 'earned':\n        return orderBy(\n          poolsToSort,\n          (pool: DeserializedPool) => {\n            if (!pool.userData || !pool.earningTokenPrice) {\n              return 0\n            }\n            return pool.isAutoVault\n              ? getCakeVaultEarnings(\n                  account,\n                  cakeAtLastUserAction,\n                  userShares,\n                  pricePerFullShare,\n                  pool.earningTokenPrice,\n                ).autoUsdToDisplay\n              : pool.userData.pendingReward.times(pool.earningTokenPrice).toNumber()\n          },\n          'desc',\n        )\n      case 'totalStaked':\n        return orderBy(\n          poolsToSort,\n          (pool: DeserializedPool) => {\n            let totalStaked = Number.NaN\n            if (pool.isAutoVault) {\n              if (totalCakeInVault.isFinite()) {\n                totalStaked = +formatUnits(\n                  ethers.BigNumber.from(totalCakeInVault.toString()),\n                  pool.stakingToken.decimals,\n                )\n              }\n            } else if (pool.sousId === 0) {\n              if (pool.totalStaked?.isFinite() && vaultWagInFarm?.isFinite()) {\n                const manualCakeTotalMinusAutoVault = ethers.BigNumber.from(pool.totalStaked.toString()).sub(\n                  vaultWagInFarm.toString(),\n                )\n                totalStaked = +formatUnits(manualCakeTotalMinusAutoVault, pool.stakingToken.decimals)\n              }\n            } else if (pool.totalStaked?.isFinite()) {\n              totalStaked = +formatUnits(ethers.BigNumber.from(pool.totalStaked.toString()), pool.stakingToken.decimals)\n            }\n            return Number.isFinite(totalStaked) ? totalStaked : 0\n          },\n          'desc',\n        )\n      default:\n        return poolsToSort\n    }\n  }\n\n  let chosenPools\n  if (showFinishedPools) {\n    chosenPools = stakedOnly ? stakedOnlyFinishedPools : finishedPools\n  } else {\n    chosenPools = stakedOnly ? stakedOnlyOpenPools : openPools\n  }\n\n  if (searchQuery) {\n    const lowercaseQuery = latinise(searchQuery.toLowerCase())\n    chosenPools = chosenPools.filter((pool) =>\n      latinise(pool.earningToken.symbol.toLowerCase()).includes(lowercaseQuery),\n    )\n  }\n\n  chosenPools = sortPools(chosenPools).slice(0, numberOfPoolsVisible)\n  chosenPoolsLength.current = chosenPools.length\n\n  const cardLayout = (\n    <CardLayout>\n      {chosenPools.map((pool) =>\n        pool.isAutoVault ? (\n          <CakeVaultCard key=\"auto-cake\" pool={pool} showStakedOnly={stakedOnly} />\n        ) : (\n          <PoolCard key={pool.sousId} pool={pool} account={account} />\n        ),\n      )}\n    </CardLayout>\n  )\n\n  const tableLayout = <PoolsTable pools={chosenPools} account={account} userDataLoaded={userDataLoaded} />\n\n  return (\n    <>\n      <PageHeader>\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, null, 'row']}>\n          <Flex flex=\"1\" flexDirection=\"column\" mr={['8px', 0]}>\n            <Heading as=\"h1\" scale=\"xxl\" color=\"#ec9091\" mb=\"24px\">\n              {t('Zola Pools')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('Stake tokens to get')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('mouthwatering APR.')}\n            </Heading>\n          </Flex>\n          <Flex flex=\"1\" height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\n            <HelpButton />\n            <BountyCard />\n          </Flex>\n        </Flex>\n      </PageHeader>\n      <Page>\n        <PoolControls>\n          <PoolTabButtons\n            stakedOnly={stakedOnly}\n            setStakedOnly={setStakedOnly}\n            hasStakeInFinishedPools={hasStakeInFinishedPools}\n            viewMode={viewMode}\n            setViewMode={setViewMode}\n          />\n          <FilterContainer>\n            <LabelWrapper>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Sort by')}\n              </Text>\n              <ControlStretch>\n                <Select\n                  options={[\n                    {\n                      label: t('Hot'),\n                      value: 'hot',\n                    },\n                    {\n                      label: t('APR'),\n                      value: 'apr',\n                    },\n                    {\n                      label: t('Earned'),\n                      value: 'earned',\n                    },\n                    {\n                      label: t('Total staked'),\n                      value: 'totalStaked',\n                    },\n                  ]}\n                  onOptionChange={handleSortOptionChange}\n                />\n              </ControlStretch>\n            </LabelWrapper>\n            <LabelWrapper style={{ marginLeft: 16 }}>\n              <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\">\n                {t('Search')}\n              </Text>\n              <SearchInput onChange={handleChangeSearchQuery} placeholder=\"Search Pools\" />\n            </LabelWrapper>\n          </FilterContainer>\n        </PoolControls>\n        {showFinishedPools && (\n          <Text fontSize=\"20px\" color=\"failure\" pb=\"32px\">\n            {t('These pools are no longer distributing rewards. Please unstake your tokens.')}\n          </Text>\n        )}\n        {account && !userDataLoaded && stakedOnly && (\n          <Flex justifyContent=\"center\" mb=\"4px\">\n            <Loading />\n          </Flex>\n        )}\n        {viewMode === ViewMode.CARD ? cardLayout : tableLayout}\n        <div ref={observerRef} />\n      </Page>\n    </>\n  )\n}\n\nexport default Pools\n","import { Token } from '@wagyu-swap/sdk'\nimport tokens from 'config/constants/tokens'\n\nconst { bondly, safemoon } = tokens\n\ninterface WarningTokenList {\n  [key: string]: Token\n}\n\nconst SwapWarningTokens = <WarningTokenList>{}\n\nexport default SwapWarningTokens\n","import React, { useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Text, Link } from 'packages/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useENS from '../../../hooks/ENS/useENS'\nimport useActiveWeb3React from '../../../hooks/useActiveWeb3React'\nimport { AutoColumn } from '../../../components/Layout/Column'\nimport { RowBetween } from '../../../components/Layout/Row'\nimport { getVelasScanLink } from '../../../utils'\n\nconst InputPanel = styled.div`\n  display: flex;\n  flex-flow: column nowrap;\n  position: relative;\n  border-radius: 1.25rem;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  z-index: 1;\n  width: 100%;\n`\n\nconst ContainerRow = styled.div<{ error: boolean }>`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 1.25rem;\n  border: 1px solid ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.background)};\n  transition: border-color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')},\n    color 500ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n`\n\nconst InputContainer = styled.div`\n  flex: 1;\n  padding: 1rem;\n`\n\nconst Input = styled.input<{ error?: boolean }>`\n  font-size: 1.25rem;\n  outline: none;\n  border: none;\n  flex: 1 1 auto;\n  background-color: ${({ theme }) => theme.colors.backgroundAlt};\n  transition: color 300ms ${({ error }) => (error ? 'step-end' : 'step-start')};\n  color: ${({ error, theme }) => (error ? theme.colors.failure : theme.colors.primary)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n  width: 100%;\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n  padding: 0px;\n  -webkit-appearance: textfield;\n\n  ::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  ::-webkit-outer-spin-button,\n  ::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.colors.textDisabled};\n  }\n`\n\nexport default function AddressInputPanel({\n  id,\n  value,\n  onChange,\n}: {\n  id?: string\n  // the typed string value\n  value: string\n  // triggers whenever the typed value changes\n  onChange: (value: string) => void\n}) {\n  const { chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  const { address, loading, name } = useENS(value)\n\n  const handleInput = useCallback(\n    (event) => {\n      const input = event.target.value\n      const withoutSpaces = input.replace(/\\s+/g, '')\n      onChange(withoutSpaces)\n    },\n    [onChange],\n  )\n\n  const error = Boolean(value.length > 0 && !loading && !address)\n\n  return (\n    <InputPanel id={id}>\n      <ContainerRow error={error}>\n        <InputContainer>\n          <AutoColumn gap=\"md\">\n            <RowBetween>\n              <Text>{t('Recipient')}</Text>\n              {address && chainId && (\n                <Link external small href={getVelasScanLink(name ?? address, 'address', chainId)}>\n                  ({t('View on Velas Explorer')})\n                </Link>\n              )}\n            </RowBetween>\n            <Input\n              className=\"recipient-address-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoCorrect=\"off\"\n              autoCapitalize=\"off\"\n              spellCheck=\"false\"\n              placeholder={t('Wallet Address')}\n              error={error}\n              pattern=\"^(0x[a-fA-F0-9]{40})$\"\n              onChange={handleInput}\n              value={value}\n            />\n          </AutoColumn>\n        </InputContainer>\n      </ContainerRow>\n    </InputPanel>\n  )\n}\n","import React from 'react'\nimport { Text, ErrorIcon } from 'packages/uikit'\nimport styled, { css } from 'styled-components'\nimport { AutoColumn } from 'components/Layout/Column'\n\nexport const Wrapper = styled.div`\n  position: relative;\n  padding: 1rem;\n`\n\nexport const ArrowWrapper = styled.div<{ clickable: boolean }>`\n  padding: 2px;\n\n  ${({ clickable }) =>\n    clickable\n      ? css`\n          :hover {\n            cursor: pointer;\n            opacity: 0.8;\n          }\n        `\n      : null}\n`\n\nexport const ErrorText = styled(Text)<{ severity?: 0 | 1 | 2 | 3 | 4 }>`\n  color: ${({ theme, severity }) =>\n    severity === 3 || severity === 4\n      ? theme.colors.failure\n      : severity === 2\n      ? theme.colors.warning\n      : severity === 1\n      ? theme.colors.text\n      : theme.colors.success};\n`\n\nexport const StyledBalanceMaxMini = styled.button`\n  height: 22px;\n  width: 22px;\n  background-color: ${({ theme }) => theme.colors.background};\n  border: none;\n  border-radius: 50%;\n  padding: 0.2rem;\n  font-size: 0.875rem;\n  font-weight: 400;\n  margin-left: 0.4rem;\n  cursor: pointer;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  float: right;\n\n  :hover {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n  }\n  :focus {\n    background-color: ${({ theme }) => theme.colors.dropdown};\n    outline: none;\n  }\n`\n\nexport const TruncatedText = styled(Text).attrs({ ellipsis: true })`\n  width: 220px;\n`\n\nconst SwapCallbackErrorInner = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  border-radius: 1rem;\n  display: flex;\n  align-items: center;\n  font-size: 0.825rem;\n  width: 100%;\n  padding: 3rem 1.25rem 1rem 1rem;\n  margin-top: -2rem;\n  color: ${({ theme }) => theme.colors.failure};\n  z-index: -1;\n  p {\n    padding: 0;\n    margin: 0;\n    font-weight: 500;\n  }\n`\n\nconst SwapCallbackErrorInnerAlertTriangle = styled.div`\n  background-color: ${({ theme }) => `${theme.colors.failure}33`};\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 12px;\n  border-radius: 12px;\n  min-width: 48px;\n  height: 48px;\n`\n\nexport function SwapCallbackError({ error }: { error: string }) {\n  return (\n    <SwapCallbackErrorInner>\n      <SwapCallbackErrorInnerAlertTriangle>\n        <ErrorIcon width=\"24px\" />\n      </SwapCallbackErrorInnerAlertTriangle>\n      <p>{error}</p>\n    </SwapCallbackErrorInner>\n  )\n}\n\nexport const SwapShowAcceptChanges = styled(AutoColumn)`\n  background-color: ${({ theme }) => `${theme.colors.warning}33`};\n  padding: 0.5rem;\n  border-radius: 12px;\n  margin-top: 8px;\n`\n","import { Percent } from '@wagyu-swap/sdk'\nimport React from 'react'\nimport { warningSeverity } from 'utils/prices'\nimport { ONE_BIPS } from '../../../config/constants'\nimport { ErrorText } from './styleds'\n\n/**\n * Formatted version of price impact text with warning colors\n */\nexport default function FormattedPriceImpact({ priceImpact }: { priceImpact?: Percent }) {\n  return (\n    <ErrorText fontSize=\"14px\" severity={warningSeverity(priceImpact)}>\n      {priceImpact ? (priceImpact.lessThan(ONE_BIPS) ? '<0.01%' : `${priceImpact.toFixed(2)}%`) : '-'}\n    </ErrorText>\n  )\n}\n","import React, { useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Trade, TradeType } from '@wagyu-swap/sdk'\nimport { Button, Text, AutoRenewIcon } from 'packages/uikit'\nimport { Field } from 'state/swap/actions'\nimport {\n  computeSlippageAdjustedAmounts,\n  computeTradePriceBreakdown,\n  formatExecutionPrice,\n  warningSeverity,\n} from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { AutoRow, RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport { StyledBalanceMaxMini, SwapCallbackError } from './styleds'\n\nconst SwapModalFooterContainer = styled(AutoColumn)`\n  margin-top: 24px;\n  padding: 16px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border: 1px solid ${({ theme }) => theme.colors.cardBorder};\n  background-color: ${({ theme }) => theme.colors.background};\n`\n\nexport default function SwapModalFooter({\n  trade,\n  onConfirm,\n  allowedSlippage,\n  swapErrorMessage,\n  disabledConfirm,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  onConfirm: () => void\n  swapErrorMessage: string | undefined\n  disabledConfirm: boolean\n}) {\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [allowedSlippage, trade],\n  )\n  const { priceImpactWithoutFee, realizedLPFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const severity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <>\n      <SwapModalFooterContainer>\n        <RowBetween align=\"center\">\n          <Text fontSize=\"14px\">Price</Text>\n          <Text\n            fontSize=\"14px\"\n            style={{\n              justifyContent: 'center',\n              alignItems: 'center',\n              display: 'flex',\n              textAlign: 'right',\n              paddingLeft: '10px',\n            }}\n          >\n            {formatExecutionPrice(trade, showInverted)}\n            <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n              <AutoRenewIcon width=\"14px\" />\n            </StyledBalanceMaxMini>\n          </Text>\n        </RowBetween>\n\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT ? 'Minimum received' : 'Maximum sold'}\n            </Text>\n            <QuestionHelper\n              text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <RowFixed>\n            <Text fontSize=\"14px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4) ?? '-'\n                : slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4) ?? '-'}\n            </Text>\n            <Text fontSize=\"14px\" marginLeft=\"4px\">\n              {trade.tradeType === TradeType.EXACT_INPUT\n                ? trade.outputAmount.currency.symbol\n                : trade.inputAmount.currency.symbol}\n            </Text>\n          </RowFixed>\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Price Impact</Text>\n            <QuestionHelper text=\"The difference between the market price and your price due to trade size.\" ml=\"4px\" />\n          </RowFixed>\n          <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n        </RowBetween>\n        <RowBetween>\n          <RowFixed>\n            <Text fontSize=\"14px\">Liquidity Provider Fee</Text>\n            <QuestionHelper\n              text={\n                <>\n                  <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                  <Text>- 0.17% to LP token holders</Text>\n                  <Text>- 0.03% to the Treasury</Text>\n                  <Text>- 0.05% towards ZOLA buyback and burn</Text>\n                </>\n              }\n              ml=\"4px\"\n            />\n          </RowFixed>\n          <Text fontSize=\"14px\">\n            {realizedLPFee ? `${realizedLPFee?.toSignificant(6)} ${trade.inputAmount.currency.symbol}` : '-'}\n          </Text>\n        </RowBetween>\n      </SwapModalFooterContainer>\n\n      <AutoRow>\n        <Button\n          variant={severity > 2 ? 'danger' : 'primary'}\n          onClick={onConfirm}\n          disabled={disabledConfirm}\n          mt=\"12px\"\n          id=\"confirm-swap-or-send\"\n          width=\"100%\"\n        >\n          {severity > 2 ? 'Swap Anyway' : 'Confirm Swap'}\n        </Button>\n\n        {swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n      </AutoRow>\n    </>\n  )\n}\n","import React, { useMemo } from 'react'\nimport { Trade, TradeType } from '@wagyu-swap/sdk'\nimport { Button, Text, ErrorIcon, ArrowDownIcon } from 'packages/uikit'\nimport { Field } from 'state/swap/actions'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown, warningSeverity } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport { CurrencyLogo } from 'components/Logo'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport truncateHash from 'utils/truncateHash'\nimport { TruncatedText, SwapShowAcceptChanges } from './styleds'\n\nexport default function SwapModalHeader({\n  trade,\n  allowedSlippage,\n  recipient,\n  showAcceptChanges,\n  onAcceptChanges,\n}: {\n  trade: Trade\n  allowedSlippage: number\n  recipient: string | null\n  showAcceptChanges: boolean\n  onAcceptChanges: () => void\n}) {\n  const slippageAdjustedAmounts = useMemo(\n    () => computeSlippageAdjustedAmounts(trade, allowedSlippage),\n    [trade, allowedSlippage],\n  )\n  const { priceImpactWithoutFee } = useMemo(() => computeTradePriceBreakdown(trade), [trade])\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  return (\n    <AutoColumn gap=\"md\">\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.inputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={showAcceptChanges && trade.tradeType === TradeType.EXACT_OUTPUT ? 'primary' : 'text'}\n          >\n            {trade.inputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.inputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowFixed>\n        <ArrowDownIcon width=\"16px\" ml=\"4px\" />\n      </RowFixed>\n      <RowBetween align=\"flex-end\">\n        <RowFixed gap=\"0px\">\n          <CurrencyLogo currency={trade.outputAmount.currency} size=\"24px\" style={{ marginRight: '12px' }} />\n          <TruncatedText\n            fontSize=\"24px\"\n            color={\n              priceImpactSeverity > 2\n                ? 'failure'\n                : showAcceptChanges && trade.tradeType === TradeType.EXACT_INPUT\n                ? 'primary'\n                : 'text'\n            }\n          >\n            {trade.outputAmount.toSignificant(6)}\n          </TruncatedText>\n        </RowFixed>\n        <RowFixed gap=\"0px\">\n          <Text fontSize=\"24px\" ml=\"10px\">\n            {trade.outputAmount.currency.symbol}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      {showAcceptChanges ? (\n        <SwapShowAcceptChanges justify=\"flex-start\" gap=\"0px\">\n          <RowBetween>\n            <RowFixed>\n              <ErrorIcon mr=\"8px\" />\n              <Text bold> Price Updated</Text>\n            </RowFixed>\n            <Button onClick={onAcceptChanges}>Accept</Button>\n          </RowBetween>\n        </SwapShowAcceptChanges>\n      ) : null}\n      <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '24px 0 0 0px' }}>\n        {trade.tradeType === TradeType.EXACT_INPUT ? (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Output is estimated. You will receive at least `}\n            <b>\n              {slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(6)} {trade.outputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        ) : (\n          <Text small color=\"textSubtle\" textAlign=\"left\" style={{ width: '100%' }}>\n            {`Input is estimated. You will sell at most `}\n            <b>\n              {slippageAdjustedAmounts[Field.INPUT]?.toSignificant(6)} {trade.inputAmount.currency.symbol}\n            </b>\n            {' or the transaction will revert.'}\n          </Text>\n        )}\n      </AutoColumn>\n      {recipient !== null ? (\n        <AutoColumn justify=\"flex-start\" gap=\"sm\" style={{ padding: '12px 0 0 0px' }}>\n          <Text color=\"textSubtle\">\n            Output will be sent to <b title={recipient}>{truncateHash(recipient)}</b>\n          </Text>\n        </AutoColumn>\n      ) : null}\n    </AutoColumn>\n  )\n}\n","import React, { useCallback, useMemo } from 'react'\nimport { currencyEquals, Trade } from '@wagyu-swap/sdk'\nimport { InjectedModalProps } from 'packages/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from 'components/TransactionConfirmationModal'\nimport SwapModalFooter from './SwapModalFooter'\nimport SwapModalHeader from './SwapModalHeader'\n\n/**\n * Returns true if the trade requires a confirmation of details before we can submit it\n * @param tradeA trade A\n * @param tradeB trade B\n */\nfunction tradeMeaningfullyDiffers(tradeA: Trade, tradeB: Trade): boolean {\n  return (\n    tradeA.tradeType !== tradeB.tradeType ||\n    !currencyEquals(tradeA.inputAmount.currency, tradeB.inputAmount.currency) ||\n    !tradeA.inputAmount.equalTo(tradeB.inputAmount) ||\n    !currencyEquals(tradeA.outputAmount.currency, tradeB.outputAmount.currency) ||\n    !tradeA.outputAmount.equalTo(tradeB.outputAmount)\n  )\n}\ninterface ConfirmSwapModalProps {\n  trade?: Trade\n  originalTrade?: Trade\n  attemptingTxn: boolean\n  txHash?: string\n  recipient: string | null\n  allowedSlippage: number\n  onAcceptChanges: () => void\n  onConfirm: () => void\n  swapErrorMessage?: string\n  customOnDismiss?: () => void\n}\n\nconst ConfirmSwapModal: React.FC<InjectedModalProps & ConfirmSwapModalProps> = ({\n  trade,\n  originalTrade,\n  onAcceptChanges,\n  allowedSlippage,\n  onConfirm,\n  onDismiss,\n  customOnDismiss,\n  recipient,\n  swapErrorMessage,\n  attemptingTxn,\n  txHash,\n}) => {\n  const showAcceptChanges = useMemo(\n    () => Boolean(trade && originalTrade && tradeMeaningfullyDiffers(trade, originalTrade)),\n    [originalTrade, trade],\n  )\n\n  const { t } = useTranslation()\n\n  const modalHeader = useCallback(() => {\n    return trade ? (\n      <SwapModalHeader\n        trade={trade}\n        allowedSlippage={allowedSlippage}\n        recipient={recipient}\n        showAcceptChanges={showAcceptChanges}\n        onAcceptChanges={onAcceptChanges}\n      />\n    ) : null\n  }, [allowedSlippage, onAcceptChanges, recipient, showAcceptChanges, trade])\n\n  const modalBottom = useCallback(() => {\n    return trade ? (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n        allowedSlippage={allowedSlippage}\n      />\n    ) : null\n  }, [allowedSlippage, onConfirm, showAcceptChanges, swapErrorMessage, trade])\n\n  // text to show while loading\n  const pendingText = t('Swapping %amountA% %symbolA% for %amountB% %symbolB%', {\n    amountA: trade?.inputAmount?.toSignificant(6) ?? '',\n    symbolA: trade?.inputAmount?.currency?.symbol ?? '',\n    amountB: trade?.outputAmount?.toSignificant(6) ?? '',\n    symbolB: trade?.outputAmount?.currency?.symbol ?? '',\n  })\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent onDismiss={onDismiss} message={swapErrorMessage} />\n      ) : (\n        <ConfirmationModalContent topContent={modalHeader} bottomContent={modalBottom} />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage],\n  )\n\n  return (\n    <TransactionConfirmationModal\n      title={t('Confirm Swap')}\n      onDismiss={onDismiss}\n      customOnDismiss={customOnDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  )\n}\n\nexport default ConfirmSwapModal\n","import { useEffect, useState } from 'react'\n\n/**\n * Returns the last value of type T that passes a filter function\n * @param value changing value\n * @param filterFn function that determines whether a given value should be considered for the last value\n */\nfunction useLast<T>(\n  value: T | undefined | null,\n  filterFn?: (value: T | null | undefined) => boolean,\n): T | null | undefined {\n  const [last, setLast] = useState<T | null | undefined>(filterFn && filterFn(value) ? value : undefined)\n  useEffect(() => {\n    setLast((prev) => {\n      const shouldUse: boolean = filterFn ? filterFn(value) : true\n      if (shouldUse) return value\n      return prev\n    })\n  }, [filterFn, value])\n  return last\n}\n\nfunction isDefined<T>(x: T | null | undefined): x is T {\n  return x !== null && x !== undefined\n}\n\n/**\n * Returns the last truthy value of type T\n * @param value changing value\n */\nfunction useLastTruthy<T>(value: T | undefined | null): T | null | undefined {\n  return useLast(value, isDefined)\n}\n\nexport default useLastTruthy\n","import React, { Fragment, memo } from 'react'\nimport { Trade } from '@wagyu-swap/sdk'\nimport { Text, Flex, ChevronRightIcon } from 'packages/uikit'\nimport { unwrappedToken } from 'utils/wrappedCurrency'\n\nexport default memo(function SwapRoute({ trade }: { trade: Trade }) {\n  return (\n    <Flex flexWrap=\"wrap\" width=\"100%\" justifyContent=\"flex-end\" alignItems=\"center\">\n      {trade.route.path.map((token, i, path) => {\n        const isLastItem: boolean = i === path.length - 1\n        const currency = unwrappedToken(token)\n        return (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            <Flex alignItems=\"end\">\n              <Text fontSize=\"14px\" ml=\"0.125rem\" mr=\"0.125rem\">\n                {currency.symbol}\n              </Text>\n            </Flex>\n            {!isLastItem && <ChevronRightIcon width=\"12px\" />}\n          </Fragment>\n        )\n      })}\n    </Flex>\n  )\n})\n","import React from 'react'\nimport { Trade, TradeType } from '@wagyu-swap/sdk'\nimport { Text } from 'packages/uikit'\nimport { Field } from 'state/swap/actions'\nimport { useUserSlippageTolerance } from 'state/user/hooks'\nimport { computeSlippageAdjustedAmounts, computeTradePriceBreakdown } from 'utils/prices'\nimport { AutoColumn } from 'components/Layout/Column'\nimport QuestionHelper from 'components/QuestionHelper'\nimport { RowBetween, RowFixed } from 'components/Layout/Row'\nimport FormattedPriceImpact from './FormattedPriceImpact'\nimport SwapRoute from './SwapRoute'\n\nfunction TradeSummary({ trade, allowedSlippage }: { trade: Trade; allowedSlippage: number }) {\n  const { priceImpactWithoutFee, realizedLPFee } = computeTradePriceBreakdown(trade)\n  const isExactIn = trade.tradeType === TradeType.EXACT_INPUT\n  const slippageAdjustedAmounts = computeSlippageAdjustedAmounts(trade, allowedSlippage)\n\n  return (\n    <AutoColumn style={{ padding: '0 16px' }}>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            {isExactIn ? 'Minimum received' : 'Maximum sold'}\n          </Text>\n          <QuestionHelper\n            text=\"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <RowFixed>\n          <Text fontSize=\"14px\">\n            {isExactIn\n              ? `${slippageAdjustedAmounts[Field.OUTPUT]?.toSignificant(4)} ${trade.outputAmount.currency.symbol}` ??\n                '-'\n              : `${slippageAdjustedAmounts[Field.INPUT]?.toSignificant(4)} ${trade.inputAmount.currency.symbol}` ?? '-'}\n          </Text>\n        </RowFixed>\n      </RowBetween>\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Price Impact\n          </Text>\n          <QuestionHelper\n            text=\"The difference between the market price and estimated price due to trade size.\"\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <FormattedPriceImpact priceImpact={priceImpactWithoutFee} />\n      </RowBetween>\n\n      <RowBetween>\n        <RowFixed>\n          <Text fontSize=\"14px\" color=\"textSubtle\">\n            Liquidity Provider Fee\n          </Text>\n          <QuestionHelper\n            text={\n              <>\n                <Text mb=\"12px\">For each trade a 0.25% fee is paid</Text>\n                <Text>- 0.17% to LP token holders</Text>\n                <Text>- 0.03% to the Treasury</Text>\n                <Text>- 0.05% towards ZOLA buyback and burn</Text>\n              </>\n            }\n            ml=\"4px\"\n          />\n        </RowFixed>\n        <Text fontSize=\"14px\">\n          {realizedLPFee ? `${realizedLPFee.toSignificant(4)} ${trade.inputAmount.currency.symbol}` : '-'}\n        </Text>\n      </RowBetween>\n    </AutoColumn>\n  )\n}\n\nexport interface AdvancedSwapDetailsProps {\n  trade?: Trade\n}\n\nexport function AdvancedSwapDetails({ trade }: AdvancedSwapDetailsProps) {\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  const showRoute = Boolean(trade && trade.route.path.length > 2)\n\n  return (\n    <AutoColumn gap=\"0px\">\n      {trade && (\n        <>\n          <TradeSummary trade={trade} allowedSlippage={allowedSlippage} />\n          {showRoute && (\n            <>\n              <RowBetween style={{ padding: '0 16px' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                  <Text fontSize=\"14px\" color=\"textSubtle\">\n                    Route\n                  </Text>\n                  <QuestionHelper\n                    text=\"Routing through these tokens resulted in the best price for your trade.\"\n                    ml=\"4px\"\n                  />\n                </span>\n                <SwapRoute trade={trade} />\n              </RowBetween>\n            </>\n          )}\n        </>\n      )}\n    </AutoColumn>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport useLastTruthy from 'hooks/useLast'\nimport { AdvancedSwapDetails, AdvancedSwapDetailsProps } from './AdvancedSwapDetails'\n\nconst AdvancedDetailsFooter = styled.div<{ show: boolean }>`\n  z-index: ${({ show }) => (show ? 1 : 0)};\n  margin-top: ${({ show }) => (show ? '16px' : 0)};\n  padding-top: 16px;\n  padding-bottom: 16px;\n  width: 100%;\n  max-width: 400px;\n  border-radius: 20px;\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\n\n  transform: ${({ show }) => (show ? 'translateY(0%)' : 'translateY(-100%)')};\n  transition: transform 300ms ease-in-out;\n`\n\nexport default function AdvancedSwapDetailsDropdown({ trade, ...rest }: AdvancedSwapDetailsProps) {\n  const lastTrade = useLastTruthy(trade)\n\n  return (\n    <AdvancedDetailsFooter show={Boolean(trade)}>\n      <AdvancedSwapDetails {...rest} trade={trade ?? lastTrade ?? undefined} />\n    </AdvancedDetailsFooter>\n  )\n}\n","import React from 'react'\nimport { Price } from '@wagyu-swap/sdk'\nimport { Text, AutoRenewIcon } from 'packages/uikit'\nimport { StyledBalanceMaxMini } from './styleds'\n\ninterface TradePriceProps {\n  price?: Price\n  showInverted: boolean\n  setShowInverted: (showInverted: boolean) => void\n}\n\nexport default function TradePrice({ price, showInverted, setShowInverted }: TradePriceProps) {\n  const formattedPrice = showInverted ? price?.toSignificant(6) : price?.invert()?.toSignificant(6)\n\n  const show = Boolean(price?.baseCurrency && price?.quoteCurrency)\n  const label = showInverted\n    ? `${price?.quoteCurrency?.symbol} per ${price?.baseCurrency?.symbol}`\n    : `${price?.baseCurrency?.symbol} per ${price?.quoteCurrency?.symbol}`\n\n  return (\n    <Text style={{ justifyContent: 'center', alignItems: 'center', display: 'flex' }}>\n      {show ? (\n        <>\n          {formattedPrice ?? '-'} {label}\n          <StyledBalanceMaxMini onClick={() => setShowInverted(!showInverted)}>\n            <AutoRenewIcon width=\"14px\" />\n          </StyledBalanceMaxMini>\n        </>\n      ) : (\n        '-'\n      )}\n    </Text>\n  )\n}\n","import React from 'react'\nimport { Token } from '@wagyu-swap/sdk'\nimport { Modal, InjectedModalProps } from 'packages/uikit'\nimport ImportToken from 'components/SearchModal/ImportToken'\n\ninterface Props extends InjectedModalProps {\n  tokens: Token[]\n  onCancel: () => void\n}\n\nconst ImportTokenWarningModal: React.FC<Props> = ({ tokens, onDismiss, onCancel }) => {\n  return (\n    <Modal\n      title=\"Import Token\"\n      onDismiss={() => {\n        if (onDismiss) {\n          onDismiss()\n        }\n        onCancel()\n      }}\n      style={{ maxWidth: '420px' }}\n    >\n      <ImportToken tokens={tokens} handleCurrencySelect={onDismiss} />\n    </Modal>\n  )\n}\n\nexport default ImportTokenWarningModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowBetween } from 'components/Layout/Row'\nimport { AutoColumn } from 'components/Layout/Column'\n\nconst Grouping = styled(RowBetween)`\n  width: 50%;\n`\n\nconst Circle = styled.div<{ confirmed?: boolean; disabled?: boolean }>`\n  min-width: 20px;\n  min-height: 20px;\n  background-color: ${({ theme, confirmed, disabled }) =>\n    disabled ? theme.colors.backgroundDisabled : confirmed ? theme.colors.success : theme.colors.primary};\n  border-radius: 50%;\n  color: #ffffff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 8px;\n  font-size: 12px;\n`\n\nconst CircleRow = styled.div`\n  width: calc(100% - 20px);\n  display: flex;\n  align-items: center;\n`\n\nconst Connector = styled.div<{ prevConfirmed?: boolean; disabled?: boolean }>`\n  width: 100%;\n  height: 2px;\n  background: linear-gradient(\n    90deg,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled ? theme.colors.backgroundDisabled : prevConfirmed ? theme.colors.success : theme.colors.primary}\n      0%,\n    ${({ theme, prevConfirmed, disabled }) =>\n        disabled\n          ? theme.colors.backgroundDisabled\n          : prevConfirmed\n          ? theme.colors.primary\n          : theme.colors.backgroundDisabled}\n      80%\n  );\n  opacity: 0.6;\n`\n\ninterface ProgressCirclesProps {\n  steps: boolean[]\n  disabled?: boolean\n}\n\n/**\n * Based on array of steps, create a step counter of circles.\n * A circle can be enabled, disabled, or confirmed. States are derived\n * from previous step.\n *\n * An extra circle is added to represent the ability to swap, add, or remove.\n * This step will never be marked as complete (because no 'txn done' state in body ui).\n *\n * @param steps  array of booleans where true means step is complete\n */\nexport default function ProgressCircles({ steps, disabled = false, ...rest }: ProgressCirclesProps) {\n  return (\n    <AutoColumn justify=\"center\" {...rest}>\n      <Grouping>\n        {steps.map((step, i) => {\n          return (\n            // eslint-disable-next-line react/no-array-index-key\n            <CircleRow key={i}>\n              <Circle confirmed={step} disabled={disabled || (!steps[i - 1] && i !== 0)}>\n                {step ? '✓' : i + 1}\n              </Circle>\n              <Connector prevConfirmed={step} disabled={disabled} />\n            </CircleRow>\n          )\n        })}\n        <Circle disabled={disabled || !steps[steps.length - 1]}>{steps.length + 1}</Circle>\n      </Grouping>\n    </AutoColumn>\n  )\n}\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\nimport { JSBI, Percent, Router, SwapParameters, Trade, TradeType } from '@wagyu-swap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { useGasPrice } from 'state/user/hooks'\nimport truncateHash from 'utils/truncateHash'\nimport { BIPS_BASE, INITIAL_ALLOWED_SLIPPAGE } from '../config/constants'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { calculateGasMargin, getRouterContract, isAddress } from '../utils'\nimport isZero from '../utils/isZero'\nimport useTransactionDeadline from './useTransactionDeadline'\nimport useENS from './ENS/useENS'\n\nexport enum SwapCallbackState {\n  INVALID,\n  LOADING,\n  VALID,\n}\n\ninterface SwapCall {\n  contract: Contract\n  parameters: SwapParameters\n}\n\ninterface SuccessfulCall {\n  call: SwapCall\n  gasEstimate: BigNumber\n}\n\ninterface FailedCall {\n  call: SwapCall\n  error: Error\n}\n\ntype EstimatedSwapCall = SuccessfulCall | FailedCall\n\n/**\n * Returns the swap calls that can be used to make the trade\n * @param trade trade to execute\n * @param allowedSlippage user allowed slippage\n * @param recipientAddressOrName\n */\nfunction useSwapCallArguments(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): SwapCall[] {\n  const { account, chainId, library } = useActiveWeb3React()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n  const deadline = useTransactionDeadline()\n\n  return useMemo(() => {\n    if (!trade || !recipient || !library || !account || !chainId || !deadline) return []\n\n    const contract: Contract | null = getRouterContract(chainId, library, account)\n    if (!contract) {\n      return []\n    }\n\n    const swapMethods = []\n\n    swapMethods.push(\n      Router.swapCallParameters(trade, {\n        feeOnTransfer: false,\n        allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n        recipient,\n        deadline: deadline.toNumber(),\n      }),\n    )\n\n    if (trade.tradeType === TradeType.EXACT_INPUT) {\n      swapMethods.push(\n        Router.swapCallParameters(trade, {\n          feeOnTransfer: true,\n          allowedSlippage: new Percent(JSBI.BigInt(allowedSlippage), BIPS_BASE),\n          recipient,\n          deadline: deadline.toNumber(),\n        }),\n      )\n    }\n\n    return swapMethods.map((parameters) => ({ parameters, contract }))\n  }, [account, allowedSlippage, chainId, deadline, library, recipient, trade])\n}\n\n// returns a function that will execute a swap, if the parameters are all valid\n// and the user has approved the slippage adjusted input amount for the trade\nexport function useSwapCallback(\n  trade: Trade | undefined, // trade to execute, required\n  allowedSlippage: number = INITIAL_ALLOWED_SLIPPAGE, // in bips\n  recipientAddressOrName: string | null, // the ENS name or address of the recipient of the trade, or null if swap should be returned to sender\n): { state: SwapCallbackState; callback: null | (() => Promise<string>); error: string | null } {\n  const { account, chainId, library } = useActiveWeb3React()\n  const gasPrice = useGasPrice()\n\n  const swapCalls = useSwapCallArguments(trade, allowedSlippage, recipientAddressOrName)\n\n  const addTransaction = useTransactionAdder()\n\n  const { address: recipientAddress } = useENS(recipientAddressOrName)\n  const recipient = recipientAddressOrName === null ? account : recipientAddress\n\n  return useMemo(() => {\n    if (!trade || !library || !account || !chainId) {\n      return { state: SwapCallbackState.INVALID, callback: null, error: 'Missing dependencies' }\n    }\n    if (!recipient) {\n      if (recipientAddressOrName !== null) {\n        return { state: SwapCallbackState.INVALID, callback: null, error: 'Invalid recipient' }\n      }\n      return { state: SwapCallbackState.LOADING, callback: null, error: null }\n    }\n\n    return {\n      state: SwapCallbackState.VALID,\n      callback: async function onSwap(): Promise<string> {\n        const estimatedCalls: EstimatedSwapCall[] = await Promise.all(\n          swapCalls.map((call) => {\n            const {\n              parameters: { methodName, args, value },\n              contract,\n            } = call\n            const options = !value || isZero(value) ? {} : { value }\n\n            return contract.estimateGas[methodName](...args, options)\n              .then((gasEstimate) => {\n                return {\n                  call,\n                  gasEstimate,\n                }\n              })\n              .catch((gasError) => {\n                console.error('Gas estimate failed, trying eth_call to extract error', call)\n\n                return contract.callStatic[methodName](...args, options)\n                  .then((result) => {\n                    console.error('Unexpected successful call after failed estimate gas', call, gasError, result)\n                    return { call, error: new Error('Unexpected issue with estimating the gas. Please try again.') }\n                  })\n                  .catch((callError) => {\n                    console.error('Call threw error', call, callError)\n                    const reason: string = callError.reason || callError.data?.message || callError.message\n                    const errorMessage = `The transaction cannot succeed due to error: ${\n                      reason ?? 'Unknown error, check the logs'\n                    }.`\n\n                    return { call, error: new Error(errorMessage) }\n                  })\n              })\n          }),\n        )\n\n        // a successful estimation is a bignumber gas estimate and the next call is also a bignumber gas estimate\n        const successfulEstimation = estimatedCalls.find(\n          (el, ix, list): el is SuccessfulCall =>\n            'gasEstimate' in el && (ix === list.length - 1 || 'gasEstimate' in list[ix + 1]),\n        )\n\n        if (!successfulEstimation) {\n          const errorCalls = estimatedCalls.filter((call): call is FailedCall => 'error' in call)\n          if (errorCalls.length > 0) throw errorCalls[errorCalls.length - 1].error\n          throw new Error('Unexpected error. Please contact support: none of the calls threw an error')\n        }\n\n        const {\n          call: {\n            contract,\n            parameters: { methodName, args, value },\n          },\n          gasEstimate,\n        } = successfulEstimation\n\n        return contract[methodName](...args, {\n          gasLimit: calculateGasMargin(gasEstimate),\n          gasPrice,\n          ...(value && !isZero(value) ? { value, from: account } : { from: account }),\n        })\n          .then((response: any) => {\n            const inputSymbol = trade.inputAmount.currency.symbol\n            const outputSymbol = trade.outputAmount.currency.symbol\n            const inputAmount = trade.inputAmount.toSignificant(3)\n            const outputAmount = trade.outputAmount.toSignificant(3)\n\n            const base = `Swap ${inputAmount} ${inputSymbol} for ${outputAmount} ${outputSymbol}`\n            const withRecipient =\n              recipient === account\n                ? base\n                : `${base} to ${\n                    recipientAddressOrName && isAddress(recipientAddressOrName)\n                      ? truncateHash(recipientAddressOrName)\n                      : recipientAddressOrName\n                  }`\n\n            addTransaction(response, {\n              summary: withRecipient,\n            })\n\n            return response.hash\n          })\n          .catch((error: any) => {\n            // if the user rejected the tx, pass this along\n            if (error?.code === 4001) {\n              throw new Error('Transaction rejected.')\n            } else {\n              // otherwise, the error was unexpected and we need to convey that\n              console.error(`Swap failed`, error, methodName, args, value)\n              throw new Error(`Swap failed: ${error.message}`)\n            }\n          })\n      },\n      error: null,\n    }\n  }, [trade, library, account, chainId, recipient, recipientAddressOrName, swapCalls, addTransaction, gasPrice])\n}\n","import { Currency, currencyEquals, ETHER, WETH } from '@wagyu-swap/sdk'\nimport { useMemo } from 'react'\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\nimport { tryParseAmount } from '../state/swap/hooks'\nimport { useTransactionAdder } from '../state/transactions/hooks'\nimport { useCurrencyBalance } from '../state/wallet/hooks'\nimport { useWETHContract } from './useContract'\nimport { useCallWithGasPrice } from './useCallWithGasPrice'\n\nexport enum WrapType {\n  NOT_APPLICABLE,\n  WRAP,\n  UNWRAP,\n}\n\nconst NOT_APPLICABLE = { wrapType: WrapType.NOT_APPLICABLE }\n/**\n * Given the selected input and output currency, return a wrap callback\n * @param inputCurrency the selected input currency\n * @param outputCurrency the selected output currency\n * @param typedValue the user input value\n */\nexport default function useWrapCallback(\n  inputCurrency: Currency | undefined,\n  outputCurrency: Currency | undefined,\n  typedValue: string | undefined,\n): { wrapType: WrapType; execute?: undefined | (() => Promise<void>); inputError?: string } {\n  const { chainId, account } = useActiveWeb3React()\n  const { callWithGasPrice } = useCallWithGasPrice()\n  const wethContract = useWETHContract()\n  const balance = useCurrencyBalance(account ?? undefined, inputCurrency)\n  // we can always parse the amount typed as the input currency, since wrapping is 1:1\n  const inputAmount = useMemo(() => tryParseAmount(typedValue, inputCurrency), [inputCurrency, typedValue])\n  const addTransaction = useTransactionAdder()\n\n  return useMemo(() => {\n    if (!wethContract || !chainId || !inputCurrency || !outputCurrency) return NOT_APPLICABLE\n\n    const sufficientBalance = inputAmount && balance && !balance.lessThan(inputAmount)\n\n    if (inputCurrency === ETHER && currencyEquals(WETH[chainId], outputCurrency)) {\n      return {\n        wrapType: WrapType.WRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await callWithGasPrice(wethContract, 'deposit', undefined, {\n                    value: `0x${inputAmount.raw.toString(16)}`,\n                  })\n                  addTransaction(txReceipt, { summary: `Wrap ${inputAmount.toSignificant(6)} MATIC to WMATIC` })\n                } catch (error) {\n                  console.error('Could not deposit', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient MATIC balance',\n      }\n    }\n    if (currencyEquals(WETH[chainId], inputCurrency) && outputCurrency === ETHER) {\n      return {\n        wrapType: WrapType.UNWRAP,\n        execute:\n          sufficientBalance && inputAmount\n            ? async () => {\n                try {\n                  const txReceipt = await callWithGasPrice(wethContract, 'withdraw', [\n                    `0x${inputAmount.raw.toString(16)}`,\n                  ])\n                  addTransaction(txReceipt, { summary: `Unwrap ${inputAmount.toSignificant(6)} WMATIC to MATIC` })\n                } catch (error) {\n                  console.error('Could not withdraw', error)\n                }\n              }\n            : undefined,\n        inputError: sufficientBalance ? undefined : 'Insufficient WMATIC balance',\n      }\n    }\n    return NOT_APPLICABLE\n  }, [wethContract, chainId, inputCurrency, outputCurrency, inputAmount, balance, addTransaction, callWithGasPrice])\n}\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from 'packages/uikit'\n\nconst SafemoonWarning = () => {\n  const { t } = useTranslation()\n\n  return (\n    <>\n      <Text>{t('To trade SAFEMOON, you must:')} </Text>\n      <Text>• {t('Click on the settings icon')}</Text>\n      <Text mb=\"24px\">• {t('Set your slippage tolerance to 12%+')}</Text>\n      <Text>{t('This is because SafeMoon taxes a 10% fee on each transaction:')}</Text>\n      <Text>• {t('5% fee = redistributed to all existing holders')}</Text>\n      <Text>• {t('5% fee = used to add liquidity')}</Text>\n    </>\n  )\n}\n\nexport default SafemoonWarning\n","import React from 'react'\nimport { Text } from 'packages/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst BondlyWarning = () => {\n  const { t } = useTranslation()\n\n  return <Text>{t('Warning: BONDLY has been compromised. Please remove liqudity until further notice.')}</Text>\n}\n\nexport default BondlyWarning\n","import React, { useState } from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text, Flex, Checkbox, Button } from 'packages/uikit'\n\ninterface AcknowledgementProps {\n  handleContinueClick: () => void\n}\n\nconst Acknowledgement: React.FC<AcknowledgementProps> = ({ handleContinueClick }) => {\n  const { t } = useTranslation()\n  const [isConfirmed, setIsConfirmed] = useState(false)\n\n  return (\n    <>\n      <Flex justifyContent=\"space-between\">\n        <Flex alignItems=\"center\">\n          <Checkbox\n            name=\"confirmed\"\n            type=\"checkbox\"\n            checked={isConfirmed}\n            onChange={() => setIsConfirmed(!isConfirmed)}\n            scale=\"sm\"\n          />\n          <Text ml=\"10px\" style={{ userSelect: 'none' }}>\n            {t('I understand')}\n          </Text>\n        </Flex>\n\n        <Button disabled={!isConfirmed} onClick={handleContinueClick}>\n          {t('Continue')}\n        </Button>\n      </Flex>\n    </>\n  )\n}\n\nexport default Acknowledgement\n","import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ModalBody, ModalContainer, Message, ModalHeader, Box, Heading } from 'packages/uikit'\nimport useTheme from 'hooks/useTheme'\nimport { useTranslation } from 'contexts/Localization'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport SwapWarningTokensConfig from 'config/constants/swapWarningTokens'\nimport SafemoonWarning from './SafemoonWarning'\nimport BondlyWarning from './BondlyWarning'\nimport Acknowledgement from './Acknowledgement'\n\nconst StyledModalContainer = styled(ModalContainer)`\n  max-width: 440px;\n`\n\nconst MessageContainer = styled(Message)`\n  align-items: flex-start;\n  justify-content: flex-start;\n`\n\ninterface SwapWarningModalProps {\n  swapCurrency: WrappedTokenInfo\n  onDismiss?: () => void\n}\n\n// Modal is fired by a useEffect and doesn't respond to closeOnOverlayClick prop being set to false\nconst usePreventModalOverlayClick = () => {\n  useEffect(() => {\n    const preventClickHandler = (e) => {\n      e.stopPropagation()\n      e.preventDefault()\n      return false\n    }\n\n    document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n      el.addEventListener('click', preventClickHandler, true)\n    })\n\n    return () => {\n      document.querySelectorAll('[role=\"presentation\"]').forEach((el) => {\n        el.removeEventListener('click', preventClickHandler, true)\n      })\n    }\n  }, [])\n}\n\nconst SwapWarningModal: React.FC<SwapWarningModalProps> = ({ swapCurrency, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  usePreventModalOverlayClick()\n\n  const TOKEN_WARNINGS = {\n    [SwapWarningTokensConfig.safemoon.address]: {\n      symbol: SwapWarningTokensConfig.safemoon.symbol,\n      component: <SafemoonWarning />,\n    },\n    [SwapWarningTokensConfig.bondly.address]: {\n      symbol: SwapWarningTokensConfig.bondly.symbol,\n      component: <BondlyWarning />,\n    },\n  }\n\n  const SWAP_WARNING = TOKEN_WARNINGS[swapCurrency.address]\n\n  return (\n    <StyledModalContainer minWidth=\"280px\">\n      <ModalHeader background={theme.colors.gradients.cardHeader}>\n        <Heading p=\"12px 24px\">{t('Notice for trading %symbol%', { symbol: SWAP_WARNING.symbol })}</Heading>\n      </ModalHeader>\n      <ModalBody p=\"24px\">\n        <MessageContainer variant=\"warning\" mb=\"24px\">\n          <Box>{SWAP_WARNING.component}</Box>\n        </MessageContainer>\n        <Acknowledgement handleContinueClick={onDismiss} />\n      </ModalBody>\n    </StyledModalContainer>\n  )\n}\n\nexport default SwapWarningModal\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { CurrencyAmount, JSBI, Token, Trade } from '@wagyu-swap/sdk'\nimport { Button, Text, ArrowDownIcon, Box, useModal } from 'packages/uikit'\nimport { useIsTransactionUnsupported } from 'hooks/Trades'\nimport UnsupportedCurrencyFooter from 'components/UnsupportedCurrencyFooter'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { useTranslation } from 'contexts/Localization'\nimport SwapWarningTokens from 'config/constants/swapWarningTokens'\nimport AddressInputPanel from './components/AddressInputPanel'\nimport { GreyCard } from '../../components/Card'\nimport Column, { AutoColumn } from '../../components/Layout/Column'\nimport ConfirmSwapModal from './components/ConfirmSwapModal'\nimport CurrencyInputPanel from '../../components/CurrencyInputPanel'\nimport { AutoRow, RowBetween } from '../../components/Layout/Row'\nimport AdvancedSwapDetailsDropdown from './components/AdvancedSwapDetailsDropdown'\nimport confirmPriceImpactWithoutFee from './components/confirmPriceImpactWithoutFee'\nimport { ArrowWrapper, SwapCallbackError, Wrapper } from './components/styleds'\nimport TradePrice from './components/TradePrice'\nimport ImportTokenWarningModal from './components/ImportTokenWarningModal'\nimport ProgressSteps from './components/ProgressSteps'\nimport { AppHeader, AppBody } from '../../components/App'\nimport ConnectWalletButton from '../../components/ConnectWalletButton'\n\nimport { INITIAL_ALLOWED_SLIPPAGE } from '../../config/constants'\nimport useActiveWeb3React from '../../hooks/useActiveWeb3React'\nimport { useCurrency, useAllTokens } from '../../hooks/Tokens'\nimport { ApprovalState, useApproveCallbackFromTrade } from '../../hooks/useApproveCallback'\nimport { useSwapCallback } from '../../hooks/useSwapCallback'\nimport useWrapCallback, { WrapType } from '../../hooks/useWrapCallback'\nimport { Field } from '../../state/swap/actions'\nimport {\n  useDefaultsFromURLSearch,\n  useDerivedSwapInfo,\n  useSwapActionHandlers,\n  useSwapState,\n} from '../../state/swap/hooks'\nimport { useExpertModeManager, useUserSlippageTolerance, useUserSingleHopOnly } from '../../state/user/hooks'\nimport { maxAmountSpend } from '../../utils/maxAmountSpend'\nimport { computeTradePriceBreakdown, warningSeverity } from '../../utils/prices'\nimport CircleLoader from '../../components/Loader/CircleLoader'\nimport Page from '../Page'\nimport SwapWarningModal from './components/SwapWarningModal'\n\nconst Label = styled(Text)`\n  font-size: 12px;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.secondary};\n`\n\nexport default function Swap({ history }: RouteComponentProps) {\n  const loadedUrlParams = useDefaultsFromURLSearch()\n\n  const { t } = useTranslation()\n\n  // token warning stuff\n  const [loadedInputCurrency, loadedOutputCurrency] = [\n    useCurrency(loadedUrlParams?.inputCurrencyId),\n    useCurrency(loadedUrlParams?.outputCurrencyId),\n  ]\n  const urlLoadedTokens: Token[] = useMemo(\n    () => [loadedInputCurrency, loadedOutputCurrency]?.filter((c): c is Token => c instanceof Token) ?? [],\n    [loadedInputCurrency, loadedOutputCurrency],\n  )\n\n  // dismiss warning if all imported tokens are in active lists\n  const defaultTokens = useAllTokens()\n  const importTokensNotInDefault =\n    urlLoadedTokens &&\n    urlLoadedTokens.filter((token: Token) => {\n      return !(token.address in defaultTokens)\n    })\n\n  const { account } = useActiveWeb3React()\n\n  // for expert mode\n  const [isExpertMode] = useExpertModeManager()\n\n  // get custom setting values for user\n  const [allowedSlippage] = useUserSlippageTolerance()\n\n  // swap state\n  const { independentField, typedValue, recipient } = useSwapState()\n  const { v2Trade, currencyBalances, parsedAmount, currencies, inputError: swapInputError } = useDerivedSwapInfo()\n\n  const {\n    wrapType,\n    execute: onWrap,\n    inputError: wrapInputError,\n  } = useWrapCallback(currencies[Field.INPUT], currencies[Field.OUTPUT], typedValue)\n  const showWrap: boolean = wrapType !== WrapType.NOT_APPLICABLE\n  const trade = showWrap ? undefined : v2Trade\n\n  const parsedAmounts = showWrap\n    ? {\n        [Field.INPUT]: parsedAmount,\n        [Field.OUTPUT]: parsedAmount,\n      }\n    : {\n        [Field.INPUT]: independentField === Field.INPUT ? parsedAmount : trade?.inputAmount,\n        [Field.OUTPUT]: independentField === Field.OUTPUT ? parsedAmount : trade?.outputAmount,\n      }\n\n  const { onSwitchTokens, onCurrencySelection, onUserInput, onChangeRecipient } = useSwapActionHandlers()\n  const isValid = !swapInputError\n  const dependentField: Field = independentField === Field.INPUT ? Field.OUTPUT : Field.INPUT\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      onUserInput(Field.INPUT, value)\n    },\n    [onUserInput],\n  )\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      onUserInput(Field.OUTPUT, value)\n    },\n    [onUserInput],\n  )\n\n  // modal and loading\n  const [{ tradeToConfirm, swapErrorMessage, attemptingTxn, txHash }, setSwapState] = useState<{\n    tradeToConfirm: Trade | undefined\n    attemptingTxn: boolean\n    swapErrorMessage: string | undefined\n    txHash: string | undefined\n  }>({\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  })\n\n  const formattedAmounts = {\n    [independentField]: typedValue,\n    [dependentField]: showWrap\n      ? parsedAmounts[independentField]?.toExact() ?? ''\n      : parsedAmounts[dependentField]?.toSignificant(6) ?? '',\n  }\n\n  const route = trade?.route\n  const userHasSpecifiedInputOutput = Boolean(\n    currencies[Field.INPUT] && currencies[Field.OUTPUT] && parsedAmounts[independentField]?.greaterThan(JSBI.BigInt(0)),\n  )\n  const noRoute = !route\n\n  // check whether the user has approved the router on the input token\n  const [approval, approveCallback] = useApproveCallbackFromTrade(trade, allowedSlippage)\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false)\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const maxAmountInput: CurrencyAmount | undefined = maxAmountSpend(currencyBalances[Field.INPUT])\n  const atMaxAmountInput = Boolean(maxAmountInput && parsedAmounts[Field.INPUT]?.equalTo(maxAmountInput))\n\n  // the callback to execute the swap\n  const { callback: swapCallback, error: swapCallbackError } = useSwapCallback(trade, allowedSlippage, recipient)\n\n  const { priceImpactWithoutFee } = computeTradePriceBreakdown(trade)\n\n  const [singleHopOnly] = useUserSingleHopOnly()\n\n  const handleSwap = useCallback(() => {\n    if (priceImpactWithoutFee && !confirmPriceImpactWithoutFee(priceImpactWithoutFee)) {\n      return\n    }\n    if (!swapCallback) {\n      return\n    }\n    setSwapState({ attemptingTxn: true, tradeToConfirm, swapErrorMessage: undefined, txHash: undefined })\n    swapCallback()\n      .then((hash) => {\n        setSwapState({ attemptingTxn: false, tradeToConfirm, swapErrorMessage: undefined, txHash: hash })\n      })\n      .catch((error) => {\n        setSwapState({\n          attemptingTxn: false,\n          tradeToConfirm,\n          swapErrorMessage: error.message,\n          txHash: undefined,\n        })\n      })\n  }, [priceImpactWithoutFee, swapCallback, tradeToConfirm])\n\n  // errors\n  const [showInverted, setShowInverted] = useState<boolean>(false)\n\n  // warnings on slippage\n  const priceImpactSeverity = warningSeverity(priceImpactWithoutFee)\n\n  // show approve flow when: no error on inputs, not approved or pending, or approved in current session\n  // never show if price impact is above threshold in non expert mode\n  const showApproveFlow =\n    !swapInputError &&\n    (approval === ApprovalState.NOT_APPROVED ||\n      approval === ApprovalState.PENDING ||\n      (approvalSubmitted && approval === ApprovalState.APPROVED)) &&\n    !(priceImpactSeverity > 3 && !isExpertMode)\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({ tradeToConfirm, attemptingTxn, swapErrorMessage, txHash })\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      onUserInput(Field.INPUT, '')\n    }\n  }, [attemptingTxn, onUserInput, swapErrorMessage, tradeToConfirm, txHash])\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({ tradeToConfirm: trade, swapErrorMessage, txHash, attemptingTxn })\n  }, [attemptingTxn, swapErrorMessage, trade, txHash])\n\n  // swap warning state\n  const [swapWarningCurrency, setSwapWarningCurrency] = useState(null)\n  const [onPresentSwapWarningModal] = useModal(<SwapWarningModal swapCurrency={swapWarningCurrency} />)\n\n  const shouldShowSwapWarning = (swapCurrency) => {\n    const isWarningToken = Object.entries(SwapWarningTokens).find((warningTokenConfig) => {\n      const warningTokenData = warningTokenConfig[1]\n      return swapCurrency.address === warningTokenData.address\n    })\n    return Boolean(isWarningToken)\n  }\n\n  useEffect(() => {\n    if (swapWarningCurrency) {\n      onPresentSwapWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [swapWarningCurrency])\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      setApprovalSubmitted(false) // reset 2 step UI for approvals\n      onCurrencySelection(Field.INPUT, inputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(inputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(inputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n    [onCurrencySelection],\n  )\n\n  const handleMaxInput = useCallback(() => {\n    if (maxAmountInput) {\n      onUserInput(Field.INPUT, maxAmountInput.toExact())\n    }\n  }, [maxAmountInput, onUserInput])\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => {\n      onCurrencySelection(Field.OUTPUT, outputCurrency)\n      const showSwapWarning = shouldShowSwapWarning(outputCurrency)\n      if (showSwapWarning) {\n        setSwapWarningCurrency(outputCurrency)\n      } else {\n        setSwapWarningCurrency(null)\n      }\n    },\n\n    [onCurrencySelection],\n  )\n\n  const swapIsUnsupported = useIsTransactionUnsupported(currencies?.INPUT, currencies?.OUTPUT)\n\n  const [onPresentImportTokenWarningModal] = useModal(\n    <ImportTokenWarningModal tokens={importTokensNotInDefault} onCancel={() => history.push('/swap')} />,\n  )\n\n  useEffect(() => {\n    if (importTokensNotInDefault.length > 0) {\n      onPresentImportTokenWarningModal()\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importTokensNotInDefault.length])\n\n  const [onPresentConfirmModal] = useModal(\n    <ConfirmSwapModal\n      trade={trade}\n      originalTrade={tradeToConfirm}\n      onAcceptChanges={handleAcceptChanges}\n      attemptingTxn={attemptingTxn}\n      txHash={txHash}\n      recipient={recipient}\n      allowedSlippage={allowedSlippage}\n      onConfirm={handleSwap}\n      swapErrorMessage={swapErrorMessage}\n      customOnDismiss={handleConfirmDismiss}\n    />,\n    true,\n    true,\n    'confirmSwapModal',\n  )\n\n  return (\n    <Page bgUrl=\"/images/swap/bg3307-2.png\">\n      <AppBody>\n        <AppHeader title={t('Exchange')} subtitle={t('Trade tokens in an instant')} />\n        <Wrapper id=\"swap-page\">\n          <AutoColumn gap=\"md\">\n            <CurrencyInputPanel\n              label={independentField === Field.OUTPUT && !showWrap && trade ? t('From (estimated)') : t('From')}\n              value={formattedAmounts[Field.INPUT]}\n              showMaxButton={!atMaxAmountInput}\n              currency={currencies[Field.INPUT]}\n              onUserInput={handleTypeInput}\n              onMax={handleMaxInput}\n              onCurrencySelect={handleInputSelect}\n              otherCurrency={currencies[Field.OUTPUT]}\n              id=\"swap-currency-input\"\n            />\n            <AutoColumn justify=\"space-between\">\n              <AutoRow justify={isExpertMode ? 'space-between' : 'center'} style={{ padding: '0 1rem' }}>\n                <ArrowWrapper clickable>\n                  <ArrowDownIcon\n                    width=\"16px\"\n                    onClick={() => {\n                      setApprovalSubmitted(false) // reset 2 step UI for approvals\n                      onSwitchTokens()\n                    }}\n                    color={currencies[Field.INPUT] && currencies[Field.OUTPUT] ? 'primary' : 'text'}\n                  />\n                </ArrowWrapper>\n                {recipient === null && !showWrap && isExpertMode ? (\n                  <Button variant=\"text\" id=\"add-recipient-button\" onClick={() => onChangeRecipient('')}>\n                    {t('+ Add a send (optional)')}\n                  </Button>\n                ) : null}\n              </AutoRow>\n            </AutoColumn>\n            <CurrencyInputPanel\n              value={formattedAmounts[Field.OUTPUT]}\n              onUserInput={handleTypeOutput}\n              label={independentField === Field.INPUT && !showWrap && trade ? t('To (estimated)') : t('To')}\n              showMaxButton={false}\n              currency={currencies[Field.OUTPUT]}\n              onCurrencySelect={handleOutputSelect}\n              otherCurrency={currencies[Field.INPUT]}\n              id=\"swap-currency-output\"\n            />\n\n            {isExpertMode && recipient !== null && !showWrap ? (\n              <>\n                <AutoRow justify=\"space-between\" style={{ padding: '0 1rem' }}>\n                  <ArrowWrapper clickable={false}>\n                    <ArrowDownIcon width=\"16px\" />\n                  </ArrowWrapper>\n                  <Button variant=\"text\" id=\"remove-recipient-button\" onClick={() => onChangeRecipient(null)}>\n                    {t('- Remove send')}\n                  </Button>\n                </AutoRow>\n                <AddressInputPanel id=\"recipient\" value={recipient} onChange={onChangeRecipient} />\n              </>\n            ) : null}\n\n            {showWrap ? null : (\n              <AutoColumn gap=\"8px\" style={{ padding: '0 16px' }}>\n                {Boolean(trade) && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Price')}</Label>\n                    <TradePrice\n                      price={trade?.executionPrice}\n                      showInverted={showInverted}\n                      setShowInverted={setShowInverted}\n                    />\n                  </RowBetween>\n                )}\n                {allowedSlippage !== INITIAL_ALLOWED_SLIPPAGE && (\n                  <RowBetween align=\"center\">\n                    <Label>{t('Slippage Tolerance')}</Label>\n                    <Text bold color=\"primary\">\n                      {allowedSlippage / 100}%\n                    </Text>\n                  </RowBetween>\n                )}\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <Box mt=\"1rem\">\n            {swapIsUnsupported ? (\n              <Button width=\"100%\" disabled mb=\"4px\">\n                {t('Unsupported Asset')}\n              </Button>\n            ) : !account ? (\n              <ConnectWalletButton width=\"100%\" />\n            ) : showWrap ? (\n              <Button width=\"100%\" disabled={Boolean(wrapInputError)} onClick={onWrap}>\n                {wrapInputError ??\n                  (wrapType === WrapType.WRAP ? 'Wrap' : wrapType === WrapType.UNWRAP ? 'Unwrap' : null)}\n              </Button>\n            ) : noRoute && userHasSpecifiedInputOutput ? (\n              <GreyCard style={{ textAlign: 'center' }}>\n                <Text color=\"textSubtle\" mb=\"4px\">\n                  {t('Insufficient liquidity for this trade.')}\n                </Text>\n                {singleHopOnly && (\n                  <Text color=\"textSubtle\" mb=\"4px\">\n                    {t('Try enabling multi-hop trades.')}\n                  </Text>\n                )}\n              </GreyCard>\n            ) : showApproveFlow ? (\n              <RowBetween>\n                <Button\n                  variant={approval === ApprovalState.APPROVED ? 'success' : 'primary'}\n                  onClick={approveCallback}\n                  disabled={approval !== ApprovalState.NOT_APPROVED || approvalSubmitted}\n                  width=\"48%\"\n                >\n                  {approval === ApprovalState.PENDING ? (\n                    <AutoRow gap=\"6px\" justify=\"center\">\n                      {t('Enabling')} <CircleLoader stroke=\"white\" />\n                    </AutoRow>\n                  ) : approvalSubmitted && approval === ApprovalState.APPROVED ? (\n                    t('Enabled')\n                  ) : (\n                    t('Enable %asset%', { asset: currencies[Field.INPUT]?.symbol ?? '' })\n                  )}\n                </Button>\n                <Button\n                  variant={isValid && priceImpactSeverity > 2 ? 'danger' : 'primary'}\n                  onClick={() => {\n                    if (isExpertMode) {\n                      handleSwap()\n                    } else {\n                      setSwapState({\n                        tradeToConfirm: trade,\n                        attemptingTxn: false,\n                        swapErrorMessage: undefined,\n                        txHash: undefined,\n                      })\n                      onPresentConfirmModal()\n                    }\n                  }}\n                  width=\"48%\"\n                  id=\"swap-button\"\n                  disabled={\n                    !isValid || approval !== ApprovalState.APPROVED || (priceImpactSeverity > 3 && !isExpertMode)\n                  }\n                >\n                  {priceImpactSeverity > 3 && !isExpertMode\n                    ? t('Price Impact High')\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap')}\n                </Button>\n              </RowBetween>\n            ) : (\n              <Button\n                variant={isValid && priceImpactSeverity > 2 && !swapCallbackError ? 'danger' : 'primary'}\n                onClick={() => {\n                  if (isExpertMode) {\n                    handleSwap()\n                  } else {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      txHash: undefined,\n                    })\n                    onPresentConfirmModal()\n                  }\n                }}\n                id=\"swap-button\"\n                width=\"100%\"\n                disabled={!isValid || (priceImpactSeverity > 3 && !isExpertMode) || !!swapCallbackError}\n              >\n                {swapInputError ||\n                  (priceImpactSeverity > 3 && !isExpertMode\n                    ? `Price Impact Too High`\n                    : priceImpactSeverity > 2\n                    ? t('Swap Anyway')\n                    : t('Swap'))}\n              </Button>\n            )}\n            {showApproveFlow && (\n              <Column style={{ marginTop: '1rem' }}>\n                <ProgressSteps steps={[approval === ApprovalState.APPROVED]} />\n              </Column>\n            )}\n            {isExpertMode && swapErrorMessage ? <SwapCallbackError error={swapErrorMessage} /> : null}\n          </Box>\n        </Wrapper>\n      </AppBody>\n      {!swapIsUnsupported ? (\n        <AdvancedSwapDetailsDropdown trade={trade} />\n      ) : (\n        <UnsupportedCurrencyFooter currencies={[currencies.INPUT, currencies.OUTPUT]} />\n      )}\n    </Page>\n  )\n}\n","import { Percent } from '@wagyu-swap/sdk'\nimport { ALLOWED_PRICE_IMPACT_HIGH, PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN } from '../../../config/constants'\n\n/**\n * Given the price impact, get user confirmation.\n *\n * @param priceImpactWithoutFee price impact of the trade without the fee.\n */\nexport default function confirmPriceImpactWithoutFee(priceImpactWithoutFee: Percent): boolean {\n  if (!priceImpactWithoutFee.lessThan(PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN)) {\n    return (\n      // eslint-disable-next-line no-alert\n      window.prompt(\n        `This swap has a price impact of at least ${PRICE_IMPACT_WITHOUT_FEE_CONFIRM_MIN.toFixed(\n          0,\n        )}%. Please type the word \"confirm\" to continue with this swap.`,\n      ) === 'confirm'\n    )\n  }\n  if (!priceImpactWithoutFee.lessThan(ALLOWED_PRICE_IMPACT_HIGH)) {\n    // eslint-disable-next-line no-alert\n    return window.confirm(\n      `This swap has a price impact of at least ${ALLOWED_PRICE_IMPACT_HIGH.toFixed(\n        0,\n      )}%. Please confirm that you would like to continue with this swap.`,\n    )\n  }\n  return true\n}\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\nimport AddLiquidity from './index'\n\nexport function RedirectToAddLiquidity() {\n  return <Redirect to=\"/add/\" />\n}\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40}|MATIC)-(0x[a-fA-F0-9]{40}|MATIC)$/\nexport function RedirectOldAddLiquidityPathStructure(props: RouteComponentProps<{ currencyIdA: string }>) {\n  const {\n    match: {\n      params: { currencyIdA },\n    },\n  } = props\n  const match = currencyIdA.match(OLD_PATH_STRUCTURE)\n  if (match?.length) {\n    return <Redirect to={`/add/${match[1]}/${match[2]}`} />\n  }\n\n  return <AddLiquidity {...props} />\n}\n\nexport function RedirectDuplicateTokenIds(props: RouteComponentProps<{ currencyIdA: string; currencyIdB: string }>) {\n  const {\n    match: {\n      params: { currencyIdA, currencyIdB },\n    },\n  } = props\n  if (currencyIdA.toLowerCase() === currencyIdB.toLowerCase()) {\n    return <Redirect to={`/add/${currencyIdA}`} />\n  }\n  return <AddLiquidity {...props} />\n}\n","import React from 'react'\nimport { RouteComponentProps, Redirect } from 'react-router-dom'\n\nconst OLD_PATH_STRUCTURE = /^(0x[a-fA-F0-9]{40})-(0x[a-fA-F0-9]{40})$/\n\nfunction RedirectOldRemoveLiquidityPathStructure({\n  match: {\n    params: { tokens },\n  },\n}: RouteComponentProps<{ tokens: string }>) {\n  if (!OLD_PATH_STRUCTURE.test(tokens)) {\n    return <Redirect to=\"/pool\" />\n  }\n  const [currency0, currency1] = tokens.split('-')\n\n  return <Redirect to={`/remove/${currency0}/${currency1}`} />\n}\nexport default RedirectOldRemoveLiquidityPathStructure\n","import React from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\n\n// Redirects to swap but only replace the pathname\nexport function RedirectPathToSwapOnly({ location }: RouteComponentProps) {\n  return <Redirect to={{ ...location, pathname: '/swap' }} />\n}\n\n// Redirects from the /swap/:outputCurrency path to the /swap?outputCurrency=:outputCurrency format\nexport function RedirectToSwap(props: RouteComponentProps<{ outputCurrency: string }>) {\n  const {\n    location,\n    location: { search },\n    match: {\n      params: { outputCurrency },\n    },\n  } = props\n\n  return (\n    <Redirect\n      to={{\n        ...location,\n        pathname: '/swap',\n        search:\n          search && search.length > 1\n            ? `${search}&outputCurrency=${outputCurrency}`\n            : `?outputCurrency=${outputCurrency}`,\n      }}\n    />\n  )\n}\n","import React, { lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from 'packages/uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { usePollBlockNumber } from 'state/block/hooks'\nimport { usePollCoreFarmData } from 'state/farms/hooks'\nimport { useFetchProfile } from 'state/profile/hooks'\nimport { DatePickerPortal } from 'components/DatePicker'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport { ToastListener } from './contexts/ToastsContext'\nimport PageLoader from './components/Loader/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport history from './routerHistory'\n// Views included in the main bundle\nimport Pools from './views/Pools'\nimport Swap from './views/Swap'\nimport {\n  RedirectDuplicateTokenIds,\n  RedirectOldAddLiquidityPathStructure,\n  RedirectToAddLiquidity,\n} from './views/AddLiquidity/redirects'\nimport RedirectOldRemoveLiquidityPathStructure from './views/RemoveLiquidity/redirects'\nimport { RedirectPathToSwapOnly, RedirectToSwap } from './views/Swap/redirects'\nimport GlobalCheckClaimStatus from './views/Collectibles/components/GlobalCheckClaimStatus'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Farms = lazy(() => import('./views/Farms'))\nconst Lottery = lazy(() => import('./views/Lottery'))\n// const Ifos = lazy(() => import('./views/Ifos'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst AddLiquidity = lazy(() => import('./views/AddLiquidity'))\nconst Liquidity = lazy(() => import('./views/Pool'))\nconst PoolFinder = lazy(() => import('./views/PoolFinder'))\nconst RemoveLiquidity = lazy(() => import('./views/RemoveLiquidity'))\nconst Info = lazy(() => import('./views/Info'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  usePollBlockNumber()\n  useEagerConnect()\n  useFetchProfile()\n  usePollCoreFarmData()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      {/* <GlobalCheckClaimStatus excludeLocations={['/collectibles']} /> */}\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              {/* <Home /> */}\n              <Redirect to=\"/swap\" />\n            </Route>\n            {/* <Route exact path=\"/farms/auction\">\n              <FarmAuction />\n            </Route> */}\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/lottery\">\n              <Lottery />\n            </Route>\n            {/* <Route path=\"/ifo\">\n              <Ifos />\n            </Route> */}\n            {/* <Route path=\"/collectibles\">\n              <Collectibles />\n            </Route>\n            <Route exact path=\"/teams\">\n              <Teams />\n            </Route>\n            <Route path=\"/teams/:id\">\n              <Team />\n            </Route>\n            <Route path=\"/profile\">\n              <Profile />\n            </Route>\n            <Route path=\"/competition\">\n              <TradingCompetition />\n            </Route>\n            <Route exact path=\"/prediction\">\n              <Predictions />\n            </Route>\n            <Route path=\"/prediction/leaderboard\">\n              <PredictionsLeaderboard />\n            </Route>\n            <Route exact path=\"/voting\">\n              <Voting />\n            </Route>\n            <Route exact path=\"/voting/proposal/create\">\n              <CreateProposal />\n            </Route>\n            <Route path=\"/voting/proposal/:id\">\n              <Proposal />\n            </Route> */}\n            {/* Info pages */}\n            <Route path=\"/info\">\n              <Info />\n            </Route>\n\n            {/* Using this format because these components use routes injected props. We need to rework them with hooks */}\n            <Route exact strict path=\"/swap\" component={Swap} />\n            <Route exact strict path=\"/swap/:outputCurrency\" component={RedirectToSwap} />\n            <Route exact strict path=\"/send\" component={RedirectPathToSwapOnly} />\n            <Route exact strict path=\"/find\" component={PoolFinder} />\n            <Route exact strict path=\"/liquidity\" component={Liquidity} />\n            <Route exact strict path=\"/create\" component={RedirectToAddLiquidity} />\n            <Route exact path=\"/add\" component={AddLiquidity} />\n            <Route exact path=\"/add/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/add/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact path=\"/create\" component={AddLiquidity} />\n            <Route exact path=\"/create/:currencyIdA\" component={RedirectOldAddLiquidityPathStructure} />\n            <Route exact path=\"/create/:currencyIdA/:currencyIdB\" component={RedirectDuplicateTokenIds} />\n            <Route exact strict path=\"/remove/:tokens\" component={RedirectOldRemoveLiquidityPathStructure} />\n            <Route exact strict path=\"/remove/:currencyIdA/:currencyIdB\" component={RemoveLiquidity} />\n\n            {/* Redirect */}\n            <Route path=\"/pool\">\n              <Redirect to=\"/liquidity\" />\n            </Route>\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            {/* <Route path=\"/nft\">\n              <Redirect to=\"/collectibles\" />\n            </Route> */}\n\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n      <DatePickerPortal />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider, light, dark } from 'packages/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { ThemeProvider } from 'styled-components'\nimport { useThemeManager } from 'state/user/hooks'\nimport { getLibrary } from 'utils/web3React'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\nconst ThemeProviderWrapper = (props) => {\n  const [isDark] = useThemeManager()\n  return <ThemeProvider theme={isDark ? dark : light} {...props} />\n}\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeProviderWrapper>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeProviderWrapper>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React, { useMemo, ReactNode } from 'react'\nimport ReactDOM from 'react-dom'\nimport useActiveWeb3React from './hooks/useActiveWeb3React'\nimport { BLOCKED_ADDRESSES } from './config/constants'\nimport ListsUpdater from './state/lists/updater'\nimport MulticallUpdater from './state/multicall/updater'\nimport TransactionUpdater from './state/transactions/updater'\nimport App from './App'\nimport Providers from './Providers'\n\nfunction Updaters() {\n  return (\n    <>\n      <ListsUpdater />\n      <TransactionUpdater />\n      <MulticallUpdater />\n    </>\n  )\n}\n\nfunction Blocklist({ children }: { children: ReactNode }) {\n  const { account } = useActiveWeb3React()\n  const blocked: boolean = useMemo(() => Boolean(account && BLOCKED_ADDRESSES.indexOf(account) !== -1), [account])\n  if (blocked) {\n    return <div>Blocked address</div>\n  }\n  return <>{children}</>\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Blocklist>\n      <Providers>\n        <Updaters />\n        <App />\n      </Providers>\n    </Blocklist>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}